{
  "flow": {
    "onboarding": {
      "$contentActions": [
        {
          "input": {
            "bypass": false,
            "$cardContent": {
              "document": {
                "id": "f0ca97f4-def6-4a5a-a759-3e2d4e308b97",
                "type": "text/plain",
                "content": "User input"
              },
              "editable": false,
              "deletable": false,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [
        {
          "stateId": "90012e4b-5d01-4143-9515-c42e09307f38",
          "conditions": [{ "source": "input", "comparison": "matches", "values": [".*"] }],
          "$id": "7d4628ff-521e-4eb8-b3a3-f1ca5b2423b5",
          "$connId": "con_3",
          "$invalid": false
        }
      ],
      "$enteringCustomActions": [],
      "$leavingCustomActions": [
        {
          "$id": "27abaf5c-9156-4413-9357-3788f948bb64",
          "$typeOfContent": "",
          "type": "SetVariable",
          "$title": "Set variable - firstContent",
          "$invalid": false,
          "settings": { "variable": "firstContent", "value": "{{input.content}}" },
          "conditions": []
        }
      ],
      "$inputSuggestions": [],
      "$defaultOutput": { "stateId": "fallback", "$invalid": false },
      "$tags": [
        {
          "id": "blip-tag-30ba117e-70ce-4920-bdc1-bb865b19d05f",
          "label": "SetVariable",
          "background": "#FF4A1E",
          "canChangeBackground": false
        },
        {
          "id": "blip-tag-9f7d70c1-d16e-498e-99f9-509a19534e09",
          "label": "UserInput",
          "background": "#000000",
          "canChangeBackground": false
        }
      ],
      "id": "onboarding",
      "root": true,
      "$title": "Start",
      "$position": { "top": "2389px", "left": "810px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false,
      "addonsComments": {
        "8d535958-ce9c-4ef9-b47f-647405d9eba4": {
          "id": "8d535958-ce9c-4ef9-b47f-647405d9eba4",
          "text": "Bloco de planos apartado por usar outra lógica",
          "blocksIdList": ["3cffb76e-dba6-43b1-b5ae-88306bf03100"]
        },
        "24064da8-def8-450d-878d-96f003359920": {
          "id": "24064da8-def8-450d-878d-96f003359920",
          "text": "Direcionamento para bloco de menu de planos e demais blocos de menu \"Genérico\"",
          "blocksIdList": ["581f4a60-ea31-4342-9169-27cf65ed783e"]
        }
      }
    },
    "fallback": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "6654d589-7f7f-4773-8ef9-cddbc5056531",
                "type": "text/plain",
                "content": "User input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [
        {
          "stateId": "d1ecc360-8837-4c09-8dd5-308b14b4dc4c",
          "conditions": [{ "source": "input", "comparison": "matches", "values": [".*"] }],
          "$id": "b63e9daa-3306-4f9f-8396-83221bd3b4b2",
          "$connId": "con_8",
          "$invalid": false
        }
      ],
      "$enteringCustomActions": [],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": { "stateId": "onboarding", "$invalid": false },
      "$tags": [],
      "id": "fallback",
      "$title": "Exceptions",
      "$position": { "top": "4790px", "left": "880px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false
    },
    "d66facef-49cc-4cd5-9654-31ab480be848": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "8e7256cb-0a99-4db1-a161-c9df62656050",
                "type": "text/plain",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [
        {
          "stateId": "43b2f980-75df-4843-a66e-d3a962a203bd",
          "typeOfStateId": "state",
          "$connId": "con_13",
          "$id": "0b8eec39-0e09-452a-9c41-c2d2352a3064",
          "conditions": [
            { "source": "context", "comparison": "equals", "values": ["whatsapp"], "variable": "channelJs" }
          ],
          "$invalid": false
        },
        {
          "stateId": "9261578a-b315-4f15-8d6d-cc3176cde37e",
          "typeOfStateId": "state",
          "$connId": "con_18",
          "$id": "ddaad37f-06ae-4c5f-a571-1296b6f8d24f",
          "conditions": [{ "source": "input", "comparison": "exists", "values": [] }],
          "$invalid": false
        }
      ],
      "$enteringCustomActions": [
        {
          "$id": "4422050a-85bd-4f2f-b504-2933856b72df",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - channelJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(tunnelOriginator) {\n  try {\n    return getUserChannel(tunnelOriginator);\n  } catch (error) {\n    return \"blip\";\n  }\n}\n\nfunction getUserChannel(tunnelOriginator) {\n  const contactChannelIdentifier = tunnelOriginator.split(\"@\")[1];\n\n  const whatsAppChannels = {\n    \"whatsapp-smarters.com.withub.ai\": \"whatsapp\",\n    \"whatsapp.com.withub.ai\": \"whatsapp\",\n    \"wa.gw.msging.net\": \"whatsapp\",\n    \"meta-whatsapp.com.withub.ai\": \"whatsapp\",\n  };\n\n  const blipChannels = {\n    \"webchat.com.withub.ai\": \"blip\",\n    \"0mn.io\": \"blip\",\n  };\n\n  const telegramChannels = {\n    \"telegram.com.withub.ai\": \"telegram\",\n    \"telegram.gw.msging.net\": \"telegram\",\n  };\n\n  const intagramChannels = {\n    \"instagram.com.withub.ai\": \"instagram\",\n    \"instagram.gw.msging.net\": \"instagram\",\n  };\n\n  const messengerChannels = {\n    \"messenger.com.withub.ai\": \"messenger\",\n    \"messenger.gw.msging.net\": \"messenger\",\n  };\n\n  const mappingChannel = {\n    ...whatsAppChannels,\n    ...blipChannels,\n    ...telegramChannels,\n    ...intagramChannels,\n    ...messengerChannels,\n  };\n\n  return mappingChannel[contactChannelIdentifier];\n}",
            "inputVariables": ["tunnel.originator"],
            "outputVariable": "channelJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": [],
          "continueOnError": true
        },
        {
          "$id": "b510fc0e-ecb3-4dcd-a270-14c823f9811e",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - formatterJson",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(channel) {\n  try {\n    const formatterJson = {\n      openBold: {\n        blip: \"<b>\",\n        whatsapp: \"*\",\n        messenger: \"\",\n        identifier: \"<b>|{openBold}\",\n      },\n      closeBold: {\n        blip: \"</b>\",\n        whatsapp: \"*\",\n        messenger: \"\",\n        identifier: \"</b>|{closeBold}\",\n      },\n      openItalic: {\n        blip: \"<i>\",\n        whatsapp: \"_\",\n        messenger: \"\",\n        identifier: \"<i>|{openItalic}\",\n      },\n      closeItalic: {\n        blip: \"</i>\",\n        whatsapp: \"_\",\n        messenger: \"\",\n        identifier: \"</i>|{closeItalic}\",\n      },\n      openStrike: {\n        blip: \"<strike>\",\n        whatsapp: \"~\",\n        messenger: \"\",\n        identifier: \"<strike>|{openStrike}\",\n      },\n      closeStrike: {\n        blip: \"</strike>\",\n        whatsapp: \"~\",\n        messenger: \"\",\n        identifier: \"</strike>|{closeStrike}\",\n      },\n      lineBreak: {\n        blip: \"<br />\",\n        whatsapp: \"\\n\",\n        messenger: \"\\n\",\n        identifier: \"<br[s]*/>|{lineBreak}\",\n      },\n      lineBreakByObject: {\n        blip: \"<br />\",\n        whatsapp: \"\\\\n\",\n        identifier: \"<br[s]*/>|{lineBreakByObject}\",\n      },\n    };\n\n    const openBold = formatterJson.openBold[channel] || \"\";\n    const closeBold = formatterJson.closeBold[channel] || \"\";\n    const openItalic = formatterJson.openItalic[channel] || \"\";\n    const closeItalic = formatterJson.closeItalic[channel] || \"\";\n    const openStrike = formatterJson.openStrike[channel] || \"\";\n    const closeStrike = formatterJson.closeStrike[channel] || \"\";\n    const lineBreak = formatterJson.lineBreak[channel] || \"\";\n    const lineBreakByObject = formatterJson.lineBreakByObject[channel] || \"\";\n\n    const openBoldIdentifier = formatterJson.openBold.identifier || \"\";\n    const closeBoldIdentifier = formatterJson.closeBold.identifier || \"\";\n    const openItalicIdentifier = formatterJson.openItalic.identifier || \"\";\n    const closeItalicIdentifier = formatterJson.closeItalic.identifier || \"\";\n    const openStrikeIdentifier = formatterJson.openStrike.identifier || \"\";\n    const closeStrikeIdentifier = formatterJson.closeStrike.identifier || \"\";\n    const lineBreakIdentifier = formatterJson.lineBreak.identifier || \"\";\n    const lineBreakByObjectIdentifier = formatterJson.lineBreakByObject.identifier || \"\";\n\n\n    const objectWithAllFormatters = {\n      openBold,\n      closeBold,\n      openItalic,\n      closeItalic,\n      openStrike,\n      closeStrike,\n      lineBreak,\n      lineBreakByObject,\n      identifiers: {\n        openBold: openBoldIdentifier,\n        closeBold: closeBoldIdentifier,\n        openItalic: openItalicIdentifier,\n        closeItalic: closeItalicIdentifier,\n        openStrike: openStrikeIdentifier,\n        closeStrike: closeStrikeIdentifier,\n        lineBreak: lineBreakIdentifier,\n        lineBreakByObject: lineBreakByObjectIdentifier,\n      },\n    };\n\n    return objectWithAllFormatters;\n  } catch (e) {\n    return {};\n  }\n}\n",
            "inputVariables": ["channelJs"],
            "outputVariable": "formatterJson",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "52ce873d-e649-41d0-9010-50649ee49cb7",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - testerPhoneJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(tunnelOriginator, channelJs) {\n  try {\n    if (channelJs == \"blip\") {\n      return true;\n    }\n\n    const defaultTesterPhone = {\n      felipe: \"555195532447\",\n      regis: \"551688205388\",\n    };\n\n    const allTesterPhone = { ...defaultTesterPhone };\n\n    const allTestersNumbers = verifyIsValidPhoneNumber(allTesterPhone);\n\n    let tunnelOriginatorNumber = tunnelOriginator.split(\"@\")[0].slice(2);\n\n    if (tunnelOriginatorNumber.length == 11)\n      tunnelOriginatorNumber = tunnelOriginatorNumber.slice(0, 2) + tunnelOriginatorNumber.slice(3);\n\n    const isInternTester = allTestersNumbers.includes(tunnelOriginatorNumber);\n\n    if (isInternTester) return true;\n\n    return false;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction verifyIsValidPhoneNumber(allNumbers) {\n  const allValidNumbersForTunnelOriginator = Object.values(allNumbers).reduce(\n    (acc, everyPhoneNumber) => {\n      if (everyPhoneNumber.length == 10) acc.push(everyPhoneNumber);\n      if (everyPhoneNumber.length == 11)\n        acc.push(`${everyPhoneNumber.slice(0, 2)}${everyPhoneNumber.slice(3)}`);\n      if (everyPhoneNumber.length == 12) acc.push(everyPhoneNumber.slice(2));\n      return acc;\n    },\n    []\n  );\n\n  return allValidNumbersForTunnelOriginator;\n}",
            "inputVariables": ["tunnel.originator", "channelJs"],
            "outputVariable": "testerPhoneJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "8f4e84a7-bb6e-458d-8d2e-fcf0f12aae2b",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - debugJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(inputContent, testerPhoneJs, channelJs) {\n  if (channelJs == \"blip\") {\n    return true;\n  }\n\n  let debugStatus = false;\n\n  try {\n    testerPhoneJs = JSON.parse(testerPhoneJs);\n\n    if (!testerPhoneJs) {\n      throw \"This number is not a tester phone\";\n    }\n\n    const debugTags = [\"#debug\", \"#testLocal\", \"#testUrl\"];\n\n    debugStatus = debugTags.includes(inputContent);\n  } catch (e) {}\n  return debugStatus;\n}",
            "inputVariables": ["firstContent", "testerPhoneJs", "channelJs"],
            "outputVariable": "debugJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "a25746aa-17e2-43a4-8efd-bcb6aee05d08",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - menusRegexDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run() {\n  try {\n    const allFreeInputBaseRegex = {\n      validDDD: \"0?([1-9]{2})\",\n      validZipCode: \"([0-9]{8})\",\n      validAddressNumber: \"(([0-9]{1,6})|(sn)|(sem)(num?e?r?o?)?|(na?o?)(tem)|(lote)|(quadra))\",\n      validCPF: \"([0-9]{11})\",\n      validRG: \"((\\\\d{9,11})(x?))\",\n      validCNPJ: \"([0-9]{14})\",\n      validPhone: \"(?>(?>55)?0?)([1-9]{2}\\\\d{8,9})\",\n      validEmail: \"(([\\\\w._-]{1,300})@([\\\\w._-]{2,100}))\",\n      validAddresOptionalData: \"(\\\\w{3,250})\",\n      validName: \"(\\\\w{3,250})\",\n      validDueDay: \"^((\\\\d){1,2})$\",\n      validFinalize: \"^(encerr?ar?|finali[sz]ar?|sair?|fechar?)$\",\n      validGoBack: \"^(voltar?)$\",\n    };\n\n    const defaultRegexData = {\n      menuPattern: \"^({numericMenuOption})$|^(quero)?(a)?(op[cç][aã]o)?({numericMenuOption})(do)?(menu)?$\",\n      plansPattern: \"^(quero)?(o)?(plano)?({numericMenuOption})(do)?(menu)?$\",\n      dataToExclude: `${allFreeInputBaseRegex.validFinalize}|${allFreeInputBaseRegex.validGoBack}|^(meu)?(email(e?)|endereco(e?)|telefone(e?))?`,\n      onlyNumbers: \"\\\\d{1,20}\",\n      defaultFreeInputOption: \"\\\\w{3,300}\",\n    };\n\n    const allMenuOptionRegex = {\n      yes: \"^({numericMenuOption})?((s[i]{0,10}m?)|(ah[aã]{0,10}m)|(aceito)){1,5}|confirmar?$\",\n      no: \"^({numericMenuOption})?(n[aã]{0,10}[o]{0,10}){1,2}$\",\n      finalize: \"^({numericMenuOption})?(encerr?ar?)(atendimento)?$\",\n    };\n\n    const allMenuRegexOptionsWithMenuPattern = mountMenuOptionsRegexData(\n      defaultRegexData.menuPattern,\n      allMenuOptionRegex\n    );\n\n    const mountedFreeInputRegex = {\n      // askNewNumberDDD: allFreeInputBaseRegex.validDDD,\n      // askPortabilityNumber: allFreeInputBaseRegex.validPhone,\n      askClientName: allFreeInputBaseRegex.validName,\n      askClientCPF: allFreeInputBaseRegex.validCPF,\n      askClientEmail: allFreeInputBaseRegex.validEmail,\n      askDependentName: allFreeInputBaseRegex.validName,\n      askDependentCPF: allFreeInputBaseRegex.validCPF,\n      // askClientRG: allFreeInputBaseRegex.validRG,\n      // askBusinessCNPJ: allFreeInputBaseRegex.validCNPJ,\n      // askBusinessPhone: allFreeInputBaseRegex.validPhone,\n      // askBusinessOwnerName: allFreeInputBaseRegex.validName,\n      // askBusinessCPF: allFreeInputBaseRegex.validCPF,\n      // askBusinessEmail: allFreeInputBaseRegex.validEmail,\n      // askBusinessRG: allFreeInputBaseRegex.validRG,\n      askZipCode: allFreeInputBaseRegex.validZipCode,\n      askNumber: allFreeInputBaseRegex.validAddressNumber,\n      askComplement: allFreeInputBaseRegex.validAddresOptionalData,\n      askRoadName: allFreeInputBaseRegex.validAddresOptionalData,\n      askNeighborhood: allFreeInputBaseRegex.validAddresOptionalData,\n      // askDueDay: allFreeInputBaseRegex.validDueDay,\n    };\n\n    const allRegexData = mountAllRegexDataInLowerCase(\n      defaultRegexData,\n      allMenuRegexOptionsWithMenuPattern,\n      allFreeInputBaseRegex,\n      mountedFreeInputRegex\n    );\n\n    return allRegexData;\n  } catch (e) {\n    return { hasBroked: true, brokenMsg: e.message };\n  }\n}\n\nfunction mountMenuOptionsRegexData(menuPatternData, menuOptionsRegex) {\n  const allMenuRegexData = Object.keys(menuOptionsRegex).reduce((acc, everyRegexKey) => {\n    acc[everyRegexKey] = `${menuPatternData}|${menuOptionsRegex[everyRegexKey]}`;\n    return acc;\n  }, {});\n  return allMenuRegexData;\n}\n\nfunction mountAllRegexDataInLowerCase(...allRegexObjects) {\n  const allRegexInLowerCase = allRegexObjects.reduce((acc, everyRegexGroup) => {\n    Object.keys(everyRegexGroup).forEach((everyRegexKey) => {\n      const regexKeyInLowerCase = everyRegexKey.toLowerCase();\n      acc[regexKeyInLowerCase] = everyRegexGroup[everyRegexKey];\n    });\n    return acc;\n  }, {});\n  return allRegexInLowerCase;\n}\n",
            "inputVariables": [],
            "outputVariable": "menusRegexDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "61ae12ca-0ea8-44d2-8971-2e503b07fdaa",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - apiDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run() {\n  try {\n    const apiData = { url: \"https://microcheckout.m2digital.com.br/api\" }\n    return apiData\n  } catch (e) {\n    return \"error\";\n  }\n}\n",
            "inputVariables": [],
            "outputVariable": "apiDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "fc164920-584d-4742-9e8e-1b4221a25d23",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "idOriginSite",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(inputContent) {\n  try {\n    const regexCompound = /COD: (\\d+)/i;\n    const regexMatch = inputContent.match(regexCompound);\n\n    if (regexMatch) {\n      return parseInt(regexMatch[1]);\n    }\n  } catch (e) {}\n\n  return null;\n}\n",
            "inputVariables": ["input.content"],
            "outputVariable": "idOriginSite",
            "LocalTimeZoneEnabled": false
          },
          "conditions": [],
          "continueOnError": true
        },
        {
          "$id": "b3b9f97f-79d6-4ce2-b6af-6c0fd0772e3c",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - userContextJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(routerName, contactName, contactNumber, channelJs, idOriginSite) {\n  try {\n    const formattedRouterName = routerName.split(\"@\")[0];\n\n    const checkedContactName = checkContactName(channelJs, contactName);\n\n    const checkedContactNumber = checkContactNumber(channelJs, contactNumber);\n\n    const formattedContactNumber = formatContactNumber(checkedContactNumber);\n\n    const dataToReturn = {\n      idOriginSite,\n      siteName: \"{{resource.companyData@siteName}}\",\n      siteId: \"{{resource.companyData@siteId}}\",\n      xOrigin: \"{{resource.companyData@xOrigin}}\",\n      routerName: formattedRouterName,\n      userName: checkedContactName,\n      userPhoneNumber: checkedContactNumber,\n      userPhoneDDD: checkedContactNumber.slice(0, 2),\n      formattedUserPhoneNumber: formattedContactNumber,\n      forceSetPlanIds: false,\n      specificCampaignName: \"initializeFlow\",\n      askPlanModality: \"Anual\",\n    };\n\n    return dataToReturn;\n  } catch (e) {\n    return \"error\";\n  }\n}\n\nfunction checkContactName(channelJs, contactName) {\n  const defaultTestName = \"Teste\";\n  if (channelJs == \"blip\") {\n    return defaultTestName;\n  }\n  return contactName;\n}\n\nfunction checkContactNumber(channelJs, contactNumber) {\n  const defaultTestNumber = \"51999999999\";\n  if (channelJs == \"blip\") {\n    return defaultTestNumber;\n  }\n  const formattedContactNumber = contactNumber.split(\"@\")[0].slice(2);\n  return formattedContactNumber;\n}\n\nfunction formatContactNumber(checkedContactNumber) {\n  const onlyDDD = checkedContactNumber.slice(0, 2);\n  const onlyNumber = checkedContactNumber.slice(2);\n\n  const formattedPhone = `(${onlyDDD}) ${onlyNumber.slice(0, 5)}-${onlyNumber.slice(5)}`;\n  return formattedPhone;\n}",
            "inputVariables": [
              "tunnel.owner",
              "contact.name",
              "contact.identity",
              "channelJs",
              "idOriginSite"
            ],
            "outputVariable": "userContextJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "c0202206-5d5b-42dd-8999-4925d9463602",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - defaultBlocksIdsJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run() {\n  const mappedData = {\n    broked: \"37f6ea15-cf65-4884-b3f8-d59043fcf767\",\n    checkInputAndInvalid: \"bf55166f-db6c-4c40-b27f-fb6114c51963\",\n    invalid: \"27a09aa8-a92c-4c7e-967c-5784953a8a9d\",\n    changeCampaignName: \"88e36bb9-657a-4df6-8aee-32720d3706e2\",\n    checkInactivityConditions: \"331e65ba-b9c5-4c30-86af-daf5dddb6882\",\n    flowsUpdateByUserContext: \"cc8ddc3c-9e25-4bbf-b4a0-fd47de2467db\"\n  };\n  return mappedData;\n}",
            "inputVariables": [],
            "outputVariable": "defaultBlocksIdsJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": { "stateId": "fallback", "$invalid": false },
      "$tags": [
        {
          "id": "blip-tag-cd162f3c-0a53-4feb-b649-0d4a7b76921e",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        }
      ],
      "id": "d66facef-49cc-4cd5-9654-31ab480be848",
      "$title": "globalVariables",
      "$position": { "top": "2378px", "left": "1440px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false
    },
    "90012e4b-5d01-4143-9515-c42e09307f38": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "bf5aa5f5-3c55-420d-9b4e-46e7a0cacde7",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [
        {
          "stateId": "onboarding",
          "typeOfStateId": "state",
          "$connId": "con_23",
          "$id": "2c93e75b-acc4-4932-b531-3092be392c1d",
          "conditions": [
            {
              "source": "context",
              "comparison": "equals",
              "values": ["075413bd-8c6e-49aa-9996-b4b621a8299d"],
              "variable": "state.previous.id"
            }
          ],
          "$invalid": false
        },
        {
          "stateId": "d66facef-49cc-4cd5-9654-31ab480be848",
          "typeOfStateId": "state",
          "$connId": "con_28",
          "$id": "e2d4e634-73e8-47ee-9c43-0a3637ed0a9d",
          "conditions": [{ "source": "input", "comparison": "exists", "values": [] }],
          "$invalid": false
        }
      ],
      "$enteringCustomActions": [
        {
          "$id": "391cb052-af83-4b14-9409-1cd98a4a3df2",
          "$typeOfContent": "",
          "type": "SetVariable",
          "$title": "Set variable - allRequestsDataJs",
          "$invalid": false,
          "settings": { "variable": "allRequestsDataJs", "value": "{}" },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": { "stateId": "fallback", "$invalid": false },
      "isAiGenerated": false,
      "$tags": [
        {
          "id": "blip-tag-6cb92634-e023-420c-b939-83152cd63fbe",
          "label": "SetVariable",
          "background": "#FF4A1E",
          "canChangeBackground": false
        }
      ],
      "id": "90012e4b-5d01-4143-9515-c42e09307f38",
      "root": false,
      "$title": "resetVariablesAndCheckWhereCame",
      "$position": { "top": "2235.15px", "left": "1083.46px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false
    },
    "88e36bb9-657a-4df6-8aee-32720d3706e2": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "ac40f107-2f78-41de-a7cc-14f5973c112c",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false,
          "$$hashKey": "object:2773"
        }
      ],
      "$conditionOutputs": [
        {
          "stateId": "{{defaultBlocksIdsJs@broked}}",
          "typeOfStateId": "variable",
          "$id": "d5bb0af5-55ca-415b-8040-7c593989ca0a",
          "conditions": [
            {
              "source": "context",
              "comparison": "exists",
              "values": [],
              "variable": "allFlowStepsJs@idBroked",
              "$$hashKey": "object:2794"
            }
          ],
          "$invalid": false,
          "$$hashKey": "object:2775"
        },
        {
          "stateId": "cc8ddc3c-9e25-4bbf-b4a0-fd47de2467db",
          "typeOfStateId": "state",
          "$connId": "con_33",
          "$id": "117458ff-7f2b-4af0-8302-230ed25e6cce",
          "conditions": [
            {
              "source": "context",
              "comparison": "equals",
              "values": ["apiGetDataByZipCode"],
              "variable": "nextStepJs",
              "$$hashKey": "object:2810"
            }
          ],
          "$invalid": false,
          "$$hashKey": "object:2776"
        },
        {
          "stateId": "414a4d5c-380d-443c-9c3d-ac8977c4b72d",
          "typeOfStateId": "state",
          "$connId": "con_38",
          "$id": "21177080-0eeb-4a25-b369-703ae47f921a",
          "conditions": [
            { "source": "input", "comparison": "exists", "values": [], "$$hashKey": "object:2826" }
          ],
          "$invalid": false,
          "$$hashKey": "object:2777"
        }
      ],
      "$enteringCustomActions": [
        {
          "$id": "eb59b1de-baa3-4ae7-a12a-37f18d671720",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - allFlowPossibilitiesAndCampaignsJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run() {\n  const allFlowPossibilities = mountAllFlowPossibilities();\n  const allCampaigns = mountAllCampaign();\n\n  const dataToReturn = { allFlowPossibilities, allCampaigns };\n\n  return dataToReturn;\n}\n\nfunction mountAllFlowPossibilities() {\n  const allStepsPossibilities = {\n    addressData: {\n      askZipCode: true,\n      apiGetDataByZipCode: true,\n      askNumber: true,\n      askRoadName: true,\n      askNeighborhood: true,\n      askStreetBlock: true,\n      askStreetLot: true,\n      askComplement: true,\n      askAddressCorrection: false,\n      askAddressCheckout: true,\n    },\n    plans: {\n      askPlanModality: true,\n      apiGetPlans: true,\n      // askPlanPrincipalOffer: true,\n      msgPlans: true,\n      askPlans: true,\n      askWantPlanAfterSeeMore: false,\n      logicUpdatePlanAfterSeeMore: false,\n      // askUpsell: false,\n      // askPlanOptional: false,\n      // askPlansAndPortabilityCorrection: false,\n      // askPlansAndPortabilityCheckout: true,\n    },\n    personalData: {\n      askClientName: true,\n      askClientCPF: true,\n      askClientEmail: true,\n      askPersonalDataCorrection: false,\n      askPersonalDataCheckout: true,\n      askHaveDependent: true,\n      askDependentName: true,\n      askDependentCPF: true,\n      askDegreeOfDependent: true,\n      logicSaveSpecificDependentData: true,\n      logicExcludeSpecificDependent: false,\n      askAddAnotherDependent: true,\n      askDependentForExclude: false,\n    },\n    payment: { askPaymentType: true, msgForPix: true, msgForBillet: true, askFlowsCreditCard: true },\n    // lgpd: { askTerms: true },\n  };\n\n  return allStepsPossibilities;\n}\n\nfunction mountAllCampaign() {\n  const allCampaigns = {\n    initializeFlow: {\n      addressData: {\n        needAllSteps: false,\n        specificSteps: [\n          \"askZipCode\",\n          \"apiGetDataByZipCode\",\n          \"askComplement\",\n          \"askAddressCorrection\",\n          \"askAddressCheckout\",\n        ],\n      },\n      plans: { needAllSteps: true },\n      personalData: {\n        needAllSteps: false,\n        specificSteps: [\n          \"askClientName\",\n          \"askClientCPF\",\n          \"askClientEmail\",\n          \"askPersonalDataCheckout\",\n          \"askPersonalDataCorrection\",\n          \"askHaveDependent\",\n        ],\n      },\n      payment: { needAllSteps: false, specificSteps: [\"askPaymentType\"] },\n    },\n    genericZipCode: {\n      addressData: {\n        needAllSteps: false,\n        specificSteps: [\"askNumber\", \"askRoadName\", \"askNeighborhood\"],\n        excludeSteps: [\"askStreetBlock\", \"askStreetLot\"],\n      },\n    },\n    addressWithBlockAndLot: {\n      addressData: {\n        needAllSteps: false,\n        specificSteps: [\"askStreetBlock\", \"askStreetLot\"],\n        excludeSteps: [\"askNumber\", \"askRoadName\", \"askNeighborhood\"],\n      },\n    },\n    hasDependent: {\n      personalData: {\n        needAllSteps: false,\n        specificSteps: [\n          \"askDependentName\",\n          \"askDependentCPF\",\n          \"askDegreeOfDependent\",\n          \"logicSaveSpecificDependentData\",\n          \"logicExcludeSpecificDependent\",\n          \"askAddAnotherDependent\",\n          \"askDependentForExclude\",\n        ],\n      },\n    },\n    hasNotDependent: {\n      personalData: {\n        needAllSteps: false,\n        excludeSteps: [\n          \"askDependentName\",\n          \"askDependentCPF\",\n          \"askDegreeOfDependent\",\n          \"logicSaveSpecificDependentData\",\n          \"logicExcludeSpecificDependent\",\n          \"askAddAnotherDependent\",\n          \"askDependentForExclude\",\n        ],\n      },\n    },\n    paymentMethodPix: {\n      payment: {\n        needAllSteps: false,\n        specificSteps: [\"msgForPix\"],\n        excludeSteps: [\"msgForBillet\", \"askFlowsCreditCard\"],\n      },\n    },\n    paymentMethodBillet: {\n      payment: {\n        needAllSteps: false,\n        specificSteps: [\"msgForBillet\"],\n        excludeSteps: [\"msgForPix\", \"askFlowsCreditCard\"],\n      },\n    },\n    paymentMethodCreditCard: {\n      payment: {\n        needAllSteps: false,\n        specificSteps: [\"askFlowsCreditCard\"],\n        excludeSteps: [\"msgForPix\", \"msgForBillet\"],\n      },\n    },\n  };\n\n  return allCampaigns;\n}\n",
            "inputVariables": [],
            "outputVariable": "allFlowPossibilitiesAndCampaignsJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "af277b3b-3938-4b4c-b8b5-3fd405caa97a",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - allFlowStepsJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(allFlowPossibilitiesAndCampaigns, previousFlowSteps, userContextJs) {\n  try {\n    const { allFlowPossibilities, allCampaigns } = JSON.parse(allFlowPossibilitiesAndCampaigns);\n\n    const { specificCampaignName } = JSON.parse(userContextJs);\n\n    const getSpecificCampaignData = allCampaigns[specificCampaignName];\n\n    if (!getSpecificCampaignData) {\n      throw { message: \"Has not this specific campaign\" };\n    }\n\n    const checkedPreviousFlowSteps = tryParseData(previousFlowSteps);\n\n    const { excludeSteps, allNewSteps } = mountStepsByCampaign(allFlowPossibilities, getSpecificCampaignData);\n\n    const completelyFlowSteps = { ...checkedPreviousFlowSteps, ...allNewSteps };\n\n    const flowOrder = allFlowPossibleStepsInObject(allFlowPossibilities);\n\n    const dataToReturn = {};\n\n    Object.keys(flowOrder).forEach((flowStep) => {\n      if (completelyFlowSteps[flowStep] != undefined) {\n        const isAnValidStep = !excludeSteps.includes(flowStep);\n\n        if (isAnValidStep) {\n          dataToReturn[flowStep] = completelyFlowSteps[flowStep];\n        }\n      }\n    });\n\n    return dataToReturn;\n  } catch (e) {\n    return { itBroked: true, message: e.message };\n  }\n}\n\nfunction allFlowPossibleStepsInObject(allFlowPossibilities) {\n  const allDataInUniqueObject = Object.values(allFlowPossibilities).reduce((acc, everyCategoryValues) => {\n    acc = { ...acc, ...everyCategoryValues };\n    return acc;\n  }, {});\n  return allDataInUniqueObject;\n}\n\nfunction mountStepsByCampaign(allFlowPossibilities, specificCampaign) {\n  const allNewFlowSteps = Object.keys(specificCampaign).reduce(\n    (acc, everyCampaignCategory) => {\n      const { needAllSteps, specificSteps, excludeSteps } = specificCampaign[everyCampaignCategory];\n      const allStepsByCampaign = allFlowPossibilities[everyCampaignCategory];\n\n      if (needAllSteps) {\n        acc.allNewSteps = { ...acc.allNewSteps, ...allStepsByCampaign };\n      }\n      if (excludeSteps) {\n        const hasMoreExcludeSteps = acc.excludeSteps ? [...acc.excludeSteps, ...excludeSteps] : excludeSteps;\n        acc.excludeSteps = hasMoreExcludeSteps;\n      }\n      if (specificSteps) {\n        const mountSpecificSteps = mountStepsByCategory(specificSteps, allStepsByCampaign);\n        acc.allNewSteps = { ...acc.allNewSteps, ...mountSpecificSteps };\n      }\n\n      return acc;\n    },\n    { excludeSteps: [], allNewSteps: {} }\n  );\n  return allNewFlowSteps;\n}\n\nfunction mountStepsByCategory(specificSteps, allFlowPossibilities) {\n  const mountAllSpecificStepsByCategory = specificSteps.reduce((allValidSteps, everyStep) => {\n    allValidSteps[everyStep] = allFlowPossibilities[everyStep];\n    return allValidSteps;\n  }, {});\n\n  return mountAllSpecificStepsByCategory;\n}\n\nfunction tryParseData(data) {\n  try {\n    data = JSON.parse(data);\n    if (typeof data == \"object\" && data != null) {\n      return data;\n    }\n  } catch (e) {}\n  return {};\n}",
            "inputVariables": ["allFlowPossibilitiesAndCampaignsJs", "allFlowStepsJs", "userContextJs"],
            "outputVariable": "allFlowStepsJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": { "stateId": "fallback", "$invalid": false },
      "isAiGenerated": false,
      "$tags": [
        {
          "id": "blip-tag-49a46a73-5ae5-4615-b1b8-c7339d3c46eb",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        }
      ],
      "id": "88e36bb9-657a-4df6-8aee-32720d3706e2",
      "root": false,
      "$title": "setAllFlowStepsBySpecificCampaignName",
      "$position": { "top": "2367px", "left": "2700px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false
    },
    "414a4d5c-380d-443c-9c3d-ac8977c4b72d": {
      "$contentActions": [
        {
          "action": {
            "$id": "9d0fbe8f-b6dd-4619-a7a6-20b85089f03f",
            "$typeOfContent": "text",
            "type": "SendMessage",
            "settings": {
              "id": "02c32a67-4fec-4da8-adb9-a93dc0cdc70f",
              "type": "text/plain",
              "content": "{{specifcMsgLogDataJs}}",
              "metadata": {}
            },
            "$cardContent": {
              "document": {
                "id": "02c32a67-4fec-4da8-adb9-a93dc0cdc70f",
                "type": "text/plain",
                "content": "{{specifcMsgLogDataJs}}"
              },
              "editable": true,
              "deletable": true,
              "position": "left"
            }
          },
          "$invalid": false
        },
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "5d88812e-ce2c-4935-9078-73f44a285b88",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [
        {
          "stateId": "{{defaultBlocksIdsJs@broked}}",
          "typeOfStateId": "variable",
          "$id": "341915cf-6a4c-4b5e-b98c-ad30c5f457c5",
          "conditions": [
            { "source": "context", "comparison": "exists", "values": [], "variable": "nextStepJs@itBroked" }
          ],
          "$invalid": false
        },
        {
          "stateId": "{{defaultBlocksIdsJs@invalid}}",
          "typeOfStateId": "variable",
          "$id": "1f62e487-dfa1-4023-8fe0-0b2681020388",
          "conditions": [
            {
              "source": "context",
              "comparison": "equals",
              "values": ["true"],
              "variable": "hasEqualityInPreviousAndCurrentNextStepJs"
            }
          ],
          "$invalid": false
        },
        {
          "stateId": "b3e520ea-fcb6-47d8-b8a2-f8ee4d96c7d9",
          "typeOfStateId": "state",
          "$connId": "con_43",
          "$id": "4d3a9322-65f1-40f2-a4f5-60ed78c9fb1e",
          "conditions": [
            { "source": "context", "comparison": "contains", "values": ["msg"], "variable": "nextStepJs" }
          ],
          "$invalid": false
        },
        {
          "stateId": "581f4a60-ea31-4342-9169-27cf65ed783e",
          "typeOfStateId": "state",
          "$connId": "con_48",
          "$id": "0360895a-3488-4ac2-a1b1-1fe062efebde",
          "conditions": [
            { "source": "context", "comparison": "contains", "values": ["ask"], "variable": "nextStepJs" }
          ],
          "$invalid": false
        },
        {
          "stateId": "68cd0f0e-fafb-4c40-a046-356b0f2c2d43",
          "typeOfStateId": "state",
          "$connId": "con_53",
          "$id": "86672179-1034-40f9-a84a-8bd6c313a54b",
          "conditions": [
            { "source": "context", "comparison": "contains", "values": ["logic"], "variable": "nextStepJs" }
          ],
          "$invalid": false
        },
        {
          "stateId": "6b1df835-5d37-4acc-aea3-836a6de12028",
          "typeOfStateId": "state",
          "$connId": "con_58",
          "$id": "d60a0167-f8e3-45ab-8e97-775a175bad46",
          "conditions": [
            { "source": "context", "comparison": "contains", "values": ["api"], "variable": "nextStepJs" }
          ],
          "$invalid": false
        },
        {
          "stateId": "baba231f-e21a-481a-a7ae-5bb487eeb77a",
          "typeOfStateId": "state",
          "$connId": "con_63",
          "$id": "b313d69c-bf3c-43e1-b217-998145ecce89",
          "conditions": [
            { "source": "context", "comparison": "equals", "values": ["finish"], "variable": "nextStepJs" }
          ],
          "$invalid": false
        }
      ],
      "$enteringCustomActions": [
        {
          "$id": "b28cf8e3-49df-4b4f-8d17-9a6d58274b76",
          "$typeOfContent": "",
          "type": "SetVariable",
          "$title": "Set variable - previousNextStep",
          "$invalid": false,
          "settings": { "variable": "previousNextStep", "value": "{{nextStepJs}}" },
          "conditions": []
        },
        {
          "$id": "dc244b4a-2771-4ecf-99b7-cba06a672140",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - nextStepJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(flowSteps){\n    try {\n        flowSteps = JSON.parse(flowSteps)\n        const nextField = Object.keys(flowSteps).find(key => flowSteps[key] === true)\n\n        return nextField || \"finish\"\n    } catch(e) {\n        return { itBroked: true, message: e.message };\n    }\n}\n",
            "inputVariables": ["allFlowStepsJs"],
            "outputVariable": "nextStepJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "e571757b-1cfb-4dc7-b8fa-09457be42c45",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - specifcMsgLogDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "{{resource.function_mountLogData}}",
            "inputVariables": ["formatterJson", "debugJs", "state.name", "nextStepJs"],
            "outputVariable": "specifcMsgLogDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "5738c35a-726c-4f9b-a17c-9ed58810ea90",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - hasEqualityInPreviousAndCurrentNextStepJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(previousNextStep, nextStep) {\n\tconst hasEqualityInPreviousAndCurrentNextStep = previousNextStep == nextStep\n\t\n\treturn hasEqualityInPreviousAndCurrentNextStep\n}\n",
            "inputVariables": ["previousNextStep", "nextStepJs"],
            "outputVariable": "hasEqualityInPreviousAndCurrentNextStepJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "853070a3-fcd2-4c56-b783-c6709f640aec",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - allFlowStepsJs - update",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(allFlowStepsJs, nextStepJs) {\n  try {\n    allFlowStepsJs = JSON.parse(allFlowStepsJs)\n    allFlowStepsJs[nextStepJs] = false\n    return allFlowStepsJs\n  } catch (e) {\n    return \"error\"\n  }\n}\n\n",
            "inputVariables": ["allFlowStepsJs", "nextStepJs"],
            "outputVariable": "allFlowStepsJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": { "stateId": "fallback", "$invalid": false },
      "isAiGenerated": false,
      "$tags": [
        {
          "id": "blip-tag-804a6766-3e61-45be-9ad7-6bffe70bb236",
          "label": "SetVariable",
          "background": "#FF4A1E",
          "canChangeBackground": false
        },
        {
          "id": "blip-tag-037ff0a4-fdb1-4966-a336-f7fc45f667ec",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        },
        {
          "id": "blip-tag-e95303c6-8cf3-42c0-bcf7-19c3eaadd045",
          "label": "SendMessage",
          "background": "#EE82EE",
          "canChangeBackground": false
        }
      ],
      "id": "414a4d5c-380d-443c-9c3d-ac8977c4b72d",
      "root": false,
      "$title": "checkNextStepJs",
      "$position": { "top": "2387px", "left": "2911px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false
    },
    "37f6ea15-cf65-4884-b3f8-d59043fcf767": {
      "$contentActions": [
        {
          "action": {
            "$id": "a6a0f7e0-b741-4c58-a5e8-aa6bdb3f5713",
            "$typeOfContent": "chat-state",
            "type": "SendMessage",
            "settings": {
              "id": "5f696f85-b9ac-4a06-b62b-7d1209644d97",
              "type": "application/vnd.lime.chatstate+json",
              "content": { "state": "composing", "interval": 1000 }
            },
            "$cardContent": {
              "document": {
                "id": "5f696f85-b9ac-4a06-b62b-7d1209644d97",
                "type": "application/vnd.lime.chatstate+json",
                "content": { "state": "composing", "interval": 1000 }
              },
              "editable": true,
              "deletable": true,
              "position": "left"
            }
          },
          "$invalid": false,
          "$$hashKey": "object:25311"
        },
        {
          "action": {
            "$id": "b437609f-7483-4339-af4f-cf6e81b2897d",
            "$typeOfContent": "text",
            "type": "SendMessage",
            "settings": {
              "id": "50ce470d-a6e9-4dd2-9279-ff7b4353714a",
              "type": "text/plain",
              "content": "crebou",
              "metadata": {}
            },
            "$cardContent": {
              "document": {
                "id": "50ce470d-a6e9-4dd2-9279-ff7b4353714a",
                "type": "text/plain",
                "content": "crebou"
              },
              "editable": true,
              "deletable": true,
              "position": "left"
            }
          },
          "$invalid": false,
          "$$hashKey": "object:25312"
        },
        {
          "input": {
            "bypass": false,
            "$cardContent": {
              "document": {
                "id": "20d09c6c-c69c-4c4b-bc05-846352f27458",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false,
          "$$hashKey": "object:25313"
        }
      ],
      "$conditionOutputs": [
        {
          "stateId": "581f4a60-ea31-4342-9169-27cf65ed783e",
          "typeOfStateId": "state",
          "$connId": "con_617",
          "$id": "560a2869-f750-4919-9574-a52120c3f45c",
          "conditions": [
            {
              "source": "context",
              "comparison": "equals",
              "values": ["blip"],
              "variable": "channelJs",
              "$$hashKey": "object:25337"
            }
          ],
          "$invalid": false,
          "$$hashKey": "object:25320"
        },
        {
          "stateId": "075413bd-8c6e-49aa-9996-b4b621a8299d",
          "typeOfStateId": "state",
          "$connId": "con_73",
          "$id": "fd80ac28-a667-4ea8-9cdd-47f874935c9f",
          "conditions": [
            { "source": "input", "comparison": "exists", "values": [], "$$hashKey": "object:25353" }
          ],
          "$invalid": false,
          "$$hashKey": "object:25321"
        }
      ],
      "$enteringCustomActions": [],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": { "stateId": "fallback", "$invalid": false, "typeOfStateId": "state" },
      "isAiGenerated": false,
      "$tags": [
        {
          "id": "blip-tag-9ff31818-df35-4c5a-aa2f-1fa488d221ae",
          "label": "SendMessage",
          "background": "#EE82EE",
          "canChangeBackground": false
        },
        {
          "id": "blip-tag-dc8ab17d-1cbd-478e-a57a-8fc244c78728",
          "label": "UserInput",
          "background": "#000000",
          "canChangeBackground": false
        }
      ],
      "id": "37f6ea15-cf65-4884-b3f8-d59043fcf767",
      "root": false,
      "$title": "registerBrokedData",
      "$position": { "top": "4181px", "left": "745px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false
    },
    "581f4a60-ea31-4342-9169-27cf65ed783e": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "6ec4fb5a-dd04-44c4-b67c-f53ff3660be8",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false,
          "$$hashKey": "object:1428"
        }
      ],
      "$conditionOutputs": [
        {
          "stateId": "{{defaultBlocksIdsJs@broked}}",
          "typeOfStateId": "variable",
          "$id": "1a827473-dfe1-4d98-a13d-5083623f3dc8",
          "conditions": [
            {
              "source": "context",
              "comparison": "exists",
              "values": [],
              "variable": "goToMenuBlockByNextStepJs@itBroked",
              "$$hashKey": "object:1447"
            }
          ],
          "$invalid": false,
          "$$hashKey": "object:1430"
        },
        {
          "stateId": "{{goToMenuBlockByNextStepJs@id}}",
          "typeOfStateId": "variable",
          "$id": "50155071-8791-449e-b648-caeab38efcbf",
          "conditions": [
            {
              "source": "context",
              "comparison": "contains",
              "values": ["ask"],
              "variable": "nextStepJs",
              "$$hashKey": "object:1461"
            }
          ],
          "$invalid": false,
          "$$hashKey": "object:1431"
        }
      ],
      "$enteringCustomActions": [
        {
          "$id": "29d6f709-a23f-4219-9048-35297b6626c2",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - goToMenuBlockByNextStepJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(nextStepJs) {\n  try {\n    const allBlocksMapped = {\n      addressData: {\n        askZipCode: \"ee0923e1-b29f-425e-91c0-5659e9025631\",\n        askNumber: \"1aabb3eb-9b95-446a-8496-278c20e83c00\",\n        askRoadName: \"ce5506bf-ef2c-44c4-8d46-61cec131ba95\",\n        askNeighborhood: \"accff05b-e305-4a9e-a056-81203c3763cd\",\n        askStreetBlock: \"64c91d30-5a8b-4ead-bee9-b851d206688a\",\n        askStreetLot: \"dbf99580-09e8-4b91-ae99-77ee44d0fce8\",\n        askComplement: \"f4da6645-434b-4429-8305-c8a7557999d9\",\n        askAddressCorrection: \"ef9db071-9295-4247-9e58-385a5ab1e418\",\n        askAddressCheckout: \"1d90eaee-708b-43bb-9824-c54ac7c21510\",\n      },\n      plans: {\n        askPlanModality: \"035bfa3e-6f3a-4a49-b0bf-87ddb8fce176\",\n        askPlanPrincipalOffer: \"b6968b67-325c-479f-a9dd-0b8e443cccf2\",\n        askPlans: \"3cffb76e-dba6-43b1-b5ae-88306bf03100\",\n        askUpsell: \"0f9fcbb5-1fae-4c11-9348-d11b199470f2\",\n        askPlanOptional: \"bc601fb1-6099-4c40-97f6-9f73c751d413\",\n        askWantPlanAfterSeeMore: \"49e4aa9a-48d4-434d-b329-19eb518a9949\",\n      },\n      personalData: {\n        askClientName: \"7d0286db-d63a-4259-a427-077b86b5fd33\",\n        askClientCPF: \"54a2e17d-c87a-4012-9df4-e2ea1eacf5f4\",\n        askClientEmail: \"5f7eff45-1d68-4e6c-ab1d-4d839bd45020\",\n        askHaveDependent: \"bc26aeb6-deb5-4287-98d2-d04a6d84efd7\",\n        askDependentName: \"5808d06b-6f53-474b-baaf-8d0cab730dba\",\n        askDependentCPF: \"7bac90b8-d58b-4663-a15f-dbc2b0c1893d\",\n        askDegreeOfDependent: \"8329d86f-403c-40e4-84cc-b39b9263c02f\",\n        askAddAnotherDependent: \"a5fbee8b-85cd-4d20-8c99-2f0de10c26e6\",\n        askDependentForExclude: \"f86ba324-37b3-49d2-9a8b-37ec4ed2683a\",\n        askPersonalDataCorrection: \"117e6c40-1438-46d4-868a-9714afd3a3a1\",\n        askPersonalDataCheckout: \"9168a6e1-a22d-4e39-a77d-4eb66d90ae09\",\n      },\n      payment: { \n        askPaymentType: \"0b1d39dc-53b1-4cb0-b7da-65982183c889\", \n        askFlowsCreditCard: \"e3696983-388e-438d-be0c-c5fd96e4ee02\" \n        },\n      // lgpd: { askTerms: true },\n    };\n\n    const allBLockWithoutCategory = Object.values(allBlocksMapped).reduce(\n      (acc, everyCategoryData) => (acc = { ...acc, ...everyCategoryData }),\n      {}\n    );\n\n    Object.keys(allBLockWithoutCategory).forEach((everyBlockName) => {\n      const blockNameInLowerCase = everyBlockName.toLowerCase();\n      const blockID = allBLockWithoutCategory[everyBlockName];\n      allBLockWithoutCategory[blockNameInLowerCase] = blockID;\n    });\n\n    const nextStepInLowerCase = nextStepJs.toLowerCase();\n\n    const specificNewBlockByNextStep = allBLockWithoutCategory[nextStepInLowerCase];\n\n    if (!specificNewBlockByNextStep) {\n      throw { message: \"Has no block mapped for this step: \" + nextStepJs };\n    }\n\n    const dataToReturn = { title: nextStepJs, id: specificNewBlockByNextStep };\n\n    return dataToReturn;\n  } catch (e) {\n    return { itBroked: true, brokenMsg: e.message };\n  }\n}\n",
            "inputVariables": ["nextStepJs"],
            "outputVariable": "goToMenuBlockByNextStepJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": { "stateId": "fallback", "$invalid": false },
      "isAiGenerated": false,
      "$tags": [
        {
          "id": "blip-tag-6aeae08a-302f-49ec-9e2b-095fc74dac1a",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        }
      ],
      "id": "581f4a60-ea31-4342-9169-27cf65ed783e",
      "root": false,
      "$title": "goToSpecificMenu",
      "$position": { "top": "2539px", "left": "5010px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false,
      "addonsSettings": { "commentsIdList": ["24064da8-def8-450d-878d-96f003359920"] }
    },
    "5e40fa1d-72b1-4c5a-ad6c-c237f65d3597": {
      "$contentActions": [
        {
          "action": {
            "$id": "e1b93bcd-fa84-42db-bcac-67e362e48afa",
            "$typeOfContent": "text",
            "type": "SendMessage",
            "settings": {
              "id": "6151fd33-ab89-47a2-b7d2-0158b0312fe0",
              "type": "text/plain",
              "content": "{{specifcMsgLogDataJs}}",
              "metadata": {}
            },
            "$cardContent": {
              "document": {
                "id": "6151fd33-ab89-47a2-b7d2-0158b0312fe0",
                "type": "text/plain",
                "content": "{{specifcMsgLogDataJs}}"
              },
              "editable": true,
              "deletable": true,
              "position": "left"
            }
          },
          "$invalid": false,
          "$$hashKey": "object:5349"
        },
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "1b218b80-3b54-47eb-a19c-b552b249ef41",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false,
          "$$hashKey": "object:5350"
        }
      ],
      "$conditionOutputs": [
        {
          "stateId": "{{defaultBlocksIdsJs@checkInputAndInvalid}}",
          "typeOfStateId": "variable",
          "$id": "b1840a9e-4bb6-4aad-82ea-e914d885ffab",
          "conditions": [
            {
              "source": "context",
              "comparison": "equals",
              "values": ["true"],
              "variable": "currentStepProcessedJs@itBroked",
              "$$hashKey": "object:5377"
            }
          ],
          "$invalid": false,
          "$$hashKey": "object:5354"
        },
        {
          "stateId": "20dafb1b-53cd-4d90-b44c-2b296661a200",
          "typeOfStateId": "state",
          "$connId": "con_78",
          "$id": "28e4b90b-ad4e-4793-9a1b-43783f887e76",
          "conditions": [
            {
              "source": "context",
              "comparison": "exists",
              "values": [],
              "variable": "currentStepProcessedJs@extras.stepForTurnTrue",
              "$$hashKey": "object:5395"
            }
          ],
          "$invalid": false,
          "$$hashKey": "object:5355"
        },
        {
          "stateId": "20dafb1b-53cd-4d90-b44c-2b296661a200",
          "typeOfStateId": "state",
          "$connId": "con_592",
          "$id": "a22083da-fc8d-43fd-ae84-7eeb26da03d7",
          "conditions": [
            {
              "source": "context",
              "comparison": "exists",
              "values": [],
              "variable": "currentStepProcessedJs@extras.stepForTurnFalse",
              "$$hashKey": "object:5411"
            }
          ],
          "$invalid": false,
          "$$hashKey": "object:5356"
        },
        {
          "stateId": "9af53f00-0b36-49b2-ae05-e5c62702ed33",
          "typeOfStateId": "state",
          "$connId": "con_93",
          "$id": "b14c97cd-a0ec-4234-8c04-0b35087c2246",
          "conditions": [
            { "source": "input", "comparison": "exists", "values": [], "$$hashKey": "object:5443" }
          ],
          "$invalid": false,
          "$$hashKey": "object:5358"
        }
      ],
      "$enteringCustomActions": [
        {
          "$id": "3141d98a-a353-4801-b1e5-639e23e304b6",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - checkedUserInputJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(nextStep, testerPhone, inputContent) {\n  try {\n    if (testerPhone == \"true\" && inputContent == \"#testData\") {\n      const allDataByNextStep = {\n        askZipCode: \"50910410\",\n        askNumber: \"141\",\n        askComplement: \"test\",\n        askClientName: \"Teste\",\n        askClientCPF: \"49188179044\",\n        askClientEmail: \"teste@teste.com.br\",\n        askDependentName: \"Teste depdente\",\n        askDependentCPF: \"49188179044\",\n        askClientEmail: \"depedente@teste.com.br\",\n      };\n\n      const inTestInputData = allDataByNextStep[nextStep];\n      if (inTestInputData) {\n        return inTestInputData;\n      }\n    }\n  } catch (e) {}\n  return inputContent;\n}\n",
            "inputVariables": ["nextStepJs", "testerPhoneJs", "input.content"],
            "outputVariable": "checkedUserInputJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "771c0235-bc39-4232-80ca-8e7d5dea43c7",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - currentStepProcessedJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(menusRegexData, inputContent, allOptionsMenu) {\n  try {\n    const ALL_OPTIONS_REGEX = JSON.parse(menusRegexData);\n\n    const { USER_INPUT, INPUT_NORMALIZED } = checkAndFormatUserInput(\n      inputContent,\n      ALL_OPTIONS_REGEX.datatoexclude\n    );\n\n    if (USER_INPUT == \"#reflow\") {\n      return \"#reflow\";\n    }\n\n    const { allMenuOptions, menuWithFreeInput } = JSON.parse(allOptionsMenu);\n\n    const verifiedFreeInputs = verifyFreeInputsAndPadronizeData(menuWithFreeInput, USER_INPUT);\n\n    const freeInputWhoDontNeedRegexValidation = verifyOptionWithNoRegexValidation(verifiedFreeInputs);\n\n    const onlyValidMenuOption = filterAndFormatOnlyValidMenuOptions(allMenuOptions);\n\n    const allValidMenuOptionsAndFreeInput = validateAllMenusOptionsData(\n      onlyValidMenuOption,\n      verifiedFreeInputs\n    );\n\n    const { menuOptions, menuOptionExtras, menuOptionIdentifier } = menuOptionToFilter(\n      allValidMenuOptionsAndFreeInput,\n      USER_INPUT\n    );\n\n    const REGEX_OPTIONS = regexOptionsToFilter(\n      menuOptionIdentifier,\n      menuOptions,\n      ALL_OPTIONS_REGEX,\n      freeInputWhoDontNeedRegexValidation\n    );\n\n    const PROCESSED_USER_INPUT = processUserInput(INPUT_NORMALIZED, REGEX_OPTIONS);\n\n    if (PROCESSED_USER_INPUT == \"didNotIdentifyInput\") {\n      throw { message: \"Did not identify user input with regex\" };\n    }\n\n    const inputRegexMatchData = onlyValidOptionInInput(INPUT_NORMALIZED, REGEX_OPTIONS[PROCESSED_USER_INPUT]);\n\n    const processedData = {\n      textOption: menuOptions[PROCESSED_USER_INPUT],\n      identifier: menuOptionIdentifier[PROCESSED_USER_INPUT],\n      extras: { inputRegexMatchData, ...menuOptionExtras[PROCESSED_USER_INPUT] },\n    };\n\n    return processedData;\n  } catch (e) {\n    return { itBroked: true, brokenMsg: e.message };\n  }\n}\n\nfunction checkAndFormatUserInput(inputContent, dataToExcludeInUserInput) {\n  const userInput = inputContent ? cleanUserInput(inputContent) : \"\";\n\n  if (userInput == \"\" || userInput == null) {\n    throw { message: \"Has not input\" };\n  }\n\n  const inputNormalized = textNormalizer(userInput) || false;\n\n  if (!inputNormalized) throw { message: \"User input is not valid after normalize\" };\n\n  const regexCompound = new RegExp(dataToExcludeInUserInput.toLowerCase(), \"i\");\n\n  const inputNormalizedAndCleanned = inputNormalized.replace(regexCompound, \"\");\n\n  const allInputData = { USER_INPUT: userInput, INPUT_NORMALIZED: inputNormalizedAndCleanned };\n\n  return allInputData;\n}\n\nfunction cleanUserInput(userInput) {\n  const cleannedUserInput = userInput.replace(/(\\n|\\t)/g, \" - \");\n  return cleannedUserInput;\n}\n\nfunction validateAllMenusOptionsData(...allGroupOfDatas) {\n  const allMenuOptionsDataVerified = allGroupOfDatas.reduce((acc, everyGroupOfData) => {\n    const everyTypeOfDataValues = Object.values(everyGroupOfData);\n    if (everyTypeOfDataValues.length > 0) acc.push(...everyGroupOfData);\n    return acc;\n  }, []);\n  return allMenuOptionsDataVerified;\n}\n\nfunction textNormalizer(dataToNormalize) {\n  return dataToNormalize\n    .normalize(\"NFD\")\n    .replace(/([^@ªa-záàâãéèêíïóôõöúçñ0-9]+)/gi, \"\")\n    .toLowerCase();\n}\n\nfunction filterAndFormatOnlyValidMenuOptions(menuOptionsJSON) {\n  const validOptions = menuOptionsJSON\n    ? menuOptionsJSON.reduce((acc, section) => {\n        section.allSectionOptions.forEach((menuOption) => {\n          if (menuOption.active) acc.push(menuOption);\n        });\n\n        return acc;\n      }, [])\n    : {};\n\n  return validOptions;\n}\n\nfunction verifyFreeInputsAndPadronizeData(allFreeInputOptions, userInput) {\n  if (allFreeInputOptions) {\n    const allDataWithUserInputInExtras = allFreeInputOptions.reduce((acc, everyOption) => {\n      if (everyOption.needRegexValidation) {\n        acc.unshift(mountDataForEveryFreeInput(everyOption, userInput));\n      } else {\n        const withoutRegexValidationOption = findMenuOptionWhoDontNeedRegexValidation(allFreeInputOptions);\n\n        acc.push(mountDataForEveryFreeInput(withoutRegexValidationOption, userInput));\n      }\n      return acc;\n    }, []);\n\n    return allDataWithUserInputInExtras;\n  } else return [];\n}\n\nfunction mountDataForEveryFreeInput(everyFreeInput, userInput) {\n  const allFreeInputData = {\n    extras: { userInput },\n  };\n\n  allFreeInputData.title = everyFreeInput.identifier;\n  allFreeInputData.identifier = everyFreeInput.identifier;\n  allFreeInputData.needRegexValidation = everyFreeInput.needRegexValidation;\n\n  if (everyFreeInput.extras) {\n    allFreeInputData.extras = { userInput, ...everyFreeInput.extras };\n  }\n\n  return allFreeInputData;\n}\n\nfunction findMenuOptionWhoDontNeedRegexValidation(allFreeInputOptions) {\n  const onlyMenuOptionWithoutRegexValidation = allFreeInputOptions.find(\n    (menuOption) => !menuOption.needRegexValidation\n  );\n\n  return onlyMenuOptionWithoutRegexValidation || {};\n}\n\nfunction menuOptionToFilter(allMenuOptions, inputFromUser) {\n  const menuOptions = allMenuOptions.map((everyData) => everyData.title || \"\");\n  const menuOptionExtras = allMenuOptions.map((everyData) => {\n    const allExtras = everyData.extras || {};\n    const allDataToReturn = { userInput: inputFromUser, ...allExtras };\n    return allDataToReturn;\n  });\n\n  const menuOptionIdentifier = allMenuOptions.map((everyData) => everyData.identifier || \"\");\n\n  return { menuOptions, menuOptionExtras, menuOptionIdentifier };\n}\n\nfunction regexOptionsToFilter(\n  menuOptionsIdentifier,\n  menuOptions,\n  optionsForRegexJSON,\n  optionWithouRegexValidation\n) {\n  const ARRAY_WITH_REGEX_OPTIONS = menuOptionsIdentifier.map((everyMenuIdentifier, index) => {\n    const menuIdentifierNormalized = textNormalizer(everyMenuIdentifier);\n\n    const specificRegexForOption = optionsForRegexJSON[menuIdentifierNormalized];\n\n    if (specificRegexForOption) {\n      return specificRegexForOption;\n    }\n    const isFreeInputWithouValidation =\n      menuIdentifierNormalized == textNormalizer(optionWithouRegexValidation);\n\n    if (isFreeInputWithouValidation) {\n      return optionsForRegexJSON.defaultfreeinputoption;\n    }\n\n    const regexDataWithMenuTitle = `${\n      optionsForRegexJSON.menupattern\n    }|^({numericMenuOption})?(${textNormalizer(menuOptions[index])})$`;\n\n    return regexDataWithMenuTitle;\n  });\n\n  return ARRAY_WITH_REGEX_OPTIONS;\n}\n\nfunction verifyOptionWithNoRegexValidation(allFreeInputs) {\n  const hasNoMenuOptionWithNoRegexValidation = \"hasNoInputWithoutRegexValidation\";\n  if (allFreeInputs.length == 0) {\n    return hasNoMenuOptionWithNoRegexValidation;\n  }\n  const { title } = findMenuOptionWhoDontNeedRegexValidation(allFreeInputs);\n\n  return title || hasNoMenuOptionWithNoRegexValidation;\n}\n\nfunction processUserInput(userInput, OPTIONS_TO_VERIFY) {\n  const menuOptionSelectedByRegex = OPTIONS_TO_VERIFY.find((everyMenuRegexOption, index) => {\n    const optionsRegexKeyProcessed = everyMenuRegexOption.replace(/{numericMenuOption}/g, index + 1);\n\n    const regexCompound = new RegExp(optionsRegexKeyProcessed.toLowerCase(), \"gi\");\n\n    const inputTestedInRegex = regexCompound.test(userInput);\n    return inputTestedInRegex;\n  });\n\n  if (menuOptionSelectedByRegex) {\n    const indexOfRegex = OPTIONS_TO_VERIFY.indexOf(menuOptionSelectedByRegex);\n\n    return indexOfRegex;\n  }\n\n  return \"didNotIdentifyInput\";\n}\n\nfunction onlyValidOptionInInput(userInput, regexData) {\n  if (regexData) {\n    const regexCompound = new RegExp(`(${regexData.toLowerCase()})`, \"i\");\n\n    const regexMatchData = userInput.match(regexCompound);\n\n    if (regexMatchData) {\n      const selectGroup1InMatch = regexMatchData[1];\n\n      return selectGroup1InMatch || false;\n    }\n  }\n\n  return false;\n}",
            "inputVariables": ["menusRegexDataJs", "checkedUserInputJs", "currentMenuDataJs"],
            "outputVariable": "currentStepProcessedJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "0c5378b0-de79-4563-9f94-e5bbac734f23",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - specifcMsgLogDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "{{resource.function_mountLogData}}",
            "inputVariables": ["formatterJson", "debugJs", "state.name", "currentStepProcessedJs"],
            "outputVariable": "specifcMsgLogDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": { "stateId": "fallback", "$invalid": false },
      "isAiGenerated": false,
      "$tags": [
        {
          "id": "blip-tag-4b41da3a-76c6-436d-b6b8-aeee65d5ae59",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        },
        {
          "id": "blip-tag-78af01da-a483-4db9-a8af-289976925349",
          "label": "SendMessage",
          "background": "#EE82EE",
          "canChangeBackground": false
        }
      ],
      "id": "5e40fa1d-72b1-4c5a-ad6c-c237f65d3597",
      "root": false,
      "$title": "process - userInputByNextStep",
      "$position": { "top": "2660px", "left": "7327px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false
    },
    "6b1df835-5d37-4acc-aea3-836a6de12028": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "6ec4fb5a-dd04-44c4-b67c-f53ff3660be8",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [
        {
          "stateId": "985315a2-1e49-451f-b589-6d9b6a699eb3",
          "typeOfStateId": "state",
          "$connId": "con_98",
          "$id": "3e570f8d-781c-4039-80ee-9d4b92a51188",
          "conditions": [
            {
              "source": "context",
              "comparison": "equals",
              "values": ["apiGetPlans"],
              "variable": "nextStepJs"
            }
          ],
          "$invalid": false
        },
        {
          "stateId": "f631f2da-acf3-43b9-9bd6-ec81a3310f4b",
          "typeOfStateId": "state",
          "$connId": "con_103",
          "$id": "abf6a653-5c59-41fc-988f-ad0a5b299edc",
          "conditions": [
            {
              "source": "context",
              "comparison": "equals",
              "values": ["apiGetDataByZipCode"],
              "variable": "nextStepJs"
            }
          ],
          "$invalid": false
        }
      ],
      "$enteringCustomActions": [],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": { "stateId": "fallback", "$invalid": false },
      "isAiGenerated": false,
      "$tags": [],
      "id": "6b1df835-5d37-4acc-aea3-836a6de12028",
      "root": false,
      "$title": "goToSpecificAPI",
      "$position": { "top": "5187.25px", "left": "4826.25px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false
    },
    "27a09aa8-a92c-4c7e-967c-5784953a8a9d": {
      "$contentActions": [
        {
          "action": {
            "$id": "b19ee9c6-4053-4ad3-8753-e4f8fbb027d6",
            "$typeOfContent": "chat-state",
            "type": "SendMessage",
            "settings": {
              "id": "00d622cf-2557-4881-b725-86c6c8c615fa",
              "type": "application/vnd.lime.chatstate+json",
              "content": { "state": "composing", "interval": 1000 }
            },
            "$cardContent": {
              "document": {
                "id": "00d622cf-2557-4881-b725-86c6c8c615fa",
                "type": "application/vnd.lime.chatstate+json",
                "content": { "state": "composing", "interval": 1000 }
              },
              "editable": true,
              "deletable": true,
              "position": "left"
            }
          },
          "$invalid": false,
          "$$hashKey": "object:15150"
        },
        {
          "action": {
            "$id": "29e67767-294a-427b-8ef1-18bf14e7ec56",
            "$typeOfContent": "text",
            "type": "SendMessage",
            "settings": {
              "id": "6aca4f41-8ece-4946-b0c4-b323a6439a64",
              "type": "text/plain",
              "content": "{{invalidMsgJs}}",
              "metadata": {}
            },
            "$cardContent": {
              "document": {
                "id": "6aca4f41-8ece-4946-b0c4-b323a6439a64",
                "type": "text/plain",
                "content": "{{invalidMsgJs}}"
              },
              "editable": true,
              "deletable": true,
              "position": "left"
            }
          },
          "$invalid": false,
          "$$hashKey": "object:15151"
        },
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "b7b9124b-d591-490b-9a9e-867801e14bfb",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false,
          "$$hashKey": "object:15152"
        }
      ],
      "$conditionOutputs": [
        {
          "stateId": "{{checkAfterInvalidGoToBlockIdJs}}",
          "typeOfStateId": "variable",
          "$id": "25eb3938-0e8f-4295-8da1-8e2f612748e0",
          "conditions": [
            { "source": "input", "comparison": "exists", "values": [], "$$hashKey": "object:15171" }
          ],
          "$invalid": false,
          "$$hashKey": "object:15158"
        }
      ],
      "$enteringCustomActions": [
        {
          "$id": "67f45a94-349a-4c8e-a4a0-83beb23d64c5",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - invalidMsgJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(nextStep) {\n  const defaultMsg = \"Ops, Não entendi!\";\n  try {\n    const msgsPattern = { menuSelection1: \"Escolha apenas uma das opções do menu\" };\n\n    const allMsgsByCategory = {\n      portabilityType: {\n        askPortabilityType: [msgsPattern.menuSelection1],\n        askNewNumberDDD: [\"Por favor, digite apenas o DDD do telefone\"],\n        askPortabilityNumber: [\"Por favor, digite o seu novo número\"],\n      },\n      plans: {\n        askPlanPrincipalOffer: [msgsPattern.menuSelection1],\n        askPlans: [\"Escolha apenas um dos planos listados\"],\n        askUpsell: [msgsPattern.menuSelection1],\n        askPlanOptional: [msgsPattern.menuSelection1],\n        askPlansAndPortabilityCheckout: [msgsPattern.menuSelection1],\n        askPlansAndPortabilityCorrection: [msgsPattern.menuSelection1],\n      },\n      businessData: {\n        askBusinessCNPJ: [\"Não entedi, informe apenas o CNPJ da empresa\"],\n        askBusinessPhone: [\"Não entedi, informe apenas o telefone da empresa\"],\n        askBusinessCPF: [\"Não entedi, informe apenas o CPF do responsável legal\"],\n        askBusinessOwnerName: [\"Não entedi, informe apenas o nome do responsável legal\"],\n        askBusinessEmail: [\"Não entedi, informe apenas o E-mail do responsável legal\"],\n        askBusinessRG: [\"Não entedi, informe apenas o RG do responsável legal\"],\n        askBusinessCorrection: [msgsPattern.menuSelection1],\n        askBusinessCheckout: [msgsPattern.menuSelection1],\n      },\n      payment: {\n        askDueDay: [\"Selecione um dos dias de pagamento\"],\n      },\n      lgpd: {\n        askTerms: [msgsPattern.menuSelection1],\n      },\n    };\n\n    const allMsgsInUniqueObject = Object.values(allMsgsByCategory).reduce((acc, categoryData) => {\n      acc = { ...acc, ...categoryData };\n      return acc;\n    }, {});\n\n    const msgByLastStep = allMsgsInUniqueObject[nextStep];\n\n    const onlyMsgByLastStep = getOnlyOneMsgByData(msgByLastStep);\n    if (onlyMsgByLastStep) {\n      return onlyMsgByLastStep;\n    }\n  } catch (e) { }\n  return defaultMsg;\n}\n\nfunction getOnlyOneMsgByData(msgData) {\n  if (msgData) {\n    if (typeof msgData == \"string\") {\n      return msgData;\n    }\n    if (typeof msgData == \"object\") {\n      const randomNumberForMsg = Math.floor(Math.random() * msgData.length);\n\n      const randomMsgByStep = msgData[randomNumberForMsg];\n\n      return randomMsgByStep;\n    }\n  }\n  return false;\n}\n",
            "inputVariables": ["nextStepJs"],
            "outputVariable": "invalidMsgJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "169dacba-7bf9-47dd-a8ff-24e2464d470d",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - checkAfterInvalidGoToBlockIdJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(invalidStatePreviousId) {\n  try {\n    const mappedGoToBlocksData = {\n      \"fdbe4ac5-8f05-4559-9ab9-88d6b91906a7\": {\n        title: \"askPortabilityType\",\n        id: \"fdbe4ac5-8f05-4559-9ab9-88d6b91906a7\",\n      },\n      defaultData: { title: \"checkNeedSendMenu\", id: \"581f4a60-ea31-4342-9169-27cf65ed783e\" },\n    };\n\n    const specificPreviouBlockData =\n      mappedGoToBlocksData[invalidStatePreviousId] || mappedGoToBlocksData.defaultData;\n    const goBackBlocId = specificPreviouBlockData.id;\n\n    return goBackBlocId;\n  } catch (e) {\n    return { itBroked: true, message: e.message };\n  }\n}",
            "inputVariables": ["invalidStatePreviousId"],
            "outputVariable": "checkAfterInvalidGoToBlockIdJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [
        {
          "$id": "d3b29f90-be7f-4351-b6e2-4baca97c6da1",
          "$typeOfContent": "",
          "type": "SetVariable",
          "$title": "Set variable - invalidStatePreviousId",
          "$invalid": false,
          "settings": { "variable": "invalidStatePreviousId", "value": "false" },
          "conditions": []
        }
      ],
      "$inputSuggestions": [],
      "$defaultOutput": { "stateId": "fallback", "$invalid": false },
      "isAiGenerated": false,
      "$tags": [
        {
          "id": "blip-tag-7d057261-c1c2-467b-8f07-c976f4e3a2f4",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        },
        {
          "id": "blip-tag-ff03f080-3a9e-487e-af52-4874e4805243",
          "label": "SetVariable",
          "background": "#FF4A1E",
          "canChangeBackground": false
        },
        {
          "id": "blip-tag-2ea9398f-8a4c-415c-aff4-7b7448a721d3",
          "label": "SendMessage",
          "background": "#EE82EE",
          "canChangeBackground": false
        }
      ],
      "id": "27a09aa8-a92c-4c7e-967c-5784953a8a9d",
      "root": false,
      "$title": "invalid",
      "$position": { "top": "3301px", "left": "1246px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false
    },
    "ff1273aa-085b-4cb5-bc35-a0f4bfabc3a9": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "b4aedacd-3333-4738-8784-b7aab3cb5976",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false,
          "$$hashKey": "object:3457"
        }
      ],
      "$conditionOutputs": [
        {
          "stateId": "{{defaultBlocksIdsJs@changeCampaignName}}",
          "typeOfStateId": "variable",
          "$id": "4115add9-82a3-44b0-856f-1483bc36dcc8",
          "conditions": [
            {
              "source": "context",
              "comparison": "equals",
              "values": ["apiGetDataByZipCode"],
              "variable": "nextStepJs",
              "$$hashKey": "object:3472"
            }
          ],
          "$invalid": false,
          "$$hashKey": "object:3459"
        }
      ],
      "$enteringCustomActions": [],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": {
        "stateId": "414a4d5c-380d-443c-9c3d-ac8977c4b72d",
        "$invalid": false,
        "typeOfStateId": "state"
      },
      "isAiGenerated": false,
      "$tags": [],
      "id": "ff1273aa-085b-4cb5-bc35-a0f4bfabc3a9",
      "root": false,
      "$title": "goTo - checkNextStepJsAPI",
      "$position": { "top": "5200.25px", "left": "6534.75px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false
    },
    "a98134bb-8a9b-4998-be01-d669ca4ef41b": {
      "$contentActions": [
        {
          "action": {
            "$id": "35e85a9b-a7cc-4416-85de-0e53b9bade83",
            "$typeOfContent": "text",
            "type": "SendMessage",
            "settings": {
              "id": "aa5f3159-4dde-4461-b4a5-1a940905b738",
              "type": "text/plain",
              "content": "{{apiPostCreateLeadDebugJs}}",
              "metadata": {}
            },
            "$cardContent": {
              "document": {
                "id": "aa5f3159-4dde-4461-b4a5-1a940905b738",
                "type": "text/plain",
                "content": "{{apiPostCreateLeadDebugJs}}"
              },
              "editable": true,
              "deletable": true,
              "position": "left"
            }
          },
          "$invalid": false
        },
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "94917dfa-b301-4790-a145-38126a4c991e",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [
        {
          "stateId": "be8edb98-6904-49b4-a0a7-fbbff5fe5928",
          "typeOfStateId": "state",
          "$connId": "con_108",
          "$id": "dafa130b-e006-42d6-ae8b-3efa59ed124a",
          "conditions": [{ "source": "input", "comparison": "exists", "values": [] }],
          "$invalid": false
        }
      ],
      "$enteringCustomActions": [
        {
          "$id": "ff8436aa-c61a-4e19-bf69-4a1a91a3ab6a",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - apiPostCreateLeadDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(stateName) {\n  const requestContentTypeAndAccept = \"application/json\";\n\n  const formattedStateName = stateName[0].toUpperCase() + stateName.slice(1);\n\n  const allRequestData = {\n    contentType: requestContentTypeAndAccept,\n    accept: requestContentTypeAndAccept,\n    formattedStateName,\n  };\n\n  try {\n    allRequestData.urlRequest = \"https://microcheckout.m2digital.com.br/api/lead/generate\";\n\n    allRequestData.body = {\n      lead: {\n        url: \"{{resource.companyData@xOrigin}}\",\n        phone_number: \"{{userContextJs@userPhoneNumber}}\",\n      },\n      utm: {\n        id: \"{{responseApiPostCreateUtm@id}}\",\n        utm_tracking_id: \"{{userContextJs@idOriginSite}}\",\n      },\n    };\n  } catch (e) {\n    allRequestData.error = true;\n  }\n\n  return allRequestData;\n}\n",
            "inputVariables": ["state.name"],
            "outputVariable": "apiPostCreateLeadDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "72b631b1-03ff-445a-bb24-90cc25706aca",
          "$typeOfContent": "",
          "type": "ProcessHttp",
          "$title": "Process http - apiPostCreateLead",
          "$invalid": false,
          "settings": {
            "headers": {
              "Content-Type": "{{apiPostCreateLeadDataJs@contentType}}",
              "Accept": "{{apiPostCreateLeadDataJs@accept}}"
            },
            "method": "POST",
            "uri": "{{apiPostCreateLeadDataJs@urlRequest}}",
            "responseStatusVariable": "statusApiPostCreateLead",
            "responseBodyVariable": "responseApiPostCreateLead",
            "body": "{{apiPostCreateLeadDataJs@body}}"
          },
          "conditions": []
        },
        {
          "$id": "36876837-8dbd-40e9-a487-9b302622d38d",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - allRequestsDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(allRequestsData, stateName, status, response) {\n\tallRequestsData = JSON.parse(allRequestsData)\n\ttry {\n\t\tresponse = JSON.parse(response)\n\t\tallRequestsData[stateName] = { status: status, response: response }\n\t} catch (e) {\n\t}\n\treturn allRequestsData\n}\n",
            "inputVariables": [
              "allRequestsDataJs",
              "state.name",
              "statusApiPostCreateLead",
              "responseApiPostCreateLead"
            ],
            "outputVariable": "allRequestsDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "f3a4a792-7dc7-46f5-83b7-31941c4d7ccf",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - apiPostCreateLeadValidatedJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(responseApi) {\n  try {\n    \n    return { message: \"OK\" };\n    const dataWhoNeedExistInFirstObjectLvl = [\"id\"];\n\n    const checkedApiData = responseApi ? JSON.parse(responseApi) : {};\n\n    const hasAllDataInApi = dataWhoNeedExistInFirstObjectLvl.find(\n      (everyDataWhoNeedExist) => !checkedApiData[everyDataWhoNeedExist]\n    );\n\n    if (hasAllDataInApi) {\n      throw \"Data has not whats need in api\";\n    }\n\n    return { message: \"OK\" };\n  } catch (e) {\n    return { itBroked: true, message: e.message };\n  }\n}",
            "inputVariables": ["responseApiPostCreateLead"],
            "outputVariable": "apiPostCreateLeadValidatedJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "73067e39-5e78-4ab9-af0f-e188814c89f7",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - apiPostCreateLeadDebugJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(debugJs, formatterJson, apiData, status, response, apiValidation) {\r\n  try {\r\n    const debugMsg = [];\r\n\r\n    debugJs = JSON.parse(debugJs);\r\n\r\n    const { urlRequest, formattedStateName, body } = JSON.parse(apiData);\r\n    const bodyStringfied = formatBodyData(body);\r\n\r\n    const validationMessage = JSON.parse(apiValidation).message\r\n\r\n    if (debugJs) {\r\n      debugMsg.push(`{openBold}${formattedStateName} - ${validationMessage}{closeBold}`);\r\n      debugMsg.push(\"\");\r\n      debugMsg.push(`{openBold}url:{closeBold} ${urlRequest}`);\r\n      debugMsg.push(`{openBold}status${formattedStateName}:{closeBold} ${status}`);\r\n\r\n      if (bodyStringfied) {\r\n        debugMsg.push(\"\");\r\n        debugMsg.push(`{openBold}body:{closeBold} ${bodyStringfied}`);\r\n      }\r\n      debugMsg.push(\"\");\r\n      debugMsg.push(`{openBold}response${formattedStateName}:{closeBold} ${response}`);\r\n    }\r\n\r\n    const mountedDebugMsg = debugMsg.join(\"{lineBreak}\");\r\n\r\n    return formattedMsg(mountedDebugMsg, formatterJson);\r\n  } catch (e) {\r\n    return e;\r\n    return \"\";\r\n  }\r\n}\r\n\r\nfunction formattedMsg(message, formatterJson) {\r\n  try {\r\n    formatterJson = JSON.parse(formatterJson);\r\n    const { identifiers } = formatterJson;\r\n    let formattedMsg = message;\r\n    for (let everyFormatter in identifiers) {\r\n      formattedMsg = formattedMsg.replace(\r\n        new RegExp(identifiers[everyFormatter], \"g\"),\r\n        formatterJson[everyFormatter]\r\n      );\r\n    }\r\n    return formattedMsg;\r\n  } catch (e) {\r\n    return message;\r\n  }\r\n}\r\n\r\nfunction formatBodyData(body) {\r\n  if (body == null || body == undefined || body == \"\") {\r\n    return false;\r\n  }\r\n  return JSON.stringify(body);\r\n}",
            "inputVariables": [
              "debugJs",
              "formatterJson",
              "apiPostCreateLeadDataJs",
              "statusApiPostCreateLead",
              "responseApiPostCreateLead",
              "apiPostCreateLeadValidatedJs"
            ],
            "outputVariable": "apiPostCreateLeadDebugJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": [],
          "continueOnError": true
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": { "stateId": "fallback", "$invalid": false },
      "$tags": [
        {
          "id": "blip-tag-0e694e2e-1ccc-4020-a43c-a542abb1fdc5",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        },
        {
          "id": "blip-tag-481949e5-406b-4699-b305-3d7360a7a5ae",
          "label": "ProcessHttp",
          "background": "#7762E3",
          "canChangeBackground": false
        },
        {
          "id": "blip-tag-556e5314-da66-4311-b728-f2be76684a73",
          "label": "SendMessage",
          "background": "#EE82EE",
          "canChangeBackground": false
        }
      ],
      "id": "a98134bb-8a9b-4998-be01-d669ca4ef41b",
      "root": false,
      "$title": "apiPostCreateLead",
      "$position": { "top": "2089px", "left": "2280px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false,
      "isAiGenerated": false
    },
    "d1ecc360-8837-4c09-8dd5-308b14b4dc4c": {
      "$contentActions": [
        {
          "action": {
            "$id": "5d9dbf6b-282b-4e22-81d9-1339354f3c86",
            "$typeOfContent": "chat-state",
            "type": "SendMessage",
            "settings": {
              "id": "004de878-49a0-4b8a-b0fc-ce7e6e0f24e1",
              "type": "application/vnd.lime.chatstate+json",
              "content": { "state": "composing", "interval": 1000 }
            },
            "$cardContent": {
              "document": {
                "id": "004de878-49a0-4b8a-b0fc-ce7e6e0f24e1",
                "type": "application/vnd.lime.chatstate+json",
                "content": { "state": "composing", "interval": 1000 }
              },
              "editable": true,
              "deletable": true,
              "position": "left"
            }
          },
          "$invalid": false
        },
        {
          "action": {
            "$id": "540db3d5-d771-48a2-80ea-fee974e84efc",
            "$typeOfContent": "text",
            "type": "SendMessage",
            "settings": {
              "id": "78aa2192-b18e-4b7e-80da-eb90af59cb02",
              "type": "text/plain",
              "content": "Desculpe, não consegui entender!",
              "metadata": {}
            },
            "$cardContent": {
              "document": {
                "id": "78aa2192-b18e-4b7e-80da-eb90af59cb02",
                "type": "text/plain",
                "content": "Desculpe, não consegui entender!"
              },
              "editable": true,
              "deletable": true,
              "position": "left"
            }
          },
          "$invalid": false
        },
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "63d3ceff-95bc-4571-9bc3-d7eeca4485fd",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [],
      "$enteringCustomActions": [],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": { "stateId": "onboarding", "$invalid": false, "typeOfStateId": "state" },
      "isAiGenerated": false,
      "$tags": [
        {
          "id": "blip-tag-e5c031d7-98f5-4768-bb78-82833b6141b7",
          "label": "SendMessage",
          "background": "#EE82EE",
          "canChangeBackground": false
        }
      ],
      "id": "d1ecc360-8837-4c09-8dd5-308b14b4dc4c",
      "root": false,
      "$title": "defaultError",
      "$position": { "top": "4792.75px", "left": "1147.5px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false
    },
    "b3e520ea-fcb6-47d8-b8a2-f8ee4d96c7d9": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "abf458d7-b6b8-4a82-8ee4-109312ff6ecc",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [
        {
          "stateId": "{{defaultBlocksIdsJs@broked}}",
          "typeOfStateId": "variable",
          "$id": "b86ace6d-c5f9-4567-a862-bd371bdce470",
          "conditions": [
            {
              "source": "context",
              "comparison": "exists",
              "values": [],
              "variable": "goToMsgBlockByNextStepJs@itBroked"
            }
          ],
          "$invalid": false
        },
        {
          "stateId": "{{goToMsgBlockByNextStepJs@id}}",
          "typeOfStateId": "variable",
          "$id": "1932ef89-4cff-4ba6-81e3-28ef1219f747",
          "conditions": [{ "source": "input", "comparison": "exists", "values": [] }],
          "$invalid": false
        }
      ],
      "$enteringCustomActions": [
        {
          "$id": "b32b9212-a787-4881-872e-94d953014977",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - goToMsgBlockByNextStepJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(nextStepJs) {\n  try {\n    const allBlocksMapped = {\n      plans: {\n        msgPlans: \"e7de724b-eba0-40e3-9949-e7df021f56b5\",\n        msgForPix: \"a1312dea-48b4-4b61-bf17-ac94beac66e9\",\n        msgForBillet: \"2d09b3b7-08a0-408b-8924-f957dc37c6f7\",\n      },\n      personalData: {},\n      businessData: {},\n      addressData: {},\n      payment: {},\n      lgpd: {},\n    };\n\n    const allBLockWithoutCategory = Object.values(allBlocksMapped).reduce(\n      (acc, everyCategoryData) => (acc = { ...acc, ...everyCategoryData }),\n      {}\n    );\n\n    Object.keys(allBLockWithoutCategory).forEach((everyBlockName) => {\n      const blockNameInLowerCase = everyBlockName.toLowerCase();\n      const blockID = allBLockWithoutCategory[everyBlockName];\n      allBLockWithoutCategory[blockNameInLowerCase] = blockID;\n    });\n\n    const nextStepInLowerCase = nextStepJs.toLowerCase();\n\n    const specificNewBlockByNextStep = allBLockWithoutCategory[nextStepInLowerCase];\n\n    if (!specificNewBlockByNextStep) {\n      throw { message: \"Has no block mapped for this step: \" + nextStepJs };\n    }\n\n    const dataToReturn = { title: nextStepJs, id: specificNewBlockByNextStep };\n\n    return dataToReturn;\n  } catch (e) {\n    return { itBroked: true, brokenMsg: e.message };\n  }\n}\n",
            "inputVariables": ["nextStepJs"],
            "outputVariable": "goToMsgBlockByNextStepJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": { "stateId": "fallback", "$invalid": false },
      "isAiGenerated": false,
      "$tags": [
        {
          "id": "blip-tag-87fc14ad-157b-4934-942e-27474deae8de",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        }
      ],
      "id": "b3e520ea-fcb6-47d8-b8a2-f8ee4d96c7d9",
      "root": false,
      "$title": "goToSpecificMSG",
      "$position": { "top": "434px", "left": "5010px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false
    },
    "6a54ee39-4b53-4546-81e0-85774757ad96": {
      "$contentActions": [
        {
          "action": {
            "$id": "2953f6f2-fb82-4e6b-b22b-1c9d5714a16c",
            "$typeOfContent": "chat-state",
            "type": "SendMessage",
            "settings": {
              "id": "4bbba9d8-71e9-4260-8544-ebf5ad19984a",
              "type": "application/vnd.lime.chatstate+json",
              "content": { "state": "composing", "interval": 1000 }
            },
            "$cardContent": {
              "document": {
                "id": "4bbba9d8-71e9-4260-8544-ebf5ad19984a",
                "type": "application/vnd.lime.chatstate+json",
                "content": { "state": "composing", "interval": 1000 }
              },
              "editable": true,
              "deletable": true,
              "position": "left"
            }
          },
          "$invalid": false,
          "$$hashKey": "object:5787"
        },
        {
          "action": {
            "$id": "7e45e44f-a657-4216-a095-f8e24e8a1bfc",
            "$typeOfContent": "raw-content",
            "type": "SendRawMessage",
            "settings": {
              "metadata": {},
              "type": "{{currentMenuBuildJs@menuData.type}}",
              "rawContent": "{{currentMenuBuildJs@menuData.content}}"
            }
          },
          "$invalid": false,
          "$$hashKey": "object:5788"
        },
        {
          "input": {
            "bypass": false,
            "$cardContent": {
              "document": {
                "id": "bd5c8d35-55a4-4c36-9019-aa54bd34b217",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false,
            "expiration": "0:5"
          },
          "$invalid": false,
          "$$hashKey": "object:5789"
        }
      ],
      "$conditionOutputs": [
        {
          "stateId": "{{defaultBlocksIdsJs@checkInactivityConditions}}",
          "typeOfStateId": "variable",
          "$id": "cb27722c-3669-4277-9f0f-12caaabc4071",
          "conditions": [
            { "source": "input", "comparison": "notExists", "values": [], "$$hashKey": "object:5814" }
          ],
          "$invalid": false,
          "$$hashKey": "object:5797"
        },
        {
          "stateId": "5e40fa1d-72b1-4c5a-ad6c-c237f65d3597",
          "typeOfStateId": "state",
          "$connId": "con_113",
          "$id": "0138e5e5-e3c8-40d3-b4a6-3b1c2b06702b",
          "conditions": [
            { "source": "input", "comparison": "exists", "values": [], "$$hashKey": "object:5826" }
          ],
          "$invalid": false,
          "$$hashKey": "object:5798"
        }
      ],
      "$enteringCustomActions": [],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": { "stateId": "fallback", "$invalid": false },
      "$tags": [
        {
          "id": "blip-tag-25c1be69-a0fd-4ccf-a536-ae74e60f8a5b",
          "label": "SendMessage",
          "background": "#EE82EE",
          "canChangeBackground": false
        },
        {
          "id": "blip-tag-366d1579-2076-4442-9085-cd3ae617d25b",
          "label": "UserInput",
          "background": "#000000",
          "canChangeBackground": false
        }
      ],
      "id": "6a54ee39-4b53-4546-81e0-85774757ad96",
      "root": false,
      "$title": "genericBlockForASK",
      "$position": { "top": "2679px", "left": "7104px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false,
      "invalidOutputs": true,
      "isAiGenerated": false
    },
    "bb93536d-668f-4683-95bd-ea547d6051bd": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "169a816b-e6df-4d85-a532-9015a13391ea",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [
        {
          "stateId": "6a54ee39-4b53-4546-81e0-85774757ad96",
          "typeOfStateId": "state",
          "$connId": "con_118",
          "$id": "cb2cf447-22a7-4a3b-9e0c-db255d335615",
          "conditions": [
            {
              "source": "context",
              "comparison": "notExists",
              "values": [],
              "variable": "currentMenuDataJs@itBroked"
            },
            {
              "values": [],
              "source": "context",
              "comparison": "notExists",
              "variable": "currentMenuBuildJs@itBroked"
            }
          ],
          "$invalid": false
        }
      ],
      "$enteringCustomActions": [
        {
          "$id": "03e6c1c4-a7bf-4ad4-b89d-c9e2454a0de6",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - currentMenuBuildJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "{{resource.functions_msgBuildJs}}",
            "inputVariables": ["channelJs", "formatterJson", "currentMenuDataJs"],
            "outputVariable": "currentMenuBuildJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": {
        "stateId": "37f6ea15-cf65-4884-b3f8-d59043fcf767",
        "$invalid": false,
        "typeOfStateId": "state"
      },
      "isAiGenerated": false,
      "$tags": [
        {
          "id": "blip-tag-0e744edc-9a02-4588-aa96-9c5e519c827f",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        }
      ],
      "id": "bb93536d-668f-4683-95bd-ea547d6051bd",
      "root": false,
      "$title": "checkMenusIntegrityExceptPlans",
      "$position": { "top": "2678px", "left": "6898px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false
    },
    "9af53f00-0b36-49b2-ae05-e5c62702ed33": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "f7ad6eb6-ec22-4419-b3a1-9c042eb71be0",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false,
          "$$hashKey": "object:19146"
        }
      ],
      "$conditionOutputs": [
        {
          "stateId": "a12e4961-1583-48b8-ab74-a58a61823ff8",
          "typeOfStateId": "state",
          "$connId": "con_567",
          "$id": "ed05000e-c66e-433f-96a5-dd310ff1b283",
          "conditions": [
            {
              "source": "context",
              "comparison": "equals",
              "values": ["true"],
              "$$hashKey": "object:19263",
              "variable": "currentStepProcessedJs@extras.ignoreUserContextRegister"
            }
          ],
          "$invalid": false,
          "$$hashKey": "object:19153"
        },
        {
          "stateId": "1e4c2408-bf8b-412f-a46e-5dfa980cfbf2",
          "typeOfStateId": "state",
          "$connId": "con_123",
          "$id": "a64144fc-6db1-4013-b33b-731324d5b34c",
          "conditions": [
            {
              "source": "context",
              "comparison": "contains",
              "values": ["CPF"],
              "variable": "nextStepJs",
              "$$hashKey": "object:19175"
            }
          ],
          "$invalid": false,
          "$$hashKey": "object:19148"
        },
        {
          "stateId": "f61ad8c5-16b8-455d-88ac-2cc6c61dba00",
          "typeOfStateId": "state",
          "$connId": "con_128",
          "$id": "a5c8fcd9-b19e-4158-b545-9cf1cf78cb16",
          "conditions": [
            {
              "source": "context",
              "comparison": "contains",
              "values": ["Email"],
              "variable": "nextStepJs",
              "$$hashKey": "object:19194"
            }
          ],
          "$invalid": false,
          "$$hashKey": "object:19149"
        },
        {
          "stateId": "0c5bce15-77c6-4c4e-9a49-16ba5333cba3",
          "typeOfStateId": "state",
          "$connId": "con_133",
          "$id": "ee9da40d-e625-47c7-9b25-99065f911aa8",
          "conditions": [
            {
              "source": "context",
              "comparison": "equals",
              "values": ["askUpsell"],
              "variable": "nextStepJs",
              "$$hashKey": "object:19213"
            }
          ],
          "$invalid": false,
          "$$hashKey": "object:19150"
        },
        {
          "stateId": "f23644f0-28cd-4de2-b6da-c390655b06b7",
          "typeOfStateId": "state",
          "$connId": "con_138",
          "$id": "dd36e35d-2b44-4690-b127-335515749c21",
          "conditions": [
            {
              "source": "context",
              "comparison": "equals",
              "values": ["askPlanOptional"],
              "variable": "nextStepJs",
              "$$hashKey": "object:19232"
            }
          ],
          "$invalid": false,
          "$$hashKey": "object:19151"
        },
        {
          "stateId": "1c3b5df4-5f69-4ffc-b24e-de984f4d316a",
          "typeOfStateId": "state",
          "$connId": "con_143",
          "$id": "1058ecf8-e669-4012-9531-5825dcb38c0e",
          "conditions": [
            { "source": "input", "comparison": "exists", "values": [], "$$hashKey": "object:19251" }
          ],
          "$invalid": false,
          "$$hashKey": "object:19152"
        }
      ],
      "$enteringCustomActions": [],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": { "stateId": "fallback", "$invalid": false },
      "isAiGenerated": false,
      "$tags": [],
      "id": "9af53f00-0b36-49b2-ae05-e5c62702ed33",
      "root": false,
      "$title": "check - nextStepJs",
      "$position": { "top": "2539px", "left": "7530px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false
    },
    "1c3b5df4-5f69-4ffc-b24e-de984f4d316a": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "e8983c5e-791f-48ed-84e8-6df13836d72d",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [
        {
          "stateId": "{{defaultBlocksIdsJs@invalid}}",
          "typeOfStateId": "variable",
          "$id": "d861fd56-2fbd-4622-b284-5281a07017a6",
          "conditions": [
            {
              "source": "context",
              "comparison": "exists",
              "values": [],
              "variable": "getOnlyInputDataForUpdateJs@itBroked"
            }
          ],
          "$invalid": false
        },
        {
          "stateId": "a3f57bfe-82e6-477b-9b94-9857693db872",
          "typeOfStateId": "state",
          "$connId": "con_148",
          "$id": "771cd660-b3db-48f6-a48e-6fc0d5d25632",
          "conditions": [{ "source": "input", "comparison": "exists", "values": [] }],
          "$invalid": false
        }
      ],
      "$enteringCustomActions": [
        {
          "$id": "f3659420-4520-4ed6-9753-57a0e82ed67f",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - getOnlyInputDataForUpdateJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(currentStepProcessed) {\n  try {\n    const { identifier, extras } = JSON.parse(currentStepProcessed);\n\n    const { userInput, dataToRegisterInUserContext, inputRegexMatchData, updateSpecificCampaignName } =\n      extras;\n\n    const checkedUserInput = checkUserInputPriority(userInput, inputRegexMatchData, identifier);\n\n    const keyForRegisterInUserContext = dataToRegisterInUserContext || identifier;\n\n    const dataToReturn = {\n      allDataForUpdate: [{ inputIdentifier: keyForRegisterInUserContext, inputData: checkedUserInput }],\n    };\n\n    if (updateSpecificCampaignName) {\n      dataToReturn.allDataForUpdate.push({\n        inputIdentifier: \"specificCampaignName\",\n        inputData: checkedUserInput,\n      });\n    }\n\n    return dataToReturn;\n  } catch (e) {\n    return { itBroked: true, message: e.message };\n  }\n}\n\nfunction checkUserInputPriority(userInput, inputRegexData, menuIdentifier) {\n  const dataToUseByStep = {\n    askPortabilityNumber: \"inputRegexMatchData\",\n    askNewNumberDDD: \"inputRegexMatchData\",\n    askClientRG: \"inputRegexMatchData\",\n    askBusinessPhone: \"inputRegexMatchData\",\n    askBusinessRG: \"inputRegexMatchData\",\n    askZipCode: \"inputRegexMatchData\",\n    askNumber: \"inputRegexMatchData\",\n    askComplement: \"inputRegexMatchData\",\n    askDueDay: \"inputRegexMatchData\",\n  };\n\n  const dataInProcessedJsToRegister = dataToUseByStep[menuIdentifier];\n\n  if (inputRegexData) {\n    if (dataInProcessedJsToRegister == \"inputRegexMatchData\") {\n      return inputRegexData;\n    }\n  }\n\n  return userInput;\n}\n",
            "inputVariables": ["currentStepProcessedJs"],
            "outputVariable": "getOnlyInputDataForUpdateJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": { "stateId": "fallback", "$invalid": false },
      "isAiGenerated": false,
      "$tags": [
        {
          "id": "blip-tag-92944909-5c99-49bc-8e35-fb4877a6a513",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        }
      ],
      "id": "1c3b5df4-5f69-4ffc-b24e-de984f4d316a",
      "root": false,
      "$title": "inputDataGeneric",
      "$position": { "top": "2537.33px", "left": "7958.33px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false
    },
    "a3f57bfe-82e6-477b-9b94-9857693db872": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "e8983c5e-791f-48ed-84e8-6df13836d72d",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [
        {
          "stateId": "a12e4961-1583-48b8-ab74-a58a61823ff8",
          "typeOfStateId": "state",
          "$connId": "con_153",
          "$id": "c5b29ce6-301a-4f34-baef-063aaa4eda39",
          "conditions": [{ "source": "input", "comparison": "exists", "values": [] }],
          "$invalid": false
        }
      ],
      "$enteringCustomActions": [
        {
          "$id": "f3659420-4520-4ed6-9753-57a0e82ed67f",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - userContextJs - update",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(userContext, onlyDataForUpdate) {\n  try {\n    userContext = JSON.parse(userContext);\n\n    const { allDataForUpdate } = JSON.parse(onlyDataForUpdate);\n\n    allDataForUpdate.forEach((everyData) => {\n      const { inputIdentifier, inputData } = everyData;\n      userContext[inputIdentifier] = inputData;\n    });\n\n    userContext[inputIdentifier] = inputData;\n\n    return userContext;\n  } catch (e) {\n    return userContext;\n  }\n}\n",
            "inputVariables": ["userContextJs", "getOnlyInputDataForUpdateJs"],
            "outputVariable": "userContextJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": { "stateId": "fallback", "$invalid": false },
      "isAiGenerated": false,
      "$tags": [
        {
          "id": "blip-tag-3a781e72-2eb6-4774-a131-7dc62cfd3351",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        }
      ],
      "id": "a3f57bfe-82e6-477b-9b94-9857693db872",
      "root": false,
      "$title": "updateUserContext",
      "$position": { "top": "2445.75px", "left": "8589.25px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false
    },
    "43a3c5e5-bb3e-4fad-885b-1268ba7ac759": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "bd5c8d35-55a4-4c36-9019-aa54bd34b217",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [],
      "$enteringCustomActions": [
        {
          "$id": "4ca20277-aee4-455d-a578-83c18a74ff94",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - askNewNumberDDDDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(userContext) {\r\n  try {\r\n\r\n    const { userPhoneDDD } = JSON.parse(userContext)\r\n\r\n    const dataMenu = {\r\n      headerMsg:\r\n        \"Por favor, me informe o novo DDD para o seu número ou selecione o seu DDD abaixo.{lineBreak}{lineBreak}{openItalic}(Preciso que digite apenas os dois números do DDD. Exemplo: 11){closeItalic}\",\r\n      menuType: \"menu\",\r\n      descriptionButtonName: \"\",\r\n      menuWithFreeInput: [\r\n        {\r\n          needRegexValidation: true,\r\n          identifier: \"{{nextStepJs}}\",\r\n        },\r\n      ],\r\n      allMenuOptions: [\r\n        {\r\n          sectionTitle: \"\",\r\n          allSectionOptions: [\r\n            {\r\n              title: userPhoneDDD,\r\n              description: \"\",\r\n              identifier: \"validNewDDDOption\",\r\n              active: true,\r\n              extras: {\r\n                userInput: userPhoneDDD,\r\n                dataToRegisterInUserContext: \"{{nextStepJs}}\",\r\n                inputRegexMatchData: userPhoneDDD,\r\n              },\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n\r\n\r\n    return dataMenu\r\n  } catch (e) {\r\n    return { itBroked: true, brokenMsg: e.message };\r\n  }\r\n}",
            "inputVariables": ["userContextJs"],
            "outputVariable": "askNewNumberDDDDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "97625730-9eff-4ca4-8e51-593626ad7f16",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - currentMenuDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "{{resource.function_currentMenuData}}",
            "inputVariables": ["askNewNumberDDDDataJs"],
            "outputVariable": "currentMenuDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": ["First option", "Second option"],
      "$defaultOutput": {
        "stateId": "bb93536d-668f-4683-95bd-ea547d6051bd",
        "$invalid": false,
        "typeOfStateId": "state"
      },
      "$tags": [
        {
          "id": "blip-tag-9133a875-1619-4d28-9d13-4c3ba8b8c96d",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        }
      ],
      "id": "43a3c5e5-bb3e-4fad-885b-1268ba7ac759",
      "root": false,
      "$title": "askNewNumberDDD",
      "$position": { "top": "6943.67px", "left": "377.667px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false,
      "invalidOutputs": true,
      "isAiGenerated": false
    },
    "43f38356-5841-47e0-b90c-370ee5ccc7e7": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "bd5c8d35-55a4-4c36-9019-aa54bd34b217",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [],
      "$enteringCustomActions": [
        {
          "$id": "4ca20277-aee4-455d-a578-83c18a74ff94",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - askPortabilityNumberDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(userContext) {\r\n  try {\r\n    const { userPhoneNumber, formattedUserPhoneNumber } = JSON.parse(userContext);\r\n\r\n    const dataMenu = {\r\n      headerMsg:\r\n        \"Perfeito, para qual número você deseja realizar sua portabilidade? {lineBreak}{lineBreak}Se preferir {openBold}manter{closeBold} o seu número atual, selecione no menu.\",\r\n      menuType: \"menu\",\r\n      descriptionButtonText: \"\",\r\n      menuWithFreeInput: [\r\n        {\r\n          needRegexValidation: true,\r\n          identifier: \"{{nextStepJs}}\",\r\n        },\r\n      ],\r\n      allMenuOptions: [\r\n        {\r\n          sectionTitle: \"\",\r\n          allSectionOptions: [\r\n            {\r\n              title: formattedUserPhoneNumber,\r\n              description: \"\",\r\n              identifier: \"validPhoneOption\",\r\n              active: true,\r\n              extras: {\r\n                userInput: userPhoneNumber,\r\n                dataToRegisterInUserContext: \"{{nextStepJs}}\",\r\n                inputRegexMatchData: userPhoneNumber,\r\n              },\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n\r\n    return dataMenu;\r\n  } catch (e) {\r\n    return { itBroked: true, brokenMsg: e.message };\r\n  }\r\n}\r\n",
            "inputVariables": ["userContextJs"],
            "outputVariable": "askPortabilityNumberDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "8c78ccbb-8583-4336-804d-76a61d6ca432",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - currentMenuDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "{{resource.function_currentMenuData}}",
            "inputVariables": ["askPortabilityNumberDataJs"],
            "outputVariable": "currentMenuDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": {
        "stateId": "bb93536d-668f-4683-95bd-ea547d6051bd",
        "$invalid": false,
        "typeOfStateId": "state"
      },
      "$tags": [
        {
          "id": "blip-tag-b3dcf7d9-7742-43ce-b802-8a1bdddbc95e",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        }
      ],
      "id": "43f38356-5841-47e0-b90c-370ee5ccc7e7",
      "root": false,
      "$title": "askPortabilityNumber",
      "$position": { "top": "7076.33px", "left": "429.333px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false,
      "invalidOutputs": true,
      "isAiGenerated": false
    },
    "66d0fc81-8c10-4659-81d9-2fb4dff67826": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "926087a5-bbff-4f6a-a0c8-eb25630295a6",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [
        {
          "stateId": "d8545994-0bcb-4f8c-9f0f-af2c0e9ea46f",
          "typeOfStateId": "state",
          "$connId": "con_158",
          "$id": "a67946bb-c1bf-4a21-abb2-78c431a02dcb",
          "conditions": [{ "source": "input", "comparison": "exists", "values": [] }],
          "$invalid": false
        }
      ],
      "$enteringCustomActions": [
        {
          "$id": "e51240c3-fa9d-4828-a803-4235105adb75",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Executar script - entryPointJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(input) {\n  const entryPoint = {\n    flow: \"defaultFlow\",\n    botByPass: \"\",\n  };\n\n  input = input.toLowerCase();\n  if (input.includes(\"olá, tudo bem? gostaria de mais informações sobre internet residencial\")) {\n    entryPoint.flow = \"linkInSite\";\n    entryPoint.botByPass = \"PF_Residencial\";\n  }\n\n  return entryPoint;\n}\n",
            "inputVariables": ["input.content"],
            "outputVariable": "entryPointJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "a786194f-99d0-47d6-93b9-9fe3b8d86d84",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - utmsDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(entryPoint, userContext, firstContent) {\n  try {\n\n    const { flow } = JSON.parse(entryPoint);\n    const { routerName } = JSON.parse(userContext);\n\n    const allRoutersUtmSource = { telecombaseroutertest: \"chatTimMobile\" };\n\n    const specificUtmSource = allRoutersUtmSource[routerName] || \"unmappedRouterName\";\n\n    const checkedSiteOriginId = checkIdOriginInFirstContent(firstContent)\n\n    const allUtms = {\n      source: specificUtmSource,\n      medium: flow,\n      siteOriginID: checkedSiteOriginId\n    };\n    return allUtms;\n  } catch (e) {\n    return e.message\n    return \"error\";\n  }\n}\n\nfunction checkIdOriginInFirstContent(firstContent) {\n  const regexCompound = /COD: (\\d+)/i;\n  const regexInputMatch = firstContent.match(regexCompound);\n\n  if (regexInputMatch) {\n    return parseInt(regexInputMatch[1]);\n  }\n\n  return null;\n}",
            "inputVariables": ["entryPointJs", "userContextJs", "firstContent"],
            "outputVariable": "utmsDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": { "stateId": "fallback", "$invalid": false },
      "isAiGenerated": false,
      "$tags": [
        {
          "id": "blip-tag-249f4ae9-891a-4dfd-9ea6-fd134a57fd45",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        }
      ],
      "id": "66d0fc81-8c10-4659-81d9-2fb4dff67826",
      "root": false,
      "$title": "setDataByFirstContent",
      "$position": { "top": "2364.67px", "left": "1866.67px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false
    },
    "54a2e17d-c87a-4012-9df4-e2ea1eacf5f4": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "bd5c8d35-55a4-4c36-9019-aa54bd34b217",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [],
      "$enteringCustomActions": [
        {
          "$id": "4ca20277-aee4-455d-a578-83c18a74ff94",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - askClientCPFDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run() {\r\n  try {\r\n\r\n    const dataMenu = {\r\n      headerMsg:\r\n        \"Por favor me informe o seu CPF.\",\r\n      menuType: \"text\",\r\n      descriptionButtonName: \"\",\r\n      menuWithFreeInput: [\r\n        {\r\n          needRegexValidation: true,\r\n          identifier: \"{{nextStepJs}}\",\r\n        },\r\n      ]\r\n    };\r\n\r\n\r\n    return dataMenu\r\n  } catch (e) {\r\n    return { itBroked: true, brokenMsg: e.message };\r\n  }\r\n}",
            "inputVariables": [],
            "outputVariable": "askClientCPFDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "ece2a2ef-bffc-4c78-b8a6-7d7514fed0e7",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - currentMenuDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "{{resource.function_currentMenuData}}",
            "inputVariables": ["askClientCPFDataJs"],
            "outputVariable": "currentMenuDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": {
        "stateId": "bb93536d-668f-4683-95bd-ea547d6051bd",
        "$invalid": false,
        "typeOfStateId": "state"
      },
      "$tags": [
        {
          "id": "blip-tag-3b35a8c7-d978-46d4-93d1-53f49ce8d503",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        }
      ],
      "id": "54a2e17d-c87a-4012-9df4-e2ea1eacf5f4",
      "root": false,
      "$title": "askClientCPF",
      "$position": { "top": "2505.67px", "left": "5676.67px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false,
      "invalidOutputs": true,
      "isAiGenerated": false
    },
    "5f7eff45-1d68-4e6c-ab1d-4d839bd45020": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "bd5c8d35-55a4-4c36-9019-aa54bd34b217",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [],
      "$enteringCustomActions": [
        {
          "$id": "4ca20277-aee4-455d-a578-83c18a74ff94",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - askClientEmailDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run() {\r\n  try {\r\n\r\n    const dataMenu = {\r\n      headerMsg:\r\n        \"Por favor me informe o seu Email.\",\r\n      menuType: \"text\",\r\n      descriptionButtonName: \"\",\r\n      menuWithFreeInput: [\r\n        {\r\n          needRegexValidation: true,\r\n          identifier: \"{{nextStepJs}}\",\r\n        },\r\n      ]\r\n    };\r\n\r\n\r\n    return dataMenu\r\n  } catch (e) {\r\n    return { itBroked: true, brokenMsg: e.message };\r\n  }\r\n}",
            "inputVariables": [],
            "outputVariable": "askClientEmailDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "f43e668e-47fb-4960-a00c-9a229159a3e7",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - currentMenuDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "{{resource.function_currentMenuData}}",
            "inputVariables": ["askClientEmailDataJs"],
            "outputVariable": "currentMenuDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": {
        "stateId": "bb93536d-668f-4683-95bd-ea547d6051bd",
        "$invalid": false,
        "typeOfStateId": "state"
      },
      "$tags": [
        {
          "id": "blip-tag-95434011-709d-4ae7-80e4-387e9cbba8de",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        }
      ],
      "id": "5f7eff45-1d68-4e6c-ab1d-4d839bd45020",
      "root": false,
      "$title": "askClientEmail",
      "$position": { "top": "2500.25px", "left": "5887px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false,
      "invalidOutputs": true,
      "isAiGenerated": false
    },
    "ee0923e1-b29f-425e-91c0-5659e9025631": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "bd5c8d35-55a4-4c36-9019-aa54bd34b217",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [],
      "$enteringCustomActions": [
        {
          "$id": "4ca20277-aee4-455d-a578-83c18a74ff94",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - askZipCodeDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run() {\r\n  try {\r\n\r\n    const dataMenu = {\r\n      headerMsg:\r\n        \"Por favor me informe o seu CEP.\",\r\n      menuType: \"text\",\r\n      descriptionButtonName: \"\",\r\n      menuWithFreeInput: [\r\n        {\r\n          needRegexValidation: true,\r\n          identifier: \"{{nextStepJs}}\",\r\n        },\r\n      ]\r\n    };\r\n\r\n\r\n    return dataMenu\r\n  } catch (e) {\r\n    return { itBroked: true, brokenMsg: e.message };\r\n  }\r\n}\r\n",
            "inputVariables": [],
            "outputVariable": "askZipCodeDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "c54ce81e-96f2-45d0-a2fa-73311d9e8541",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - currentMenuDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "{{resource.function_currentMenuData}}",
            "inputVariables": ["askZipCodeDataJs"],
            "outputVariable": "currentMenuDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": {
        "stateId": "bb93536d-668f-4683-95bd-ea547d6051bd",
        "$invalid": false,
        "typeOfStateId": "state"
      },
      "$tags": [
        {
          "id": "blip-tag-40ba11f2-af17-44c2-9b79-c1a6d24d2e89",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        }
      ],
      "id": "ee0923e1-b29f-425e-91c0-5659e9025631",
      "root": false,
      "$title": "askZipCode",
      "$position": { "top": "956.333px", "left": "5488px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false,
      "invalidOutputs": true,
      "isAiGenerated": false
    },
    "1aabb3eb-9b95-446a-8496-278c20e83c00": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "bd5c8d35-55a4-4c36-9019-aa54bd34b217",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [],
      "$enteringCustomActions": [
        {
          "$id": "4ca20277-aee4-455d-a578-83c18a74ff94",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - askNumberDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run() {\r\n  try {\r\n\r\n    const dataMenu = {\r\n      headerMsg:\r\n        \"Por favor me informe o seu Número do seu endereço.\",\r\n      menuType: \"text\",\r\n      descriptionButtonName: \"\",\r\n      menuWithFreeInput: [\r\n        {\r\n          needRegexValidation: true,\r\n          identifier: \"{{nextStepJs}}\",\r\n        },\r\n      ],\r\n      // allMenuOptions: [\r\n      //   {\r\n      //     sectionTitle: \"\",\r\n      //     allSectionOptions: [\r\n      //       {\r\n      //         title: \"Sem número\",\r\n      //         description: \"\",\r\n      //         identifier: \"validNewDDDOption\",\r\n      //         active: true,\r\n      //         extras: {\r\n      //           userInput: \"Sem número\",\r\n      //           dataToRegisterInUserContext: \"{{nextStepJs}}\",\r\n      //           inputRegexMatchData: \"Sem número\",\r\n      //         },\r\n      //       },\r\n      //     ],\r\n      //   },\r\n      // ],\r\n    };\r\n\r\n\r\n    return dataMenu\r\n  } catch (e) {\r\n    return { itBroked: true, brokenMsg: e.message };\r\n  }\r\n}\r\n",
            "inputVariables": [],
            "outputVariable": "askNumberDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "1c4a0f2c-79bb-47ec-a2e1-883292ed3cc1",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - currentMenuDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "{{resource.function_currentMenuData}}",
            "inputVariables": ["askNumberDataJs"],
            "outputVariable": "currentMenuDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": {
        "stateId": "bb93536d-668f-4683-95bd-ea547d6051bd",
        "$invalid": false,
        "typeOfStateId": "state"
      },
      "$tags": [
        {
          "id": "blip-tag-fccec904-56e8-4661-9e5e-94e83aaf5848",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        }
      ],
      "id": "1aabb3eb-9b95-446a-8496-278c20e83c00",
      "root": false,
      "$title": "askNumber",
      "$position": { "top": "957.667px", "left": "5707px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false,
      "invalidOutputs": true,
      "isAiGenerated": false
    },
    "f4da6645-434b-4429-8305-c8a7557999d9": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "bd5c8d35-55a4-4c36-9019-aa54bd34b217",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [],
      "$enteringCustomActions": [
        {
          "$id": "4ca20277-aee4-455d-a578-83c18a74ff94",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - askComplementDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run() {\r\n  try {\r\n\r\n    const dataMenu = {\r\n      headerMsg:\r\n        \"Por favor me informe o seu Complemento.\",\r\n      menuType: \"menu\",\r\n      descriptionButtonName: \"\",\r\n      menuWithFreeInput: [\r\n        {\r\n          needRegexValidation: false,\r\n          identifier: \"{{nextStepJs}}\",\r\n        },\r\n      ],\r\n      allMenuOptions: [\r\n        {\r\n          sectionTitle: \"\",\r\n          allSectionOptions: [\r\n            {\r\n              title: \"Sem complemento\",\r\n              description: \"\",\r\n              identifier: \"validNewDDDOption\",\r\n              active: true,\r\n              extras: {\r\n                userInput: \"Sem complemento\",\r\n                dataToRegisterInUserContext: \"{{nextStepJs}}\",\r\n                inputRegexMatchData: \"Sem complemento\",\r\n              },\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n\r\n\r\n    return dataMenu\r\n  } catch (e) {\r\n    return { itBroked: true, brokenMsg: e.message };\r\n  }\r\n}\r\n",
            "inputVariables": [],
            "outputVariable": "askComplementDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "fb83d930-4be8-45df-844e-c6511c3a606a",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - currentMenuDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "{{resource.function_currentMenuData}}",
            "inputVariables": ["askComplementDataJs"],
            "outputVariable": "currentMenuDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": {
        "stateId": "bb93536d-668f-4683-95bd-ea547d6051bd",
        "$invalid": false,
        "typeOfStateId": "state"
      },
      "$tags": [
        {
          "id": "blip-tag-ef25158f-c8b8-4345-9bbb-af9fe4f10e5a",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        }
      ],
      "id": "f4da6645-434b-4429-8305-c8a7557999d9",
      "root": false,
      "$title": "askComplement",
      "$position": { "top": "952.667px", "left": "5926px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false,
      "invalidOutputs": true,
      "isAiGenerated": false
    },
    "accff05b-e305-4a9e-a056-81203c3763cd": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "bd5c8d35-55a4-4c36-9019-aa54bd34b217",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [],
      "$enteringCustomActions": [
        {
          "$id": "4ca20277-aee4-455d-a578-83c18a74ff94",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - askNeighborhoodDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run() {\r\n  try {\r\n\r\n    const dataMenu = {\r\n      headerMsg:\r\n        \"Informe o bairro do endereço:\",\r\n      menuType: \"text\",\r\n      descriptionButtonName: \"\",\r\n      menuWithFreeInput: [\r\n        {\r\n          needRegexValidation: true,\r\n          identifier: \"{{nextStepJs}}\",\r\n        },\r\n      ]\r\n    };\r\n\r\n\r\n    return dataMenu\r\n  } catch (e) {\r\n    return { itBroked: true, brokenMsg: e.message };\r\n  }\r\n}\r\n",
            "inputVariables": [],
            "outputVariable": "askNeighborhoodDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "fc548379-5391-4f05-b92d-e65ddf91a818",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - currentMenuDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "{{resource.function_currentMenuData}}",
            "inputVariables": ["askNeighborhoodDataJs"],
            "outputVariable": "currentMenuDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": {
        "stateId": "bb93536d-668f-4683-95bd-ea547d6051bd",
        "$invalid": false,
        "typeOfStateId": "state"
      },
      "$tags": [
        {
          "id": "blip-tag-6d061958-f9c9-49d4-b31f-6b498432f1e5",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        }
      ],
      "id": "accff05b-e305-4a9e-a056-81203c3763cd",
      "root": false,
      "$title": "askNeighborhood",
      "$position": { "top": "1106.67px", "left": "5502px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false,
      "invalidOutputs": true,
      "isAiGenerated": false
    },
    "20dafb1b-53cd-4d90-b44c-2b296661a200": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "c86956b6-9670-40ae-8de7-ea2b8754d48e",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false,
          "$$hashKey": "object:5305"
        }
      ],
      "$conditionOutputs": [
        {
          "stateId": "9af53f00-0b36-49b2-ae05-e5c62702ed33",
          "typeOfStateId": "state",
          "$connId": "con_163",
          "$id": "38d2fdad-46c2-4815-aaac-193377dc2232",
          "conditions": [
            {
              "source": "context",
              "comparison": "equals",
              "values": ["askPlanPrincipalOffer"],
              "variable": "nextStepJs",
              "$$hashKey": "object:5317"
            }
          ],
          "$invalid": false,
          "$$hashKey": "object:5307"
        }
      ],
      "$enteringCustomActions": [
        {
          "$id": "30778566-8b86-433e-a50a-5873f837e4da",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - allFlowStepsJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(allFlowStepsJs, currentStepProcessedJs) {\n  try {\n    allFlowStepsJs = JSON.parse(allFlowStepsJs);\n\n    const { stepForTurnTrue, stepForTurnFalse } = JSON.parse(currentStepProcessedJs).extras;\n    if (stepForTurnTrue) {\n      stepForTurnTrue.forEach((everyStepToTurnTrue) => (allFlowStepsJs[everyStepToTurnTrue] = true));\n    }\n    if (stepForTurnFalse) {\n      stepForTurnFalse.forEach((everyStepToTurnFalse) => (allFlowStepsJs[everyStepToTurnFalse] = false));\n    }\n\n    return allFlowStepsJs;\n  } catch (e) {\n    return \"error\";\n  }\n}\n",
            "inputVariables": ["allFlowStepsJs", "currentStepProcessedJs"],
            "outputVariable": "allFlowStepsJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": {
        "stateId": "9af53f00-0b36-49b2-ae05-e5c62702ed33",
        "$invalid": false,
        "typeOfStateId": "state"
      },
      "isAiGenerated": false,
      "$tags": [
        {
          "id": "blip-tag-8b95dfac-d117-4e1c-b1a3-d44085276653",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        }
      ],
      "id": "20dafb1b-53cd-4d90-b44c-2b296661a200",
      "root": false,
      "$title": "updateNextSteps - correction",
      "$position": { "top": "2826.31px", "left": "7530px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false
    },
    "ce5506bf-ef2c-44c4-8d46-61cec131ba95": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "bd5c8d35-55a4-4c36-9019-aa54bd34b217",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [],
      "$enteringCustomActions": [
        {
          "$id": "4ca20277-aee4-455d-a578-83c18a74ff94",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - askRoadNameDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run() {\r\n  try {\r\n\r\n    const dataMenu = {\r\n      headerMsg:\r\n        \"Informe seu logradouro:\",\r\n      menuType: \"text\",\r\n      descriptionButtonName: \"\",\r\n      menuWithFreeInput: [\r\n        {\r\n          needRegexValidation: true,\r\n          identifier: \"{{nextStepJs}}\",\r\n        },\r\n      ]\r\n    };\r\n\r\n\r\n    return dataMenu\r\n  } catch (e) {\r\n    return { itBroked: true, brokenMsg: e.message };\r\n  }\r\n}\r\n",
            "inputVariables": [],
            "outputVariable": "askRoadNameDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "ad586506-b7a7-422f-8c74-68a4cca024de",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - currentMenuDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "{{resource.function_currentMenuData}}",
            "inputVariables": ["askRoadNameDataJs"],
            "outputVariable": "currentMenuDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": {
        "stateId": "bb93536d-668f-4683-95bd-ea547d6051bd",
        "$invalid": false,
        "typeOfStateId": "state"
      },
      "$tags": [
        {
          "id": "blip-tag-ed1437f1-dd2f-4c8a-92cf-1d1429069be1",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        }
      ],
      "id": "ce5506bf-ef2c-44c4-8d46-61cec131ba95",
      "root": false,
      "$title": "askRoadName",
      "$position": { "top": "948.667px", "left": "6136px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false,
      "invalidOutputs": true,
      "isAiGenerated": false
    },
    "3e7723b9-e417-463f-85d2-aa4a0430852c": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "bd5c8d35-55a4-4c36-9019-aa54bd34b217",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [],
      "$enteringCustomActions": [
        {
          "$id": "4ca20277-aee4-455d-a578-83c18a74ff94",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - askBusinessCNPJDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run() {\r\n  try {\r\n\r\n    const dataMenu = {\r\n      headerMsg:\r\n        \"Ótimo! Agora vamos para a etapa de coleta dos dados da empresa. {lineBreak}{lineBreak}Por favor, informe o {openBold}CNPJ da Empresa{closeBold}.{lineBreak}{lineBreak}{openItalic}Preciso que digite apenas os {openBold}números{closeBold} do {openBold}CNPJ{closeBold}.{closeItalic} {lineBreak}({openBold}Exemplo{closeBold}: 12345678000123)\",\r\n      menuType: \"text\",\r\n      descriptionButtonName: \"\",\r\n      menuWithFreeInput: [\r\n        {\r\n          needRegexValidation: true,\r\n          identifier: \"{{nextStepJs}}\",\r\n        },\r\n      ]\r\n    };\r\n\r\n\r\n    return dataMenu\r\n  } catch (e) {\r\n    return { itBroked: true, brokenMsg: e.message };\r\n  }\r\n}",
            "inputVariables": [],
            "outputVariable": "askBusinessCNPJDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "0ae82a44-b5e4-45f0-9c09-8fb0bdb24c28",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - currentMenuDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "{{resource.function_currentMenuData}}",
            "inputVariables": ["askBusinessCNPJDataJs"],
            "outputVariable": "currentMenuDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": {
        "stateId": "bb93536d-668f-4683-95bd-ea547d6051bd",
        "$invalid": false,
        "typeOfStateId": "state"
      },
      "$tags": [
        {
          "id": "blip-tag-5a7dd2ae-d72c-4330-a111-43276bfc18e0",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        }
      ],
      "id": "3e7723b9-e417-463f-85d2-aa4a0430852c",
      "root": false,
      "$title": "askBusinessCNPJ",
      "$position": { "top": "7205px", "left": "446px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false,
      "invalidOutputs": true,
      "isAiGenerated": false
    },
    "e8c03055-73f7-4385-8472-292619d41d3e": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "bd5c8d35-55a4-4c36-9019-aa54bd34b217",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [],
      "$enteringCustomActions": [
        {
          "$id": "4ca20277-aee4-455d-a578-83c18a74ff94",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - askBusinessPhoneDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run() {\r\n  try {\r\n\r\n    const dataMenu = {\r\n      headerMsg:\r\n        \"Informe o {openBold}telefone{closeBold} da sua empresa.{lineBreak}{lineBreak}{openItalic}Preciso que digite apenas os {openBold}números{closeBold} do {openBold}Telefone{closeBold}.{closeItalic} {lineBreak}({openBold}Exemplo{closeBold}: 16 987654321)\",\r\n      menuType: \"text\",\r\n      descriptionButtonName: \"\",\r\n      menuWithFreeInput: [\r\n        {\r\n          needRegexValidation: true,\r\n          identifier: \"{{nextStepJs}}\",\r\n        },\r\n      ]\r\n    };\r\n\r\n\r\n    return dataMenu\r\n  } catch (e) {\r\n    return { itBroked: true, brokenMsg: e.message };\r\n  }\r\n}",
            "inputVariables": [],
            "outputVariable": "askBusinessPhoneDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "c179c03d-9cf4-4546-bc5e-108aa4dd3ff0",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - currentMenuDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "{{resource.function_currentMenuData}}",
            "inputVariables": ["askBusinessPhoneDataJs"],
            "outputVariable": "currentMenuDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": {
        "stateId": "bb93536d-668f-4683-95bd-ea547d6051bd",
        "$invalid": false,
        "typeOfStateId": "state"
      },
      "$tags": [
        {
          "id": "blip-tag-2b9e7b02-1130-4ea7-bdf8-2e836dc456d5",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        }
      ],
      "id": "e8c03055-73f7-4385-8472-292619d41d3e",
      "root": false,
      "$title": "askBusinessPhone",
      "$position": { "top": "7184px", "left": "664px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false,
      "invalidOutputs": true,
      "isAiGenerated": false
    },
    "986e7a01-8761-44b6-b205-3e641fad8749": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "bd5c8d35-55a4-4c36-9019-aa54bd34b217",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [],
      "$enteringCustomActions": [
        {
          "$id": "4ca20277-aee4-455d-a578-83c18a74ff94",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - askBusinessCPFDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run() {\r\n  try {\r\n\r\n    const dataMenu = {\r\n      headerMsg:\r\n        \"Agora informe o {openBold}CPF{closeBold} do responsável da sua empresa.{lineBreak}{lineBreak}{openItalic}Preciso que digite apenas os {openBold}números{closeBold} do {openBold}CPF{closeBold}.{closeItalic} {lineBreak}({openBold}Exemplo{closeBold}: 98765432110)\",\r\n      menuType: \"text\",\r\n      descriptionButtonName: \"\",\r\n      menuWithFreeInput: [\r\n        {\r\n          needRegexValidation: true,\r\n          identifier: \"{{nextStepJs}}\",\r\n        },\r\n      ]\r\n    };\r\n\r\n\r\n    return dataMenu\r\n  } catch (e) {\r\n    return { itBroked: true, brokenMsg: e.message };\r\n  }\r\n}",
            "inputVariables": [],
            "outputVariable": "askBusinessCPFDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "a1d69f5a-08a9-4667-982d-d8414484079f",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - currentMenuDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "{{resource.function_currentMenuData}}",
            "inputVariables": ["askBusinessCPFDataJs"],
            "outputVariable": "currentMenuDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": {
        "stateId": "bb93536d-668f-4683-95bd-ea547d6051bd",
        "$invalid": false,
        "typeOfStateId": "state"
      },
      "$tags": [
        {
          "id": "blip-tag-44d1a499-4b00-47c1-96ba-8f0fbbc11eee",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        }
      ],
      "id": "986e7a01-8761-44b6-b205-3e641fad8749",
      "root": false,
      "$title": "askBusinessCPF",
      "$position": { "top": "7332px", "left": "450px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false,
      "invalidOutputs": true,
      "isAiGenerated": false
    },
    "16190621-2cd6-4d28-9c56-9825cb716328": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "bd5c8d35-55a4-4c36-9019-aa54bd34b217",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [],
      "$enteringCustomActions": [
        {
          "$id": "4ca20277-aee4-455d-a578-83c18a74ff94",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - askBusinessRGDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run() {\r\n  try {\r\n\r\n    const dataMenu = {\r\n      headerMsg:\r\n        \"E agora o {openBold}RG{closeBold} do responsável da sua empresa.{lineBreak}{lineBreak}{openItalic}Preciso que digite apenas os {openBold}dígitos{closeBold} do {openBold}RG{closeBold}.{closeItalic}{lineBreak} ({openBold}Exemplo{closeBold}: 123456789)\",\r\n      menuType: \"text\",\r\n      descriptionButtonName: \"\",\r\n      menuWithFreeInput: [\r\n        {\r\n          needRegexValidation: true,\r\n          identifier: \"{{nextStepJs}}\",\r\n        },\r\n      ]\r\n    };\r\n\r\n\r\n    return dataMenu\r\n  } catch (e) {\r\n    return { itBroked: true, brokenMsg: e.message };\r\n  }\r\n}",
            "inputVariables": [],
            "outputVariable": "askBusinessRGDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "3be95b83-5780-4ef2-b5d7-a5686960462c",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - currentMenuDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "{{resource.function_currentMenuData}}",
            "inputVariables": ["askBusinessRGDataJs"],
            "outputVariable": "currentMenuDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": {
        "stateId": "bb93536d-668f-4683-95bd-ea547d6051bd",
        "$invalid": false,
        "typeOfStateId": "state"
      },
      "$tags": [
        {
          "id": "blip-tag-0c7855ba-50d1-47c2-afe9-7008ad392dcc",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        }
      ],
      "id": "16190621-2cd6-4d28-9c56-9825cb716328",
      "root": false,
      "$title": "askBusinessRG",
      "$position": { "top": "7336px", "left": "658px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false,
      "invalidOutputs": true,
      "isAiGenerated": false
    },
    "8c4f6ab5-6d25-46d9-812c-30d9cc88a792": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "bd5c8d35-55a4-4c36-9019-aa54bd34b217",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [],
      "$enteringCustomActions": [
        {
          "$id": "4ca20277-aee4-455d-a578-83c18a74ff94",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - askBusinessCheckoutDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(userContext) {\r\n  try {\r\n    const menuHeaderMsg = mountMsgForHeader(userContext);\r\n\r\n    const dataMenu = {\r\n      headerMsg: menuHeaderMsg,\r\n      menuType: \"menu\",\r\n      descriptionButtonName: \"\",\r\n      allMenuOptions: [\r\n        {\r\n          sectionTitle: \"\",\r\n          allSectionOptions: [\r\n            {\r\n              title: \"Confirmar\",\r\n              description: \"\",\r\n              identifier: \"confirm\",\r\n              active: true,\r\n              extras: { ignoreUserContextRegister: true },\r\n            },\r\n            {\r\n              title: \"Não confirmar\",\r\n              description: \"\",\r\n              identifier: \"decline\",\r\n              active: true,\r\n              extras: { ignoreUserContextRegister: true, stepForTurnTrue: [\"askBusinessCorrection\"] },\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n\r\n    return dataMenu;\r\n  } catch (e) {\r\n    return { itBroked: true, brokenMsg: e.message };\r\n  }\r\n}\r\n\r\nfunction mountMsgForHeader(userContext) {\r\n  const { askBusinessCNPJ, askBusinessPhone, askBusinessCPF, askBusinessEmail, askBusinessRG, askBusinessOwnerName } = JSON.parse(userContext);\r\n\r\n  const allHeaderMsg = [];\r\n\r\n  allHeaderMsg.push(`{openBold}Resumo dos dados da empresa{closeBold}`);\r\n  allHeaderMsg.push(``);\r\n\r\n  if (askBusinessCNPJ) {\r\n    allHeaderMsg.push(`{openBold}CNPJ{closeBold}: ${formatCNPJ(askBusinessCNPJ)}`);\r\n  }\r\n  if (askBusinessPhone) {\r\n    allHeaderMsg.push(`{openBold}Telefone{closeBold}: ${formatPhone(askBusinessPhone)}`);\r\n  }\r\n  if (askBusinessEmail) {\r\n    allHeaderMsg.push(`{openBold}Email{closeBold}: ${askBusinessEmail}`);\r\n  }\r\n  if (askBusinessCPF || askBusinessRG || askBusinessOwnerName) {\r\n    allHeaderMsg.push(`{lineBreak}Dados do {openBold}responável pela empresa{closeBold}:`);\r\n  }\r\n  if (askBusinessOwnerName) {\r\n    allHeaderMsg.push(`{openBold}Nome{closeBold}: ${askBusinessOwnerName}`);\r\n  }\r\n  if (askBusinessCPF) {\r\n    allHeaderMsg.push(`{openBold}CPF{closeBold}: ${formatCPF(askBusinessCPF)}`);\r\n  }\r\n  if (askBusinessRG) {\r\n    allHeaderMsg.push(`{openBold}RG{closeBold}: ${askBusinessRG}`);\r\n  }\r\n\r\n  const mountedHeaderMsg = allHeaderMsg.join(\"{lineBreak}\");\r\n  return mountedHeaderMsg;\r\n}\r\n\r\nfunction formatCPF(inputCPF) {\r\n  const allCpfParts = {\r\n    first: inputCPF.slice(0, 3),\r\n    second: inputCPF.slice(3, 6),\r\n    third: inputCPF.slice(6, 9),\r\n    fourth: inputCPF.slice(9, 11),\r\n  };\r\n  const formattedCpfData = `${allCpfParts.first}.${allCpfParts.second}.${allCpfParts.third}-${allCpfParts.fourth}`;\r\n  return formattedCpfData\r\n}\r\n\r\nfunction formatCNPJ(inputCNPJ) {\r\n  const allCnpjParts = {\r\n    first: inputCNPJ.slice(0, 2),\r\n    second: inputCNPJ.slice(2, 5),\r\n    third: inputCNPJ.slice(5, 8),\r\n    fourth: inputCNPJ.slice(8, 12),\r\n    fifth: inputCNPJ.slice(12, 14),\r\n  };\r\n  const formattedCnpjData = `${allCnpjParts.first}.${allCnpjParts.second}.${allCnpjParts.third}/${allCnpjParts.fourth}-${allCnpjParts.fifth}`;\r\n  return formattedCnpjData;\r\n}\r\n\r\nfunction formatPhone(inputPhone) {\r\n  const thirdNumberIsNine = inputPhone.slice(2, 3) == \"9\";\r\n\r\n  const allPhoneParts = {\r\n    first: inputPhone.slice(0, 2),\r\n    second: inputPhone.slice(2, 3),\r\n    third: thirdNumberIsNine ? inputPhone.slice(3, 7) : inputPhone.slice(3, 6),\r\n    fourth: thirdNumberIsNine ? inputPhone.slice(7, 11) : inputPhone.slice(6, 10),\r\n  };\r\n  const formattedPhoneData = `(${allPhoneParts.first}) ${allPhoneParts.second}${allPhoneParts.third} ${allPhoneParts.fourth}`;\r\n  return formattedPhoneData;\r\n}\r\n",
            "inputVariables": ["userContextJs"],
            "outputVariable": "askBusinessCheckoutDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "f1d31dd2-8036-40b8-a214-533c7c0a545a",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - currentMenuDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "{{resource.function_currentMenuData}}",
            "inputVariables": ["askBusinessCheckoutDataJs"],
            "outputVariable": "currentMenuDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": {
        "stateId": "bb93536d-668f-4683-95bd-ea547d6051bd",
        "$invalid": false,
        "typeOfStateId": "state"
      },
      "$tags": [
        {
          "id": "blip-tag-75476f8b-6b19-4dfa-a3dc-93413e2066ed",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        }
      ],
      "id": "8c4f6ab5-6d25-46d9-812c-30d9cc88a792",
      "root": false,
      "$title": "askBusinessCheckout",
      "$position": { "top": "7323px", "left": "868px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false,
      "invalidOutputs": true,
      "isAiGenerated": false
    },
    "8fb3fd0d-f1b3-47b7-bb6c-8427ccb4bd27": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "bd5c8d35-55a4-4c36-9019-aa54bd34b217",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [],
      "$enteringCustomActions": [
        {
          "$id": "4ca20277-aee4-455d-a578-83c18a74ff94",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - askBusinessCorrectionDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(userContext) {\r\n  try {\r\n    const allMenuOptionsInSection = mountMenuOptions(userContext);\r\n\r\n    const dataMenu = {\r\n      headerMsg: \"Qual dado você gostaria de corrigir?\",\r\n      menuType: \"menuList\",\r\n      descriptionButtonName: \"\",\r\n      allMenuOptions: [\r\n        {\r\n          sectionTitle: \"\",\r\n          allSectionOptions: allMenuOptionsInSection,\r\n        },\r\n      ],\r\n    };\r\n\r\n    return dataMenu;\r\n  } catch (e) {\r\n    return { itBroked: true, brokenMsg: e.message };\r\n  }\r\n}\r\n\r\n\r\nfunction mountMenuOptions(userContext) {\r\n  const { askBusinessCNPJ, askBusinessPhone, askBusinessCPF, askBusinessEmail, askBusinessRG, askBusinessOwnerName } = JSON.parse(userContext);\r\n\r\n  const allMenuOption = [];\r\n\r\n  if (askBusinessCNPJ) {\r\n    allMenuOption.push({\r\n      title: \"CNPJ\",\r\n      description: \"Da empresa\",\r\n      identifier: \"changeCNPJ\",\r\n      active: true,\r\n      extras: {\r\n        ignoreUserContextRegister: true,\r\n        stepForTurnTrue: [\"askBusinessCNPJ\", \"askBusinessCheckout\"],\r\n        stepForTurnFalse: [\"askBusinessCorrection\"],\r\n      },\r\n    });\r\n  }\r\n\r\n  if (askBusinessPhone) {\r\n    allMenuOption.push({\r\n      title: \"Telefone\",\r\n      description: \"Da empresa\",\r\n      identifier: \"changePhone\",\r\n      active: true,\r\n      extras: {\r\n        ignoreUserContextRegister: true,\r\n        stepForTurnTrue: [\"askBusinessPhone\", \"askBusinessCheckout\"],\r\n        stepForTurnFalse: [\"askBusinessCorrection\"],\r\n      },\r\n    });\r\n  }\r\n\r\n  if (askBusinessEmail) {\r\n    allMenuOption.push({\r\n      title: \"Email\",\r\n      description: \"Da empresa\",\r\n      identifier: \"changeEmail\",\r\n      active: true,\r\n      extras: {\r\n        ignoreUserContextRegister: true,\r\n        stepForTurnTrue: [\"askBusinessEmail\", \"askBusinessCheckout\"],\r\n        stepForTurnFalse: [\"askBusinessCorrection\"],\r\n      },\r\n    });\r\n  }\r\n\r\n  if (askBusinessOwnerName) {\r\n    allMenuOption.push({\r\n      title: \"Nome\",\r\n      description: \"Do responsável legal\",\r\n      identifier: \"changeName\",\r\n      active: true,\r\n      extras: {\r\n        ignoreUserContextRegister: true,\r\n        stepForTurnTrue: [\"askBusinessOwnerName\", \"askBusinessCheckout\"],\r\n        stepForTurnFalse: [\"askBusinessCorrection\"],\r\n      },\r\n    });\r\n  }\r\n  \r\n  if (askBusinessCPF) {\r\n    allMenuOption.push({\r\n      title: \"CPF\",\r\n      description: \"Do responsável legal\",\r\n      identifier: \"changeCPF\",\r\n      active: true,\r\n      extras: {\r\n        ignoreUserContextRegister: true,\r\n        stepForTurnTrue: [\"askBusinessCPF\", \"askBusinessCheckout\"],\r\n        stepForTurnFalse: [\"askBusinessCorrection\"],\r\n      },\r\n    });\r\n  }\r\n  \r\n  if (askBusinessRG) {\r\n    allMenuOption.push({\r\n      title: \"RG\",\r\n      description: \"Do responsável legal\",\r\n      identifier: \"changeRG\",\r\n      active: true,\r\n      extras: {\r\n        ignoreUserContextRegister: true,\r\n        stepForTurnTrue: [\"askBusinessRG\", \"askBusinessCheckout\"],\r\n        stepForTurnFalse: [\"askBusinessCorrection\"],\r\n      },\r\n    });\r\n  }\r\n\r\n\r\n  return allMenuOption;\r\n}\r\n",
            "inputVariables": ["userContextJs"],
            "outputVariable": "askBusinessCorrectionDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "45208ae0-b897-47cd-9cfa-ea01f9a74d9a",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - currentMenuDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "{{resource.function_currentMenuData}}",
            "inputVariables": ["askBusinessCorrectionDataJs"],
            "outputVariable": "currentMenuDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": {
        "stateId": "bb93536d-668f-4683-95bd-ea547d6051bd",
        "$invalid": false,
        "typeOfStateId": "state"
      },
      "$tags": [
        {
          "id": "blip-tag-fbc25acd-0fa8-4f77-8bd4-886cb7f330ff",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        }
      ],
      "id": "8fb3fd0d-f1b3-47b7-bb6c-8427ccb4bd27",
      "root": false,
      "$title": "askBusinessCorrection",
      "$position": { "top": "7323px", "left": "1082px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false,
      "invalidOutputs": true,
      "isAiGenerated": false
    },
    "1d90eaee-708b-43bb-9824-c54ac7c21510": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "bd5c8d35-55a4-4c36-9019-aa54bd34b217",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [],
      "$enteringCustomActions": [
        {
          "$id": "4ca20277-aee4-455d-a578-83c18a74ff94",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - askAddressCheckoutDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(userContext, allFlowStepsJs) {\r\n  try {\r\n    const menuHeaderMsg = mountMsgForHeader(userContext, allFlowStepsJs);\r\n\r\n    const dataMenu = {\r\n      headerMsg: menuHeaderMsg,\r\n      menuType: \"menu\",\r\n      descriptionButtonName: \"\",\r\n      allMenuOptions: [\r\n        {\r\n          sectionTitle: \"\",\r\n          allSectionOptions: [\r\n            {\r\n              title: \"Confirmar\",\r\n              description: \"\",\r\n              identifier: \"confirm\",\r\n              active: true,\r\n              extras: { ignoreUserContextRegister: true },\r\n            },\r\n            {\r\n              title: \"Não confirmar\",\r\n              description: \"\",\r\n              identifier: \"decline\",\r\n              active: true,\r\n              extras: {\r\n                ignoreUserContextRegister: true,\r\n                stepForTurnTrue: [\"askAddressCorrection\", \"askAddressCheckout\", \"apiPutAddressData\"],\r\n              },\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n\r\n    return dataMenu;\r\n  } catch (e) {\r\n    return { itBroked: true, brokenMsg: e.message };\r\n  }\r\n}\r\n\r\nfunction mountMsgForHeader(userContext, allFlowStepsJs) {\r\n  const {\r\n    askZipCode,\r\n    askNumber,\r\n    askComplement,\r\n    askRoadName,\r\n    askNeighborhood,\r\n    askStreetBlock,\r\n    askStreetLot,\r\n    city,\r\n    state,\r\n  } = JSON.parse(userContext);\r\n\r\n  const allFlowStepsInArray = Object.keys(JSON.parse(allFlowStepsJs));\r\n\r\n  const allHeaderMsg = [];\r\n\r\n  allHeaderMsg.push(`{openBold}Resumo dos dados de endereço{closeBold}:`);\r\n  allHeaderMsg.push(``);\r\n\r\n  if (allFlowStepsInArray.includes(\"askZipCode\") && askZipCode) {\r\n    allHeaderMsg.push(`{openBold}CEP{closeBold}: ${askZipCode}`);\r\n  }\r\n\r\n  if (city || state) {\r\n    allHeaderMsg.push(checkAndMountCityAndStateMsg(city, state));\r\n  }\r\n\r\n  if (allFlowStepsInArray.includes(\"askNumber\") && askNumber) {\r\n    allHeaderMsg.push(`{openBold}Número do endereço{closeBold}: ${askNumber}`);\r\n  }\r\n\r\n  if (allFlowStepsInArray.includes(\"askRoadName\") && askRoadName) {\r\n    allHeaderMsg.push(`{openBold}Nome da rua{closeBold}: ${askRoadName}`);\r\n  }\r\n\r\n  if (allFlowStepsInArray.includes(\"askNeighborhood\") && askNeighborhood) {\r\n    allHeaderMsg.push(`{openBold}Bairro{closeBold}: ${askNeighborhood}`);\r\n  }\r\n\r\n  if (allFlowStepsInArray.includes(\"askStreetBlock\") && askStreetBlock) {\r\n    allHeaderMsg.push(`{openBold}Bloco{closeBold}: ${askStreetBlock}`);\r\n  }\r\n\r\n  if (allFlowStepsInArray.includes(\"askStreetLot\") && askStreetLot) {\r\n    allHeaderMsg.push(`{openBold}Lote{closeBold}: ${askStreetLot}`);\r\n  }\r\n\r\n  if (allFlowStepsInArray.includes(\"askComplement\") && askComplement) {\r\n    allHeaderMsg.push(`{openBold}Complemento{closeBold}: ${askComplement}`);\r\n  }\r\n\r\n  const mountedHeaderMsg = allHeaderMsg.join(\"{lineBreak}\");\r\n  return mountedHeaderMsg;\r\n}\r\n\r\nfunction checkAndMountCityAndStateMsg(city, state) {\r\n  const defaultMsg = [];\r\n\r\nconst checkNeedStateMsgData = state ? \"/Estado\" : \"\"\r\n\r\n  if (city) {\r\n    defaultMsg.push(`{openBold}Cidade${checkNeedStateMsgData}{closeBold}: ${city}`);\r\n  }\r\n  if (state) {\r\n    defaultMsg.push(state);\r\n  }\r\n\r\n  const completelyMsg = defaultMsg.join(\"/\");\r\n  return completelyMsg;\r\n}\r\n",
            "inputVariables": ["userContextJs", "allFlowStepsJs"],
            "outputVariable": "askAddressCheckoutDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "64ce1b3d-2a8d-4763-8e07-abdc9f928a28",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - currentMenuDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "{{resource.function_currentMenuData}}",
            "inputVariables": ["askAddressCheckoutDataJs"],
            "outputVariable": "currentMenuDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": {
        "stateId": "bb93536d-668f-4683-95bd-ea547d6051bd",
        "$invalid": false,
        "typeOfStateId": "state"
      },
      "$tags": [
        {
          "id": "blip-tag-c392cac1-483e-461b-89be-5f3f2a3a2533",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        }
      ],
      "id": "1d90eaee-708b-43bb-9824-c54ac7c21510",
      "root": false,
      "$title": "askAddressCheckout",
      "$position": { "top": "1099.67px", "left": "6147px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false,
      "invalidOutputs": true,
      "isAiGenerated": false
    },
    "3cffb76e-dba6-43b1-b5ae-88306bf03100": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "a7cef784-6e49-4f27-a0f0-7788fada9ae4",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false,
          "$$hashKey": "object:18348"
        }
      ],
      "$conditionOutputs": [],
      "$enteringCustomActions": [
        {
          "$id": "a6def49a-c80a-4991-a171-944cfeeb6788",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - menuPlansBuildJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(menuAllPlansBuildJs) {\n  try {\n    menuAllPlansBuildJs = JSON.parse(menuAllPlansBuildJs);\n\n    const onlySimplifiedMenu = Object.values(menuAllPlansBuildJs).map((everyMenuData) => {\n      const { simplifiedMenu } = everyMenuData;\n\n      return simplifiedMenu;\n    });\n\n    while (onlySimplifiedMenu.length < 4) {\n      onlySimplifiedMenu.push({ type: \"text/plain\", content: \"\" });\n    }\n\n    const turnMenuInObject = onlySimplifiedMenu.reduce((acc, everyMenuData, index) => {\n      acc[index + 1] = everyMenuData;\n      return acc;\n    }, {});\n\n    return turnMenuInObject;\n  } catch (e) {\n    return { itBroked: true, brokenMsg: e.message };\n  }\n}\n",
            "inputVariables": ["menuAllPlansBuildJs"],
            "outputVariable": "menuPlansBuildJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": {
        "stateId": "73f8c884-2542-4153-b131-0fb343250300",
        "$invalid": false,
        "typeOfStateId": "state"
      },
      "isAiGenerated": false,
      "$tags": [
        {
          "id": "blip-tag-4757d672-89b7-4ff6-8791-b4f5ce64961a",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        }
      ],
      "id": "3cffb76e-dba6-43b1-b5ae-88306bf03100",
      "root": false,
      "$title": "askPlans",
      "$position": { "top": "1804px", "left": "5451px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false,
      "addonsSettings": { "commentsIdList": ["8d535958-ce9c-4ef9-b47f-647405d9eba4"] }
    },
    "73f8c884-2542-4153-b131-0fb343250300": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "815638fa-e590-4465-a749-a12147f0a793",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [
        {
          "stateId": "{{defaultBlocksIdsJs@broked}}",
          "typeOfStateId": "variable",
          "$id": "81a009db-4e7b-4ddf-b0ab-90001f162d29",
          "conditions": [
            {
              "source": "context",
              "comparison": "equals",
              "values": ["true"],
              "variable": "menuPlansBuildJs@itBroked"
            }
          ],
          "$invalid": false
        },
        {
          "stateId": "387e3e3a-473b-43a0-bddf-520329b9f5ca",
          "typeOfStateId": "state",
          "$connId": "con_168",
          "$id": "d494e140-bc0b-4a15-bb62-fe0aa0bd18c6",
          "conditions": [
            {
              "values": ["false"],
              "source": "context",
              "comparison": "equals",
              "variable": "userContextJs@forceSetPlanIds"
            }
          ],
          "$invalid": false
        },
        {
          "stateId": "2dc02083-0960-40a3-8bf2-f9c89aca61de",
          "typeOfStateId": "state",
          "$connId": "con_173",
          "$id": "c24bf836-be2d-4d37-ac47-0fe40972a743",
          "conditions": [{ "source": "input", "comparison": "exists", "values": [] }],
          "$invalid": false
        }
      ],
      "$enteringCustomActions": [],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": {
        "stateId": "387e3e3a-473b-43a0-bddf-520329b9f5ca",
        "$invalid": false,
        "typeOfStateId": "state"
      },
      "isAiGenerated": false,
      "$tags": [],
      "id": "73f8c884-2542-4153-b131-0fb343250300",
      "root": false,
      "$title": "checkMenuPlansIntegrityAndCheckForceSet",
      "$position": { "top": "1628px", "left": "6900px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false
    },
    "387e3e3a-473b-43a0-bddf-520329b9f5ca": {
      "$contentActions": [
        {
          "action": {
            "$id": "1431b6c4-36bc-4e03-9e39-f1b8c042e001",
            "$typeOfContent": "chat-state",
            "type": "SendMessage",
            "settings": {
              "id": "df3aba12-830d-4988-8c54-1d803173e1b9",
              "type": "application/vnd.lime.chatstate+json",
              "content": { "state": "composing", "interval": 1000 }
            },
            "$cardContent": {
              "document": {
                "id": "df3aba12-830d-4988-8c54-1d803173e1b9",
                "type": "application/vnd.lime.chatstate+json",
                "content": { "state": "composing", "interval": 1000 }
              },
              "editable": true,
              "deletable": true,
              "position": "left"
            }
          },
          "$invalid": false
        },
        {
          "action": {
            "$id": "fe52c16f-041d-4121-9df6-c0611ed787cf",
            "$typeOfContent": "raw-content",
            "type": "SendRawMessage",
            "settings": {
              "metadata": {},
              "type": "{{menuPlansBuildJs@1.type}}",
              "rawContent": "{{menuPlansBuildJs@1.content}}"
            }
          },
          "$invalid": false
        },
        {
          "action": {
            "$id": "e0772c99-5d47-40ff-909b-0f1cf4a15e99",
            "$typeOfContent": "chat-state",
            "type": "SendMessage",
            "settings": {
              "id": "689dbfbe-c041-4506-9c28-68c156fbc821",
              "type": "application/vnd.lime.chatstate+json",
              "content": { "state": "composing", "interval": "1000" },
              "metadata": {}
            },
            "$cardContent": {
              "document": {
                "id": "689dbfbe-c041-4506-9c28-68c156fbc821",
                "type": "application/vnd.lime.chatstate+json",
                "content": { "state": "composing", "interval": "1000" }
              },
              "editable": true,
              "deletable": true,
              "position": "left"
            }
          },
          "$invalid": false
        },
        {
          "action": {
            "$id": "a4fcf444-8799-4a98-bc87-0f7a375ffc39",
            "$typeOfContent": "raw-content",
            "type": "SendRawMessage",
            "settings": {
              "metadata": {},
              "type": "{{menuPlansBuildJs@2.type}}",
              "rawContent": "{{menuPlansBuildJs@2.content}}"
            }
          },
          "$invalid": false
        },
        {
          "action": {
            "$id": "4c5a59c5-15e0-49af-ba7a-f7ba6be2824e",
            "$typeOfContent": "chat-state",
            "type": "SendMessage",
            "settings": {
              "id": "dcd165d2-ba6c-4059-8f0a-e73db1c47da5",
              "type": "application/vnd.lime.chatstate+json",
              "content": { "state": "composing", "interval": "1000" },
              "metadata": {}
            },
            "$cardContent": {
              "document": {
                "id": "dcd165d2-ba6c-4059-8f0a-e73db1c47da5",
                "type": "application/vnd.lime.chatstate+json",
                "content": { "state": "composing", "interval": "1000" }
              },
              "editable": true,
              "deletable": true,
              "position": "left"
            }
          },
          "$invalid": false
        },
        {
          "action": {
            "$id": "7c3ad9f2-487c-47ea-a695-312c83277d3e",
            "$typeOfContent": "raw-content",
            "type": "SendRawMessage",
            "settings": {
              "metadata": {},
              "type": "{{menuPlansBuildJs@3.type}}",
              "rawContent": "{{menuPlansBuildJs@3.content}}"
            }
          },
          "$invalid": false
        },
        {
          "action": {
            "$id": "5a0e8d3a-d22a-4794-a4bc-45f9dd64d156",
            "$typeOfContent": "chat-state",
            "type": "SendMessage",
            "settings": {
              "id": "7f2a4fad-45f0-415e-a0fd-3a02cd2b39a2",
              "type": "application/vnd.lime.chatstate+json",
              "content": { "state": "composing", "interval": "500" },
              "metadata": {}
            },
            "$cardContent": {
              "document": {
                "id": "7f2a4fad-45f0-415e-a0fd-3a02cd2b39a2",
                "type": "application/vnd.lime.chatstate+json",
                "content": { "state": "composing", "interval": "500" }
              },
              "editable": true,
              "deletable": true,
              "position": "left"
            }
          },
          "$invalid": false
        },
        {
          "action": {
            "$id": "6d405803-cccd-4ccc-a4af-4d2566f9fcde",
            "$typeOfContent": "raw-content",
            "type": "SendRawMessage",
            "settings": {
              "metadata": {},
              "type": "{{menuPlansBuildJs@4.type}}",
              "rawContent": "{{menuPlansBuildJs@4.content}}"
            }
          },
          "$invalid": false
        },
        {
          "input": {
            "bypass": false,
            "$cardContent": {
              "document": {
                "id": "2781cf7f-8854-4492-833b-7edcc7756e7e",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false,
            "expiration": "0:5"
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [
        {
          "stateId": "{{defaultBlocksIdsJs@checkInactivityConditions}}",
          "typeOfStateId": "variable",
          "$id": "46a21b26-59c4-4b45-b462-742fec020342",
          "conditions": [{ "source": "input", "comparison": "notExists", "values": [] }],
          "$invalid": false
        },
        {
          "stateId": "2dc02083-0960-40a3-8bf2-f9c89aca61de",
          "typeOfStateId": "state",
          "$connId": "con_178",
          "$id": "185f338c-ecc7-49a6-82bd-63d1bc7d90e9",
          "conditions": [{ "source": "input", "comparison": "exists", "values": [] }],
          "$invalid": false
        }
      ],
      "$enteringCustomActions": [],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": { "stateId": "fallback", "$invalid": false },
      "isAiGenerated": false,
      "$tags": [
        {
          "id": "blip-tag-15ee27b5-f62a-4b14-b8e2-5d4abc64bdac",
          "label": "SendMessage",
          "background": "#EE82EE",
          "canChangeBackground": false
        },
        {
          "id": "blip-tag-62669766-a0ef-452b-b7a4-9759424642a0",
          "label": "UserInput",
          "background": "#000000",
          "canChangeBackground": false
        }
      ],
      "id": "387e3e3a-473b-43a0-bddf-520329b9f5ca",
      "root": false,
      "$title": "askAllPlans",
      "$position": { "top": "1489px", "left": "7110px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false
    },
    "2dc02083-0960-40a3-8bf2-f9c89aca61de": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "c9ba65e8-caba-4fc4-8b49-c68d3094cb32",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false,
          "$$hashKey": "object:20949"
        }
      ],
      "$conditionOutputs": [
        {
          "stateId": "{{defaultBlocksIdsJs@checkInputAndInvalid}}",
          "typeOfStateId": "variable",
          "$id": "8522df7a-777c-49cb-a57f-87dc3c588079",
          "conditions": [
            {
              "source": "context",
              "comparison": "equals",
              "values": ["true"],
              "variable": "planProcessedJs@itBroked",
              "$$hashKey": "object:20968"
            }
          ],
          "$invalid": false,
          "$$hashKey": "object:20951"
        },
        {
          "stateId": "cad4fb02-93d0-479a-b30b-9a7cf28790ae",
          "typeOfStateId": "state",
          "$connId": "con_183",
          "$id": "08b9492e-7cf0-4242-ae1e-2e1f01e1bdd3",
          "conditions": [
            { "source": "input", "comparison": "exists", "values": [], "$$hashKey": "object:20984" }
          ],
          "$invalid": false,
          "$$hashKey": "object:20952"
        }
      ],
      "$enteringCustomActions": [
        {
          "$id": "f79b1180-79e7-4880-938d-c0ed554d2c70",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - planProcessedJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(allPlansDataJs, inputMessage, userContext, menusRegexData) {\n  try {\n    const forceSetPlan = checkNeedSetForcedPlanId(userContext);\n\n    const checkedMenuInput = forceSetPlan ? forceSetPlan : checkAndSetUserInput(inputMessage);\n\n    const PLANS_PATTERN_REGEX = JSON.parse(menusRegexData).planspattern;\n\n    const onlyPlansValues = Object.values(JSON.parse(allPlansDataJs));\n\n    const OPTIONS_TO_VERIFY = mountRegexOptionForMenu(onlyPlansValues, PLANS_PATTERN_REGEX);\n\n    const ALL_REGEX_OPTIONS = Object.values(OPTIONS_TO_VERIFY);\n\n    const PROCESSED_USER_INPUT = processUserInput(checkedMenuInput, ALL_REGEX_OPTIONS);\n\n    const selectedPlan = onlyPlansValues[PROCESSED_USER_INPUT];\n\n    if (selectedPlan) {\n      const {\n        id,\n        name,\n        fidelity,\n        type,\n        personType,\n        optionals,\n        prices,\n        optionalInText,\n        principalOptionalData,\n        extras,\n        customAfterPriceText,\n        lackText,\n        specificLack,\n        footerMsg,\n      } = selectedPlan;\n\n      const userInputChecked = checkedMenuInput.replace(/\\d/g, \"\");\n\n      const equalityWithInput = userInputChecked == \"seeMore\".toLowerCase();\n\n      const dataToReturn = {\n        planExtras: { askWantPlanAfterSeeMore: equalityWithInput },\n        id,\n        name,\n        fidelity,\n        type,\n        personType,\n        // optionals,\n        prices,\n        // optionalInText,\n        // principalOptionalData,\n        // extras,\n        // customAfterPriceText,\n        // lackText,\n        // specificLack,\n        // footerMsg,\n      };\n\n      return dataToReturn;\n    }\n  } catch (e) {\n    return { itBroked: true, brokenMsg: e.message };\n  }\n}\n\nfunction checkNeedSetForcedPlanId(userContext) {\n  const { forceSetPlanIds } = JSON.parse(userContext);\n\n  if (forceSetPlanIds) {\n    const joinnedForcedSetPlan = forceSetPlanIds.join(\",\");\n    return joinnedForcedSetPlan;\n  }\n  return false;\n}\n\nfunction checkAndSetUserInput(inputForSetPlan) {\n  inputForSetPlan = JSON.parse(inputForSetPlan);\n\n  const { content, metadata } = inputForSetPlan || {};\n\n  let checkedInput = textNormalizer(content);\n\n  if (metadata) {\n    const specificButtonId = metadata[\"#wa.interactive.button.id\"];\n    if (specificButtonId) {\n      checkedInput = textNormalizer(specificButtonId);\n    }\n  }\n\n  checkedInput = cleanUserInput(checkedInput);\n\n  if (checkedInput == \"\" || checkedInput == \"null\" || checkedInput == null) {\n    throw { message: \"Has not input\" };\n  }\n  return checkedInput;\n}\n\nfunction mountRegexOptionForMenu(allPlansDataJs, plansPatternRegex) {\n  const filterMenuOption = allPlansDataJs.reduce((acc, everyMenuData, index) => {\n    const { id, name, prices } = everyMenuData;\n\n    const priceFor1Depentend = prices[1].forShow.biggest.replace(/\\D/g, \"\");\n\n    const formattedPriceForIdentifier = `${priceFor1Depentend.slice(0, 2)},${priceFor1Depentend.slice(2)}`;\n\n    const regexOption = [plansPatternRegex, `^(buy|seeMore)${id}`, `^${textNormalizer(name)}$`];\n\n    const regexMountedOption = regexOption\n      .join(\"|\")\n      .replace(\"{numericMenuOption}\", index + 1)\n      .replace(\"{planPrice}\", formattedPriceForIdentifier);\n\n    acc[index] = regexMountedOption;\n\n    return acc;\n  }, {});\n\n  return filterMenuOption;\n}\n\nfunction processUserInput(userInput, OPTIONS_TO_VERIFY) {\n  const menuOptionSelectedByRegex = OPTIONS_TO_VERIFY.find((everyMenuRegexOption) => {\n    const regexCompound = new RegExp(everyMenuRegexOption.toLowerCase(), \"gi\");\n\n    const inputTestedInRegex = regexCompound.test(userInput);\n    return inputTestedInRegex;\n  });\n\n  if (menuOptionSelectedByRegex) {\n    const indexOfRegex = OPTIONS_TO_VERIFY.indexOf(menuOptionSelectedByRegex);\n\n    return indexOfRegex;\n  }\n\n  throw { message: \"Did not identify user input with regex\" };\n}\n\nfunction cleanUserInput(userInput) {\n  if (userInput) {\n    const cleannedUserInput = userInput.replace(/(\\n|\\t)/g, \" - \").replace(/\\s/g, \"\");\n    return cleannedUserInput;\n  }\n  return userInput;\n}\n\nfunction textNormalizer(dataToNormalize) {\n  if (dataToNormalize) {\n    return dataToNormalize\n      .normalize(\"NFD\")\n      .replace(/([^ªa-záàâãéèêíïóôõöúçñ0-9★]+)/gi, \"\")\n      .toLowerCase();\n  }\n  return dataToNormalize;\n}",
            "inputVariables": ["mountPlansDataJs", "input.message", "userContextJs", "menusRegexDataJs"],
            "outputVariable": "planProcessedJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "b6d8c380-7f4a-438f-9811-fc132ee3c473",
          "$typeOfContent": "",
          "type": "SetVariable",
          "$title": "Set variable - plansInputMessage",
          "$invalid": false,
          "settings": { "variable": "plansInputMessage", "value": "{{input.message}}" },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [
        {
          "$id": "f810fb7f-1bdb-46d7-be52-ae4a2f81275e",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - userContextJs - update",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(userContext) {\n  try {\n    userContext = JSON.parse(userContext)\n\n    userContext.forceSetPlanIds = false\n\n    return userContext\n\n  } catch (e) {\n    return userContext\n  }\n}\n\n",
            "inputVariables": ["userContextJs"],
            "outputVariable": "userContextJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$inputSuggestions": [],
      "$defaultOutput": { "stateId": "fallback", "$invalid": false },
      "isAiGenerated": false,
      "$tags": [
        {
          "id": "blip-tag-0368a141-ff0e-4418-a15d-0c70071de8ba",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        }
      ],
      "id": "2dc02083-0960-40a3-8bf2-f9c89aca61de",
      "root": false,
      "$title": "processPlansUserInputAndUnsetForcePlan",
      "$position": { "top": "1617px", "left": "7320px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false
    },
    "cad4fb02-93d0-479a-b30b-9a7cf28790ae": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "c9ba65e8-caba-4fc4-8b49-c68d3094cb32",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false,
          "$$hashKey": "object:20421"
        }
      ],
      "$conditionOutputs": [
        {
          "stateId": "cb5823c2-449a-4963-887f-9a04d9673298",
          "typeOfStateId": "state",
          "$connId": "con_188",
          "$id": "3f193cf5-7269-4bac-af9f-3784dc0dd961",
          "conditions": [
            { "source": "input", "comparison": "exists", "values": [], "$$hashKey": "object:20436" }
          ],
          "$invalid": false,
          "$$hashKey": "object:20423"
        }
      ],
      "$enteringCustomActions": [
        {
          "$id": "e5af5e04-614b-4689-a7ff-1d59bf3904f1",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - userContextJs - update",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(userContext, planProcessedJs) {\n  try {\n    userContext = JSON.parse(userContext);\n\n    planProcessedJs = JSON.parse(planProcessedJs);\n\n    const { planExtras, id } = planProcessedJs;\n\n    if (planExtras && planExtras.askWantPlanAfterSeeMore) {\n      userContext.idForSeeMorePlan = id;\n    } else {\n      userContext.askPlans = planProcessedJs;\n    }\n\n    return userContext;\n  } catch (e) {\n    return userContext;\n  }\n}",
            "inputVariables": ["userContextJs", "planProcessedJs"],
            "outputVariable": "userContextJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": { "stateId": "fallback", "$invalid": false },
      "isAiGenerated": false,
      "$tags": [
        {
          "id": "blip-tag-dd607fec-eb32-47b6-ad97-8f6578cbaeb1",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        }
      ],
      "id": "cad4fb02-93d0-479a-b30b-9a7cf28790ae",
      "root": false,
      "$title": "updateUserContext",
      "$position": { "top": "1466px", "left": "7668px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false
    },
    "bf55166f-db6c-4c40-b27f-fb6114c51963": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "d445ec62-ef3d-4f28-92bd-9f3f9b032ab4",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [
        {
          "stateId": "9172458a-be92-474f-8492-daad16009dd8",
          "typeOfStateId": "state",
          "$connId": "con_193",
          "$id": "fd7be2ec-0542-43f4-b14a-d72a391a147f",
          "conditions": [
            {
              "source": "context",
              "comparison": "equals",
              "values": ["goBack"],
              "variable": "inputInvalidCheckedJs"
            }
          ],
          "$invalid": false
        },
        {
          "stateId": "35b79132-b249-4aa5-b393-dc15058440d7",
          "typeOfStateId": "state",
          "$connId": "con_198",
          "$id": "06e31ae8-0c4e-49a0-8c1b-ffe36b18e50b",
          "conditions": [
            {
              "source": "context",
              "comparison": "equals",
              "values": ["finalize"],
              "variable": "inputInvalidCheckedJs"
            }
          ],
          "$invalid": false
        },
        {
          "stateId": "27a09aa8-a92c-4c7e-967c-5784953a8a9d",
          "typeOfStateId": "state",
          "$connId": "con_203",
          "$id": "82790e5c-9fda-415d-b53c-d7aa2e43b96c",
          "conditions": [{ "source": "input", "comparison": "exists", "values": [] }],
          "$invalid": false
        }
      ],
      "$enteringCustomActions": [
        {
          "$id": "1e321ee5-4811-4c9d-8ae9-4d8d473769bd",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - inputInvalidCheckedJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(userInput, menusRegexDataJs) {\n  try {\n    inputContent = textNormalizer(userInput);\n\n    if (inputContent == \"\") {\n      throw { message: \"Has not input\" };\n    }\n\n    menusRegexDataJs = JSON.parse(menusRegexDataJs);\n\n    const allPossibleInput = {\n      goBack: [menusRegexDataJs.validgoback],\n      finalize: [menusRegexDataJs.validfinalize],\n    };\n\n    const INPUTS_FOR_RECOGNIZE = Object.keys(allPossibleInput);\n\n    const OPTIONS_TO_VERIFY = moutEveryRegexOption(allPossibleInput, INPUTS_FOR_RECOGNIZE);\n\n    const ALL_REGEX_OPTIONS = Object.values(OPTIONS_TO_VERIFY);\n    const ALL_MENUS_OPTIONS = Object.keys(OPTIONS_TO_VERIFY);\n\n    const PROCESSED_USER_INPUT = processUserInput(inputContent, ALL_REGEX_OPTIONS);\n\n    const menuOptionSelected = ALL_MENUS_OPTIONS[PROCESSED_USER_INPUT];\n\n    if (menuOptionSelected) {\n      return menuOptionSelected;\n    }\n\n    throw { message: \"Did not identify user input with regex\" };\n  } catch (e) {\n    return { itBroked: true, brokenMsg: e.message };\n  }\n}\n\nfunction moutEveryRegexOption(allRegexIdentifiers, validOptions) {\n  const allRegexOptionsMounted = validOptions.reduce((acc, everyInputOption) => {\n    acc[everyInputOption] = `^${allRegexIdentifiers[everyInputOption].join(\"|\")}$`;\n    return acc;\n  }, {});\n  return allRegexOptionsMounted;\n}\n\nfunction textNormalizer(dataToNormalize) {\n  return dataToNormalize\n    .normalize(\"NFD\")\n    .replace(/([^ªa-záàâãéèêíïóôõöúçñ0-9★]+)/gi, \"\")\n    .toLowerCase();\n}\n\nfunction processUserInput(userInput, OPTIONS_TO_VERIFY) {\n  const menuOptionSelectedByRegex = OPTIONS_TO_VERIFY.find((everyMenuRegexOption) => {\n    const regexCompound = new RegExp(everyMenuRegexOption.toLowerCase(), \"gi\");\n\n    const inputTestedInRegex = regexCompound.test(userInput);\n    return inputTestedInRegex;\n  });\n\n  if (menuOptionSelectedByRegex) {\n    const indexOfRegex = OPTIONS_TO_VERIFY.indexOf(menuOptionSelectedByRegex);\n\n    return indexOfRegex;\n  }\n\n  throw { message: \"Did not identify user input with regex\" };\n}",
            "inputVariables": ["input.content", "menusRegexDataJs"],
            "outputVariable": "inputInvalidCheckedJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "a457a0cc-9603-4c4d-a7ba-d2c20d91c459",
          "$typeOfContent": "",
          "type": "SetVariable",
          "$title": "Set variable - invalidStatePreviousId",
          "$invalid": false,
          "settings": { "variable": "invalidStatePreviousId", "value": "{{state.previous.id}}" },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": { "stateId": "fallback", "$invalid": false },
      "isAiGenerated": false,
      "$tags": [
        {
          "id": "blip-tag-491058fd-96de-4734-8b6f-e4f5b551765c",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        },
        {
          "id": "blip-tag-762ce6a3-71be-46de-b538-264ed6dbe074",
          "label": "SetVariable",
          "background": "#FF4A1E",
          "canChangeBackground": false
        }
      ],
      "id": "bf55166f-db6c-4c40-b27f-fb6114c51963",
      "root": false,
      "$title": "checkUserInputByFakeRegex",
      "$position": { "top": "3278px", "left": "810px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false
    },
    "e1be2f88-d02c-4c40-98d8-954eb4a98858": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "bd5c8d35-55a4-4c36-9019-aa54bd34b217",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [],
      "$enteringCustomActions": [
        {
          "$id": "4ca20277-aee4-455d-a578-83c18a74ff94",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - askPlansAndPortabilityCorrectionDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(userContext) {\r\n  try {\r\n    const allMenuOptionsInSection = mountMenuOptions(userContext);\r\n\r\n    const dataMenu = {\r\n      headerMsg: \"Qual dado você gostaria de corrigir?\",\r\n      menuType: \"menu\",\r\n      descriptionButtonName: \"\",\r\n      allMenuOptions: [\r\n        {\r\n          sectionTitle: \"\",\r\n          allSectionOptions: allMenuOptionsInSection,\r\n        },\r\n      ],\r\n    };\r\n\r\n    return dataMenu;\r\n  } catch (e) {\r\n    return { itBroked: true, brokenMsg: e.message };\r\n  }\r\n}\r\n\r\nfunction mountMenuOptions(userContext) {\r\n  const { contractType, askPlans } = JSON.parse(userContext);\r\n\r\n  const contractTypeTranslated =\r\n    contractType.toLowerCase() === \"newddd\"\r\n      ? { title: \"DDD do novo número\", specificData: \"askNewNumberDDD\" }\r\n      : { title: \"Número de telefone\", specificData: \"askPortabilityNumber\" };\r\n\r\n  const allMenuOption = [];\r\n\r\n  if (contractTypeTranslated) {\r\n    allMenuOption.push({\r\n      title: contractTypeTranslated.title,\r\n      description: \"\",\r\n      identifier: contractTypeTranslated.specificData + \"Correction\",\r\n      active: true,\r\n      extras: {\r\n        ignoreUserContextRegister: true,\r\n        stepForTurnTrue: [contractTypeTranslated.specificData, \"askPlansAndPortabilityCheckout\"],\r\n        // stepForTurnFalse: [\"askPlansAndPortabilityCorrection\"],\r\n      },\r\n    });\r\n  }\r\n  if (askPlans) {\r\n    allMenuOption.push({\r\n      title: \"Plano\",\r\n      description: \"\",\r\n      identifier: \"changePlan\",\r\n      active: true,\r\n      extras: {\r\n        ignoreUserContextRegister: true,\r\n        stepForTurnTrue: [\"askPlans\", \"askPlansAndPortabilityCheckout\"],\r\n        // stepForTurnFalse: [\"askPlansAndPortabilityCorrection\"],\r\n      },\r\n    });\r\n  }\r\n\r\n  return allMenuOption;\r\n}",
            "inputVariables": ["userContextJs"],
            "outputVariable": "askPlansAndPortabilityCorrectionDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "6dce579e-29b7-4b84-956f-94fc820a3347",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - currentMenuDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "{{resource.function_currentMenuData}}",
            "inputVariables": ["askPlansAndPortabilityCorrectionDataJs"],
            "outputVariable": "currentMenuDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": {
        "stateId": "bb93536d-668f-4683-95bd-ea547d6051bd",
        "$invalid": false,
        "typeOfStateId": "state"
      },
      "$tags": [
        {
          "id": "blip-tag-82f6a76c-5678-493a-9f08-f342c3666239",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        }
      ],
      "id": "e1be2f88-d02c-4c40-98d8-954eb4a98858",
      "root": false,
      "$title": "askPlansAndPortabilityCorrection",
      "$position": { "top": "7008.33px", "left": "744px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false,
      "invalidOutputs": true,
      "isAiGenerated": false
    },
    "abb90493-6650-4d37-a9f9-792e402dc153": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "bd5c8d35-55a4-4c36-9019-aa54bd34b217",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [],
      "$enteringCustomActions": [
        {
          "$id": "4ca20277-aee4-455d-a578-83c18a74ff94",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - askPlansAndPortabilityCheckoutDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(userContext) {\r\n  try {\r\n    const menuHeaderMsg = mountMsgForHeader(userContext);\r\n\r\n    const dataMenu = {\r\n      headerMsg: menuHeaderMsg,\r\n      footerMsg: \"Confira todas as informações acima com cuidado. ⚠️\",\r\n      menuType: \"menu\",\r\n      descriptionButtonName: \"\",\r\n      allMenuOptions: [\r\n        {\r\n          sectionTitle: \"\",\r\n          allSectionOptions: [\r\n            {\r\n              title: \"Confirmar\",\r\n              description: \"\",\r\n              identifier: \"confirm\",\r\n              active: true,\r\n              extras: { ignoreUserContextRegister: true },\r\n            },\r\n            {\r\n              title: \"Não confirmar\",\r\n              description: \"\",\r\n              identifier: \"decline\",\r\n              active: true,\r\n              extras: { ignoreUserContextRegister: true, stepForTurnTrue: [\"askPlansAndPortabilityCorrection\"] },\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n\r\n    return dataMenu;\r\n  } catch (e) {\r\n    return { itBroked: true, brokenMsg: e.message };\r\n  }\r\n}\r\n\r\nfunction mountMsgForHeader(userContext) {\r\n  const { askPortabilityType, askPortabilityNumber, askNewNumberDDD, askPlans } = JSON.parse(userContext);\r\n\r\n  const allHeaderMsg = [];\r\n\r\n  const askPortabilityTypeTranslated =\r\n    askPortabilityType.toLowerCase() === \"newline\"\r\n      ? { msg: \"DDD do novo número\", specificData: askNewNumberDDD }\r\n      : { msg: \"Portabilidade no número\", specificData: askPortabilityNumber };\r\n\r\n  const { planName, textDownloadSpeed, textUploadSpeed, type, textBiggestPrice } = askPlans.planData;\r\n\r\n  allHeaderMsg.push(`{openBold}Resumo do Pedido{closeBold}`);\r\n\r\n  allHeaderMsg.push(``);\r\n  allHeaderMsg.push(\r\n    `{openBold}${askPortabilityTypeTranslated.msg}{closeBold}: ${askPortabilityTypeTranslated.specificData}`\r\n  );\r\n\r\n  allHeaderMsg.push(``);\r\n  allHeaderMsg.push(`{openBold}Plano:{closeBold} ${planName}`);\r\n  allHeaderMsg.push(`{openBold}Serviço:{closeBold} ${type}`);\r\n  // allHeaderMsg.push(`{openBold}Velocidade de Download:{closeBold} ${textDownloadSpeed}`);\r\n  // allHeaderMsg.push(`{openBold}Velocidade de Upload:{closeBold} ${textUploadSpeed}`);\r\n  allHeaderMsg.push(`{openBold}Preço:{closeBold} ${textBiggestPrice}`);\r\n\r\n  allHeaderMsg.push(``);\r\n  allHeaderMsg.push(`{openBold}O pedido está correto?{closeBold}`);\r\n\r\n  const mountedHeaderMsg = allHeaderMsg.join(\"\\n\");\r\n\r\n  return mountedHeaderMsg;\r\n}",
            "inputVariables": ["userContextJs"],
            "outputVariable": "askPlansAndPortabilityCheckoutDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "ba05d923-c27e-4886-92cb-19322759d8a1",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - currentMenuDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "{{resource.function_currentMenuData}}",
            "inputVariables": ["askPlansAndPortabilityCheckoutDataJs"],
            "outputVariable": "currentMenuDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": {
        "stateId": "bb93536d-668f-4683-95bd-ea547d6051bd",
        "$invalid": false,
        "typeOfStateId": "state"
      },
      "$tags": [
        {
          "id": "blip-tag-28333b78-8a45-47c8-a275-994cff50e360",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        }
      ],
      "id": "abb90493-6650-4d37-a9f9-792e402dc153",
      "root": false,
      "$title": "askPlansAndPortabilityCheckout",
      "$position": { "top": "6867.33px", "left": "611px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false,
      "invalidOutputs": true,
      "isAiGenerated": false
    },
    "9172458a-be92-474f-8492-daad16009dd8": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "c3802109-9dc3-4875-aef5-a40e70aaa011",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false,
          "$$hashKey": "object:14251"
        }
      ],
      "$conditionOutputs": [
        {
          "stateId": "27a09aa8-a92c-4c7e-967c-5784953a8a9d",
          "typeOfStateId": "state",
          "$connId": "con_208",
          "$id": "0e81fd85-ecc6-4737-be39-657faef7cd97",
          "conditions": [
            {
              "source": "context",
              "comparison": "exists",
              "values": [],
              "variable": "allFlowStepsJs@itBroked",
              "$$hashKey": "object:14270"
            }
          ],
          "$invalid": false,
          "$$hashKey": "object:14253"
        },
        {
          "stateId": "118bbd90-72eb-42dd-b51b-3cae6621d997",
          "typeOfStateId": "state",
          "$connId": "con_213",
          "$id": "8fd5e5b6-add2-498f-ac31-6a8f4e3d71da",
          "conditions": [
            { "source": "input", "comparison": "exists", "values": [], "$$hashKey": "object:14284" }
          ],
          "$invalid": false,
          "$$hashKey": "object:14254"
        }
      ],
      "$enteringCustomActions": [
        {
          "$id": "b03bcd79-e0c7-4c00-a89e-5203922be5b5",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - allFlowStepsJs - update",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(allFlowSteps, nextStep, userContext) {\n  try {\n    const allStepsWhereGoBack = {\n      askPortabilityType: false,\n      askNewNumberDDD:  { activeTheFirst: [\"askPortabilityType\"] },\n      askPortabilityNumber:  { activeTheFirst: [\"askPortabilityType\"] },\n      // apiGetPlans: false,\n      askPlanPrincipalOffer: { activeTheFirst: [\"askNewNumberDDD\", \"askPortabilityNumber\"] },\n      askPlans: { activeTheFirst: [\"askPlanPrincipalOffer\"] },\n      askWantPlanAfterSeeMore: { activeTheFirst: [\"askPlans\"] },\n      askPlansAndPortabilityCorrection: { activeTheFirst: [\"askPlansAndPortabilityCheckout\"] },\n      askPlansAndPortabilityCheckout: { activeTheFirst: [\"askPlans\"] },\n      // askClientCPF: { activeTheFirst: [\"askPlansAndPortabilityCheckout\"] },\n      // askClientEmail: { activeTheFirst: [\"askClientCPF\"] },\n      // askClientRG: { activeTheFirst: [\"askClientEmail\"] },\n      // askPersonalCorrection: { activeTheFirst: [\"askPersonalDataCheckout\"] },\n      // askPersonalDataCheckout: { activeTheFirst: [\"askClientRG\"] },\n      askBusinessCNPJ: { activeTheFirst: [\"askPlansAndPortabilityCheckout\"] },\n      askBusinessPhone: { activeTheFirst: [\"askBusinessCNPJ\"] },\n      askBusinessOwnerName: { activeTheFirst: [\"askBusinessPhone\"] },\n      askBusinessEmail: { activeTheFirst: [\"askBusinessOwnerName\"] },\n      askBusinessCPF: { activeTheFirst: [\"askBusinessEmail\"] },\n      askBusinessRG: { activeTheFirst: [\"askBusinessCPF\"] },\n      askBusinessCorrection: { activeTheFirst: [\"askBusinessCheckout\"] },\n      askBusinessCheckout: { activeTheFirst: [\"askBusinessRG\"] },\n      // askZipCode: { activeTheFirst: [\"askBusinessCheckout\"] },\n      // askNumber: { activeAll: [\"askZipCode\", \"apiGetAddress\"] },\n      // askComplement: { activeTheFirst: [\"askNumber\"] },\n      // askRoadName: { activeTheFirst: [\"askComplement\"] },\n      // askNeighborhood: { activeTheFirst: [\"askRoadName\"] },\n      // askAddressCorrection: { activeTheFirst: [\"askAddressCheckout\"] },\n      // askAddressCheckout: { checkStepByCep: { generic: \"askNeighborhood\", specific: \"askComplement\" } },\n      askDueDay: { activeAll: [\"askBusinessCheckout\", \"apiPostCheckoutPersonalAndPlan\"] },\n      askTerms: { activeTheFirst: [\"askDueDay\"] },\n    };\n\n    const mappedDataByNextStep = allStepsWhereGoBack[nextStep];\n\n    allFlowSteps = JSON.parse(allFlowSteps);\n\n    if (mappedDataByNextStep) {\n      userContext = JSON.parse(userContext);\n\n      if (!userContext[nextStep] && !nextStep.includes(\"Correction\")) { //active actual step who has not data in userContext\n        allFlowSteps[nextStep] = true;\n      }\n\n      let specificStepForGoBack = false;\n\n      if (mappedDataByNextStep.checkStepByCep) {\n        const { cepType } = userContext;\n\n        const possibilitiesOfCep = Object.keys(mappedDataByNextStep.checkStepByCep);\n\n        const chekedCepType = possibilitiesOfCep.includes(cepType) ? cepType : \"generic\";\n\n        const mappedData = mappedDataByNextStep.checkStepByCep[chekedCepType];\n\n        specificStepForGoBack = [mappedData];\n      } else if (mappedDataByNextStep.activeTheFirst) {\n        const mappedData = mappedDataByNextStep.activeTheFirst.find(\n          (everyMappedStep) => allFlowSteps[everyMappedStep] != undefined\n        );\n\n        specificStepForGoBack = [mappedData];\n      } else if (mappedDataByNextStep.activeAll) {\n        const mappedData = mappedDataByNextStep.activeAll.filter(\n          (everyMappedStep) => allFlowSteps[everyMappedStep] != undefined\n        );\n\n        specificStepForGoBack = mappedData;\n      }\n\n      if (specificStepForGoBack) {\n        specificStepForGoBack.forEach((everyStepToActive) => (allFlowSteps[everyStepToActive] = true));\n      }\n    } else {\n      const currentStepPosition = Object.keys(allStepsWhereGoBack).indexOf(nextStep);\n      if (currentStepPosition == 0) {\n        allFlowSteps[nextStep] = true;\n      }\n    }\n    return allFlowSteps;\n  } catch (e) {\n    return { itBroked: true, message: e.message };\n  }\n}\n",
            "inputVariables": ["allFlowStepsJs", "nextStepJs", "userContextJs"],
            "outputVariable": "allFlowStepsJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": { "stateId": "fallback", "$invalid": false },
      "isAiGenerated": false,
      "$tags": [
        {
          "id": "blip-tag-bfb62749-317a-435e-bbbe-660a8d60d28e",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        }
      ],
      "id": "9172458a-be92-474f-8492-daad16009dd8",
      "root": false,
      "$title": "goBackAndUpdateAllFlowStepsJs",
      "$position": { "top": "3098px", "left": "1242px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false
    },
    "35b79132-b249-4aa5-b393-dc15058440d7": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "c3802109-9dc3-4875-aef5-a40e70aaa011",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [],
      "$enteringCustomActions": [],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": {
        "stateId": "baba231f-e21a-481a-a7ae-5bb487eeb77a",
        "$invalid": false,
        "typeOfStateId": "state"
      },
      "isAiGenerated": false,
      "$tags": [],
      "id": "35b79132-b249-4aa5-b393-dc15058440d7",
      "root": false,
      "$title": "finalize",
      "$position": { "top": "3449px", "left": "1238px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false
    },
    "d9493687-c70c-4316-ba06-944a59fc06f9": {
      "$contentActions": [
        {
          "action": {
            "$id": "8733221d-0bd5-481b-8d6d-10d133f9fc13",
            "$typeOfContent": "chat-state",
            "type": "SendMessage",
            "settings": {
              "id": "4422112f-6104-4700-b7d9-479dab07a61d",
              "type": "application/vnd.lime.chatstate+json",
              "content": { "state": "composing", "interval": 1000 }
            },
            "$cardContent": {
              "document": {
                "id": "4422112f-6104-4700-b7d9-479dab07a61d",
                "type": "application/vnd.lime.chatstate+json",
                "content": { "state": "composing", "interval": 1000 }
              },
              "editable": true,
              "deletable": true,
              "position": "left"
            }
          },
          "$invalid": false
        },
        {
          "action": {
            "$id": "73e40f3a-f752-4736-8074-a355ac7835b7",
            "$typeOfContent": "select",
            "type": "SendMessage",
            "settings": {
              "id": "6a7d68ed-5f2b-4904-a2ac-0b493649ee1b",
              "type": "application/vnd.lime.select+json",
              "content": {
                "text": "Select text",
                "options": [
                  { "text": "First option" },
                  { "text": "Second option" },
                  { "text": "Third option" }
                ]
              }
            },
            "$cardContent": {
              "document": {
                "id": "6a7d68ed-5f2b-4904-a2ac-0b493649ee1b",
                "type": "application/vnd.lime.select+json",
                "content": {
                  "text": "Select text",
                  "options": [
                    { "text": "First option" },
                    { "text": "Second option" },
                    { "text": "Third option" }
                  ]
                }
              },
              "editable": true,
              "deletable": true,
              "position": "left"
            }
          },
          "$invalid": false
        },
        {
          "input": {
            "bypass": false,
            "$cardContent": {
              "document": {
                "id": "1123f15f-7450-45de-b833-4db58222cdcf",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [
        {
          "stateId": "414a4d5c-380d-443c-9c3d-ac8977c4b72d",
          "typeOfStateId": "state",
          "$connId": "con_218",
          "$id": "0aaf2265-b46b-4456-836b-1137543ce1b9",
          "conditions": [{ "source": "input", "comparison": "exists", "values": [] }],
          "$invalid": false
        }
      ],
      "$enteringCustomActions": [],
      "$leavingCustomActions": [],
      "$inputSuggestions": ["First option", "Second option", "Third option"],
      "$defaultOutput": { "stateId": "fallback", "$invalid": false },
      "isAiGenerated": false,
      "$tags": [
        {
          "id": "blip-tag-92508a82-9379-46b3-bcc4-59a0a34e535c",
          "label": "SendMessage",
          "background": "#EE82EE",
          "canChangeBackground": false
        },
        {
          "id": "blip-tag-092066cf-765c-4a74-9a9f-1ab2536e37c5",
          "label": "UserInput",
          "background": "#000000",
          "canChangeBackground": false
        }
      ],
      "id": "d9493687-c70c-4316-ba06-944a59fc06f9",
      "root": false,
      "$title": "New block",
      "$position": { "top": "2696px", "left": "2772.5px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false
    },
    "1e4c2408-bf8b-412f-a46e-5dfa980cfbf2": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "e8983c5e-791f-48ed-84e8-6df13836d72d",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false,
          "$$hashKey": "object:9869"
        }
      ],
      "$conditionOutputs": [
        {
          "stateId": "{{defaultBlocksIdsJs@invalid}}",
          "typeOfStateId": "variable",
          "$id": "8cd818b8-23a4-4460-8812-8e953b1cad09",
          "conditions": [
            {
              "source": "context",
              "comparison": "exists",
              "values": [],
              "variable": "getOnlyInputDataForUpdateJs@itBroked",
              "$$hashKey": "object:9888"
            }
          ],
          "$invalid": false,
          "$$hashKey": "object:9871"
        },
        {
          "stateId": "e5880d13-1782-4267-b7bd-a382f10939e0",
          "typeOfStateId": "state",
          "$connId": "con_223",
          "$id": "771cd660-b3db-48f6-a48e-6fc0d5d25632",
          "conditions": [
            { "source": "input", "comparison": "exists", "values": [], "$$hashKey": "object:9902" }
          ],
          "$invalid": false,
          "$$hashKey": "object:9872"
        }
      ],
      "$enteringCustomActions": [
        {
          "$id": "f3659420-4520-4ed6-9753-57a0e82ed67f",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - getOnlyInputDataForUpdateJs - CPF",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(currentStepProcessed) {\n  try {\n    const { identifier, extras } = JSON.parse(currentStepProcessed);\n\n    const { dataToRegisterInUserContext, inputRegexMatchData } = extras;\n\n    const cpfIsValid = validateCpf(inputRegexMatchData);\n    \n    if (cpfIsValid) {\n      const keyForRegisterInUserContext = dataToRegisterInUserContext || identifier;\n\n      const dataToReturn = { allDataForUpdate: [{ inputIdentifier: keyForRegisterInUserContext, inputData: inputRegexMatchData }] };\n\n      return dataToReturn;\n    }\n\n    throw { message: \"Error in function that validates CPF\" };\n  } catch (e) {\n    return { itBroked: true, message: e.message };\n  }\n}\n\nfunction validateCpf(cpfInput) {\n  const cpfBlacklist = [\n    \"00000000000\",\n    \"11111111111\",\n    \"22222222222\",\n    \"33333333333\",\n    \"44444444444\",\n    \"55555555555\",\n    \"66666666666\",\n    \"77777777777\",\n    \"88888888888\",\n    \"99999999999\",\n  ];\n\n  if (cpfBlacklist.includes(cpfInput)) {\n    throw { message: \"CPF in blacklist\" };\n  }\n\n  const firstNineCpfNumbers = cpfInput.slice(0, -2);\n\n  const sumOfMultiplicateFirstNineNumbers = validateGroupOfNumberInCpf(firstNineCpfNumbers);\n\n  const onlyTenthCpfDigit = cpfInput.slice(9, 10);\n\n  checkCpfSumValue(sumOfMultiplicateFirstNineNumbers, onlyTenthCpfDigit);\n\n  const firstTenCpfNumbers = cpfInput.slice(0, -1);\n\n  const sumOfMultiplicateFirstTenNumbers = validateGroupOfNumberInCpf(firstTenCpfNumbers);\n\n  const onlyEleventhCpfDigit = cpfInput.slice(10, 11);\n\n  return checkCpfSumValue(sumOfMultiplicateFirstTenNumbers, onlyEleventhCpfDigit);\n}\n\nfunction validateGroupOfNumberInCpf(cpfDigits) {\n  const cpfDigitInArray = cpfDigits.split(\"\");\n\n  const valueForSetCpfFormula = cpfDigits.length + 2;\n\n  const multiplicateAndSumEveryDigit = cpfDigitInArray.reduce((acc, everyNumber, index) => {\n    const cpfPositionValueForSubtraction = index + 1;\n\n    const sumOfEveryCpfNumber =\n      parseInt(everyNumber) * (valueForSetCpfFormula - cpfPositionValueForSubtraction);\n    acc += sumOfEveryCpfNumber;\n    return acc;\n  }, 0);\n\n  return multiplicateAndSumEveryDigit;\n}\n\nfunction checkCpfSumValue(sumValue, digitForValidate) {\n  let restFromCpfInFormula = (sumValue * 10) % 11;\n\n  if (restFromCpfInFormula >= 10) {\n    restFromCpfInFormula = 0;\n  }\n\n  if (restFromCpfInFormula != digitForValidate) {\n    throw { message: \"CPF is not valid\" };\n  }\n\n  return true;\n}",
            "inputVariables": ["currentStepProcessedJs"],
            "outputVariable": "getOnlyInputDataForUpdateJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": { "stateId": "fallback", "$invalid": false },
      "isAiGenerated": false,
      "$tags": [
        {
          "id": "blip-tag-43520705-6c67-4290-88fc-fcd871689fcf",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        }
      ],
      "id": "1e4c2408-bf8b-412f-a46e-5dfa980cfbf2",
      "root": false,
      "$title": "validateAndInputCPF",
      "$position": { "top": "2677.25px", "left": "7955.5px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false
    },
    "f61ad8c5-16b8-455d-88ac-2cc6c61dba00": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "e8983c5e-791f-48ed-84e8-6df13836d72d",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [
        {
          "stateId": "{{defaultBlocksIdsJs@invalid}}",
          "typeOfStateId": "variable",
          "$id": "37f80349-6c9a-4cc4-a81a-e3e8322edc9c",
          "conditions": [
            {
              "source": "context",
              "comparison": "exists",
              "values": [],
              "variable": "getOnlyInputDataForUpdateJs@itBroked"
            }
          ],
          "$invalid": false
        },
        {
          "stateId": "a3f57bfe-82e6-477b-9b94-9857693db872",
          "typeOfStateId": "state",
          "$connId": "con_228",
          "$id": "771cd660-b3db-48f6-a48e-6fc0d5d25632",
          "conditions": [{ "source": "input", "comparison": "exists", "values": [] }],
          "$invalid": false
        }
      ],
      "$enteringCustomActions": [
        {
          "$id": "f3659420-4520-4ed6-9753-57a0e82ed67f",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - getOnlyInputDataForUpdateJs - Email",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(currentStepProcessed) {\n    try {\n      const { identifier, extras } = JSON.parse(currentStepProcessed);\n  \n      const { dataToRegisterInUserContext, userInput } = extras;\n  \n      const emailValidated = validateEmail(userInput);\n  \n      const keyForRegisterInUserContext = dataToRegisterInUserContext || identifier;\n\n\n            const dataToReturn = { allDataForUpdate: [{ inputIdentifier: keyForRegisterInUserContext, inputData: emailValidated }] };\n  \n      return dataToReturn;\n    } catch (e) {\n      return { itBroked: true, message: e.message };\n    }\n  }\n  \n  function validateEmail(emailInput) {\n    const cleanInput = cleanUserInput(emailInput);\n  \n    const REGEX_DATA_TO_EXCLUDE = /(o)?(meu)?\\s?(e-?mail)?\\s?([ée])?(:|\\s)/i;\n  \n    const cleanByRegex = cleanInput.replace(REGEX_DATA_TO_EXCLUDE, \"\").trim();\n  \n    if (cleanByRegex) {\n      return cleanByRegex;\n    }\n    throw { message: \"E-mail is not valid\" };\n  }\n  \n  function cleanUserInput(userInput) {\n    const cleannedUserInput = userInput.replace(/(\\n|\\t|´|`|'|\"|~|\\^|!|#)/g, \" \");\n    return cleannedUserInput;\n  } ",
            "inputVariables": ["currentStepProcessedJs"],
            "outputVariable": "getOnlyInputDataForUpdateJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": { "stateId": "fallback", "$invalid": false },
      "isAiGenerated": false,
      "$tags": [
        {
          "id": "blip-tag-6e868656-6a4e-4e1c-85bf-c8b074dc0c8f",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        }
      ],
      "id": "f61ad8c5-16b8-455d-88ac-2cc6c61dba00",
      "root": false,
      "$title": "validateAndInputEmail",
      "$position": { "top": "2831.33px", "left": "7961.33px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false
    },
    "118bbd90-72eb-42dd-b51b-3cae6621d997": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "b4aedacd-3333-4738-8784-b7aab3cb5976",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [],
      "$enteringCustomActions": [],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": {
        "stateId": "414a4d5c-380d-443c-9c3d-ac8977c4b72d",
        "$invalid": false,
        "typeOfStateId": "state"
      },
      "isAiGenerated": false,
      "$tags": [],
      "id": "118bbd90-72eb-42dd-b51b-3cae6621d997",
      "root": false,
      "$title": "goTo - checkNextStepJs",
      "$position": { "top": "3139px", "left": "1440px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false
    },
    "13cb82b3-1bca-4bfa-a146-68dd400877f9": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "1db98f56-bc3b-438d-b0b1-cf3f76414dc4",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false,
          "$$hashKey": "object:13779"
        }
      ],
      "$conditionOutputs": [
        {
          "stateId": "ff1273aa-085b-4cb5-bc35-a0f4bfabc3a9",
          "typeOfStateId": "state",
          "$connId": "con_233",
          "$id": "6a19a1ac-0bad-40a1-9582-1c22d5a6f79a",
          "conditions": [
            { "source": "input", "comparison": "exists", "values": [], "$$hashKey": "object:13794" }
          ],
          "$invalid": false,
          "$$hashKey": "object:13781"
        }
      ],
      "$enteringCustomActions": [
        {
          "$id": "6fbf848a-d4c4-4b4f-8aea-ec4e1f4239e5",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - userContextJs - update",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(userContext, getDataForUpdateUserContext, nextStepJs) {\n  try {\n    userContext = JSON.parse(userContext);\n\n    getDataForUpdateUserContext = JSON.parse(getDataForUpdateUserContext);\n\n    userContext = {...userContext, ...getDataForUpdateUserContext };\n  } catch (e) {}\n  return userContext;\n}",
            "inputVariables": ["userContextJs", "getDataForUpdateUserContextJs", "nextStepJs"],
            "outputVariable": "userContextJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": { "stateId": "fallback", "$invalid": false },
      "isAiGenerated": false,
      "$tags": [
        {
          "id": "blip-tag-4f4e44b5-633e-4e81-8ca9-7e1e05a3f549",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        }
      ],
      "id": "13cb82b3-1bca-4bfa-a146-68dd400877f9",
      "root": false,
      "$title": "updateUserContext",
      "$position": { "top": "5063.25px", "left": "6311.75px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false
    },
    "9261578a-b315-4f15-8d6d-cc3176cde37e": {
      "$contentActions": [
        {
          "action": {
            "$id": "0cf9f463-61b5-4445-be08-9c1ca2705a87",
            "$typeOfContent": "chat-state",
            "type": "SendMessage",
            "settings": {
              "id": "a5a8dde0-ff4c-45ae-8ae0-006999980659",
              "type": "application/vnd.lime.chatstate+json",
              "content": { "state": "composing", "interval": 1000 }
            },
            "$cardContent": {
              "document": {
                "id": "a5a8dde0-ff4c-45ae-8ae0-006999980659",
                "type": "application/vnd.lime.chatstate+json",
                "content": { "state": "composing", "interval": 1000 }
              },
              "editable": true,
              "deletable": true,
              "position": "left"
            }
          },
          "$invalid": false
        },
        {
          "action": {
            "$id": "bc7227c9-58b0-40df-b770-2037bb45e72d",
            "$typeOfContent": "raw-content",
            "type": "SendRawMessage",
            "settings": {
              "metadata": {},
              "type": "{{msgWelcomeBuildJs@menuData.type}}",
              "rawContent": "{{msgWelcomeBuildJs@menuData.content}}"
            }
          },
          "$invalid": false
        },
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "d26ada80-1088-47d7-8afa-09bdf9958e6c",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [
        {
          "stateId": "66d0fc81-8c10-4659-81d9-2fb4dff67826",
          "typeOfStateId": "state",
          "$connId": "con_238",
          "$id": "cf2a07ca-b464-4fc2-afd2-86cf56fea6fc",
          "conditions": [{ "source": "input", "comparison": "exists", "values": [] }],
          "$invalid": false
        }
      ],
      "$enteringCustomActions": [
        {
          "$id": "4845b9d4-5c0e-41b1-a860-32308458a60a",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - msgWelcomeDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(resourceCompanyData) {\r\n  try {\r\n    const { name, virtualAssistantName, emojis } = JSON.parse(resourceCompanyData)\r\n    const dataMenu = {\r\n      headerMsg:\r\n        `Olá,{lineBreak}Bem-vindo(a) ao portal oficial de {openBold}vendas{closeBold} da ${name}. ${emojis.company}`,\r\n      menuType: \"text\",\r\n    };\r\n\r\n    return dataMenu;\r\n  } catch (e) {\r\n    return { itBroked: true, brokenMsg: e.message };\r\n  }\r\n}\r\n",
            "inputVariables": ["resource.companyData"],
            "outputVariable": "msgWelcomeDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "8114b11e-fcf8-4b59-bcf2-e5d3969552c1",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - msgWelcomeBuildJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "{{resource.functions_msgBuildJs}}",
            "inputVariables": ["channelJs", "formatterJson", "msgWelcomeDataJs"],
            "outputVariable": "msgWelcomeBuildJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": { "stateId": "fallback", "$invalid": false },
      "isAiGenerated": false,
      "$tags": [
        {
          "id": "blip-tag-f0abc5dc-da71-4597-8572-1d39fe8e2ea0",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        },
        {
          "id": "blip-tag-81a2763b-cade-4f51-b2a4-5f93fb903af1",
          "label": "SendMessage",
          "background": "#EE82EE",
          "canChangeBackground": false
        }
      ],
      "id": "9261578a-b315-4f15-8d6d-cc3176cde37e",
      "root": false,
      "$title": "msgWelcome",
      "$position": { "top": "2380.62px", "left": "1648px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false
    },
    "075413bd-8c6e-49aa-9996-b4b621a8299d": {
      "$contentActions": [
        {
          "action": {
            "$id": "0cf9f463-61b5-4445-be08-9c1ca2705a87",
            "$typeOfContent": "chat-state",
            "type": "SendMessage",
            "settings": {
              "id": "a5a8dde0-ff4c-45ae-8ae0-006999980659",
              "type": "application/vnd.lime.chatstate+json",
              "content": { "state": "composing", "interval": 1000 }
            },
            "$cardContent": {
              "document": {
                "id": "a5a8dde0-ff4c-45ae-8ae0-006999980659",
                "type": "application/vnd.lime.chatstate+json",
                "content": { "state": "composing", "interval": 1000 }
              },
              "editable": true,
              "deletable": true,
              "position": "left"
            }
          },
          "$invalid": false
        },
        {
          "action": {
            "$id": "bc7227c9-58b0-40df-b770-2037bb45e72d",
            "$typeOfContent": "raw-content",
            "type": "SendRawMessage",
            "settings": {
              "metadata": {},
              "type": "{{msgFinishedBuildJs@menuData.type}}",
              "rawContent": "{{msgFinishedBuildJs@menuData.content}}"
            }
          },
          "$invalid": false
        },
        {
          "action": {
            "$id": "5bf0d7dc-7d55-4893-b961-ed75cc9456b7",
            "$typeOfContent": "chat-state",
            "type": "SendMessage",
            "settings": {
              "id": "5b6e97b9-686c-4c62-abd7-0b3790b091b9",
              "type": "application/vnd.lime.chatstate+json",
              "content": { "state": "composing", "interval": 1000 }
            },
            "$cardContent": {
              "document": {
                "id": "5b6e97b9-686c-4c62-abd7-0b3790b091b9",
                "type": "application/vnd.lime.chatstate+json",
                "content": { "state": "composing", "interval": 1000 }
              },
              "editable": true,
              "deletable": true,
              "position": "left"
            }
          },
          "$invalid": false
        },
        {
          "action": {
            "$id": "1727d78c-0670-453f-87e7-dce0236bfefb",
            "$typeOfContent": "raw-content",
            "type": "SendRawMessage",
            "settings": {
              "metadata": {},
              "type": "{{msgDebugResumeJs@menuData.type}}",
              "rawContent": "{{msgDebugResumeJs@menuData.content}}"
            }
          },
          "$invalid": false
        },
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "d26ada80-1088-47d7-8afa-09bdf9958e6c",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [],
      "$enteringCustomActions": [
        {
          "$id": "4845b9d4-5c0e-41b1-a860-32308458a60a",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - msgFinishedDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(resourceCompanyData) {\r\n  try {\r\n    const { name, virtualAssistantName } = JSON.parse(resourceCompanyData)\r\n    const dataMenu = {\r\n      headerMsg:\r\n        `Atendimento finalizado. A {openBold}${name}{closeBold} agradeçe sua atenção.`,\r\n      menuType: \"text\",\r\n    };\r\n\r\n    return dataMenu;\r\n  } catch (e) {\r\n    return { itBroked: true, brokenMsg: e.message };\r\n  }\r\n}\r\n",
            "inputVariables": ["resource.companyData"],
            "outputVariable": "msgFinishedDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "8114b11e-fcf8-4b59-bcf2-e5d3969552c1",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - msgFinishedBuildJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(channelJs, formatterJson, allMenuData) {\r\n  try {\r\n    const { headerMsg, footerMsg, allMenuOptions, menuType, descriptionButtonText } = JSON.parse(allMenuData);\r\n\r\n    const allTrueMenuOptions = filterAllOptionsValidMenuOptions(allMenuOptions);\r\n    const dataToReturn = { menuData: {}, errorMsg: \"menuWithoutError\", validMenu: false };\r\n\r\n    const dataForMenus = {\r\n      defaultData: {\r\n        headerMsg: \"Selecione uma das opções abaixo:\",\r\n        buttonsHeadersText: \"Opções de menu\",\r\n        sectionsHeadersText: \"Opções de menu\",\r\n        footerMessage: \"\",\r\n      },\r\n    };\r\n\r\n    if (channelJs == \"whatsapp\") {\r\n      if (menuType == \"menuList\") {\r\n        const buildMenuList = buildAndVerifyMenuList(\r\n          allTrueMenuOptions,\r\n          headerMsg,\r\n          footerMsg,\r\n          descriptionButtonText,\r\n          dataForMenus\r\n        );\r\n        if (buildMenuList.hasError) {\r\n          dataToReturn.errorMsg = buildMenuList.errorMsg;\r\n        } else {\r\n          dataToReturn.menuData = buildMenuList.menuData;\r\n          dataToReturn.validMenu = true;\r\n        }\r\n      }\r\n\r\n      if (menuType == \"menu\" && allTrueMenuOptions.quantityOfMenuOptions <= 3) {\r\n        const buildNormalMenu = buildAndVerifyNormalMenuForWpp(\r\n          allTrueMenuOptions,\r\n          headerMsg,\r\n          footerMsg,\r\n          dataForMenus\r\n        );\r\n        if (buildNormalMenu.hasError) {\r\n          dataToReturn.errorMsg = buildNormalMenu.errorMsg;\r\n        } else {\r\n          dataToReturn.menuData = buildNormalMenu.menuData;\r\n          dataToReturn.validMenu = true;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (channelJs == \"blip\" && menuType != \"text\") {\r\n      const builMenu = buildMenuBlip(allTrueMenuOptions, headerMsg, footerMsg, dataForMenus);\r\n\r\n      if (builMenu) {\r\n        dataToReturn.menuData = builMenu;\r\n        dataToReturn.validMenu = true;\r\n      }\r\n    }\r\n    if (!dataToReturn.validMenu) {\r\n      dataToReturn.menuData = mountTextualMenu(\r\n        allTrueMenuOptions,\r\n        headerMsg,\r\n        footerMsg,\r\n        dataForMenus,\r\n        channelJs\r\n      );\r\n      dataToReturn.validMenu = true;\r\n    }\r\n\r\n    const formattedMenuData = formattedMsg(JSON.stringify(dataToReturn.menuData), formatterJson);\r\n\r\n    dataToReturn.menuData = JSON.parse(formattedMenuData);\r\n\r\n    return dataToReturn;\r\n  } catch (e) {\r\n    return { itBroked: true, brokenMsg: e.message };\r\n  }\r\n}\r\n\r\nfunction filterAllOptionsValidMenuOptions(allOptions) {\r\n  if (allOptions) {\r\n    const allSectionsOptions = allOptions.reduce(\r\n      (acc, everyMenuSection) => {\r\n        const { sectionTitle, allSectionOptions } = everyMenuSection;\r\n        const activeSectionOption = allSectionOptions.filter((everyMenuOption) => everyMenuOption.active);\r\n        if (activeSectionOption.length > 0) {\r\n          acc.sectionsNames.push(sectionTitle);\r\n          acc.menuOptionsPerSection.push(activeSectionOption);\r\n          acc.quantityOfMenuOptions += activeSectionOption.length;\r\n        }\r\n\r\n        return acc;\r\n      },\r\n      { sectionsNames: [], menuOptionsPerSection: [], quantityOfMenuOptions: 0 }\r\n    );\r\n\r\n    return allSectionsOptions;\r\n  }\r\n  return { sectionsNames: [], menuOptionsPerSection: [], quantityOfMenuOptions: 0 };\r\n}\r\n\r\nfunction buildAndVerifyMenuList(allValidOptions, headerMsg, footerMsg, descriptionButtonText, dataForMenus) {\r\n  const menuList = mountMenuList(allValidOptions, headerMsg, footerMsg, descriptionButtonText, dataForMenus);\r\n  const menuListIsValid = checkMenuListIntegrity(menuList);\r\n\r\n  const dataToReturn = { menuData: menuList, ...menuListIsValid };\r\n\r\n  return dataToReturn;\r\n}\r\n\r\nfunction mountMenuList(allOptionsToShow, headerMessage, footerMessage, buttonsHeadersText, dataForMenus) {\r\n  const { sectionsNames, menuOptionsPerSection } = allOptionsToShow;\r\n  const { defaultData } = dataForMenus;\r\n\r\n  let firstMenuOptionIdData = 1;\r\n\r\n  const allSectionsData = menuOptionsPerSection.map((everySectionData, sectionIndex) => {\r\n    {\r\n      const everySectionDataMounted = menuListWppMountEveryMenuOption(\r\n        everySectionData,\r\n        firstMenuOptionIdData\r\n      );\r\n      firstMenuOptionIdData += everySectionData.length;\r\n      const verifiedSectionTitle = sectionsNames[sectionIndex] || defaultData.sectionsHeadersText;\r\n\r\n      const sectionData = {\r\n        title: verifiedSectionTitle,\r\n        rows: everySectionDataMounted,\r\n      };\r\n\r\n      return sectionData;\r\n    }\r\n  });\r\n\r\n  const verifiedHeaderMsg = headerMessage || defaultData.headerMsg;\r\n  const verifiedButtonData = buttonsHeadersText || defaultData.buttonsHeadersText;\r\n\r\n  const wppMenuListPatternData = {\r\n    type: \"application/json\",\r\n    content: {\r\n      recipient_type: \"individual\",\r\n      type: \"interactive\",\r\n      interactive: {\r\n        type: \"list\",\r\n        body: { text: verifiedHeaderMsg },\r\n        action: { button: verifiedButtonData, sections: allSectionsData },\r\n      },\r\n    },\r\n  };\r\n\r\n  const verifiedFooterMsg = footerMessage || defaultData.footerMessage;\r\n\r\n  if (verifiedFooterMsg && verifiedFooterMsg != \"\") {\r\n    wppMenuListPatternData.content.interactive.footer = { text: verifiedFooterMsg };\r\n  }\r\n\r\n  return wppMenuListPatternData;\r\n}\r\n\r\nfunction menuListWppMountEveryMenuOption(everySectionData, firstMenuOptionIdData) {\r\n  const allMenuOptionsBySection = everySectionData.map((menuOption, everyMenuOptionIndex) => {\r\n    const { title, description } = menuOption;\r\n\r\n    const verifiedButtonValue = firstMenuOptionIdData + everyMenuOptionIndex;\r\n\r\n    const everyOptionData = {\r\n      id: `${verifiedButtonValue}`,\r\n      title: `${title}`,\r\n      description: `${description}`,\r\n    };\r\n    return everyOptionData;\r\n  });\r\n  return allMenuOptionsBySection;\r\n}\r\n\r\nfunction checkMenuListIntegrity(menuListForCheck) {\r\n  const dataToReturn = { hasError: false, errorMsg: \"\" };\r\n\r\n  let counterForMenuRows = 0;\r\n\r\n  const CARACTERS_FOR_HEADER = 950;\r\n  const CARACTERS_FOR_FOOTER = 60;\r\n  const CARACTERS_FOR_BUTTON = 20;\r\n  const CARACTERS_FOR_MENU_SECTIONS = 20;\r\n  const CARACTERS_FOR_MENU_OPTION = 24;\r\n  const CARACTERS_FOR_MENU_DESCRIPTION = 72;\r\n  const ROWS_LIMIT = 10;\r\n\r\n  const headerMenuCaracters = menuListForCheck.content.interactive.body.text;\r\n  const footerMenuCaracters = menuListForCheck.content.interactive.footer;\r\n  const buttonMenuCaracters = menuListForCheck.content.interactive.action.button;\r\n\r\n  const headerMenuCaractersLength = headerMenuCaracters ? headerMenuCaracters.length : 1;\r\n  const footerMenuCaractersLength = footerMenuCaracters ? footerMenuCaracters.text.length : 1;\r\n  const buttonMenuCaractersLength = buttonMenuCaracters ? buttonMenuCaracters.length : 1;\r\n  const allRowsData = menuListForCheck.content.interactive.action.sections;\r\n\r\n  const allMenuOptionsId = [];\r\n  try {\r\n    if (headerMenuCaractersLength > CARACTERS_FOR_HEADER) {\r\n      throw \"Exceeded header msg text\";\r\n    }\r\n    if (footerMenuCaractersLength > CARACTERS_FOR_FOOTER) {\r\n      throw \"Exceeded footer msg text\";\r\n    }\r\n    if (buttonMenuCaractersLength > CARACTERS_FOR_BUTTON) {\r\n      throw \"Exceeded menu button text\";\r\n    }\r\n\r\n    allRowsData.forEach((section) => {\r\n      if (section.title.length > CARACTERS_FOR_MENU_SECTIONS) {\r\n        throw \"Exceeded menu SECTION title text in: \" + section.title;\r\n      }\r\n\r\n      section.rows.forEach((menuOption) => {\r\n        counterForMenuRows++;\r\n\r\n        const { title, description, id } = menuOption;\r\n\r\n        if (title.length > CARACTERS_FOR_MENU_OPTION) {\r\n          throw \"Exceeded menu TITLE text in: \" + title;\r\n        }\r\n        if (description.length > CARACTERS_FOR_MENU_DESCRIPTION) {\r\n          throw \"Exceeded menu DESCRIPTION text in: \" + title;\r\n        }\r\n        if (allMenuOptionsId.includes(id)) {\r\n          throw \"Two or more option with equality in id\";\r\n        }\r\n\r\n        allMenuOptionsId.push(menuOption.id);\r\n      });\r\n    });\r\n\r\n    if (counterForMenuRows > ROWS_LIMIT) {\r\n      throw \"Exceeded in total menu rows\";\r\n    }\r\n  } catch (errorMsg) {\r\n    dataToReturn.hasError = true;\r\n    dataToReturn.errorMsg = errorMsg;\r\n  }\r\n  return dataToReturn;\r\n}\r\n\r\nfunction buildAndVerifyNormalMenuForWpp(allValidOptions, headerMsg, footerMsg, dataForMenus) {\r\n  const normalMenu = mountNormalMenuWpp(allValidOptions, headerMsg, footerMsg, dataForMenus);\r\n  const checkedNormalMenuData = checkNormalMenuIntegrity(normalMenu);\r\n\r\n  const dataToReturn = { menuData: normalMenu, ...checkedNormalMenuData };\r\n\r\n  return dataToReturn;\r\n}\r\n\r\nfunction mountNormalMenuWpp(allOptionsToShow, headerMessage, footerMessage, dataForMenus) {\r\n  const { defaultData } = dataForMenus;\r\n\r\n  const { menuOptionsPerSection } = allOptionsToShow;\r\n\r\n  let firstMenuOptionIdData = 1;\r\n\r\n  const allSectionsData = menuOptionsPerSection.reduce((acc, everySectionData) => {\r\n    const everySectionDataMounted = normalMenuWppMountEveryMenuOption(\r\n      everySectionData,\r\n      firstMenuOptionIdData\r\n    );\r\n\r\n    firstMenuOptionIdData += everySectionData.length;\r\n\r\n    acc.push(...everySectionDataMounted);\r\n    return acc;\r\n  }, []);\r\n\r\n  const verifiedHeaderMsg = headerMessage || defaultData.headerMsg;\r\n\r\n  const wppNormalMenuData = {\r\n    type: \"application/json\",\r\n    content: {\r\n      recipient_type: \"individual\",\r\n      type: \"interactive\",\r\n      interactive: {\r\n        type: \"button\",\r\n        body: {\r\n          text: verifiedHeaderMsg,\r\n        },\r\n        action: {\r\n          buttons: allSectionsData,\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  const verifiedFooterMsg = footerMessage || defaultData.footerMessage;\r\n\r\n  if (verifiedFooterMsg && verifiedFooterMsg != \"\") {\r\n    wppNormalMenuData.content.interactive.footer = { text: verifiedFooterMsg };\r\n  }\r\n\r\n  return wppNormalMenuData;\r\n}\r\n\r\nfunction normalMenuWppMountEveryMenuOption(everySectionData, firstMenuOptionIdData) {\r\n  const allMenuOptionsBySection = everySectionData.map((menuOption, everyMenuOptionIndex) => {\r\n    const { title } = menuOption;\r\n\r\n    const verifiedButtonValue = firstMenuOptionIdData + everyMenuOptionIndex;\r\n\r\n    const everyOptionData = {\r\n      type: \"reply\",\r\n      reply: {\r\n        id: `${verifiedButtonValue}`,\r\n        title: `${title}`,\r\n      },\r\n    };\r\n    return everyOptionData;\r\n  });\r\n  return allMenuOptionsBySection;\r\n}\r\n\r\nfunction checkNormalMenuIntegrity(menuListForCheck) {\r\n  const dataToReturn = { hasError: false, errorMsg: \"\" };\r\n  let counterForMenuRows = 0;\r\n\r\n  const CARACTERS_FOR_HEADER = 950;\r\n  const CARACTERS_FOR_FOOTER = 60;\r\n  const CARACTERS_FOR_MENU_OPTION = 20;\r\n  const ROWS_LIMIT = 3;\r\n\r\n  const headerMenuCaracters = menuListForCheck.content.interactive.body.text;\r\n  const footerMenuCaracters = menuListForCheck.content.interactive.footer;\r\n\r\n  const headerMenuCaractersLength = headerMenuCaracters ? headerMenuCaracters.length : 1;\r\n  const footerMenuCaractersLength = footerMenuCaracters ? footerMenuCaracters.text.length : 1;\r\n\r\n  const allRowsData = menuListForCheck.content.interactive.action.buttons;\r\n\r\n  const allMenuOptionsId = [];\r\n\r\n  try {\r\n    if (headerMenuCaractersLength > CARACTERS_FOR_HEADER) {\r\n      throw \"Exceeded header msg text\";\r\n    }\r\n    if (footerMenuCaractersLength > CARACTERS_FOR_FOOTER) {\r\n      throw \"Exceeded footer msg text\";\r\n    }\r\n\r\n    allRowsData.forEach((menuOption) => {\r\n      counterForMenuRows++;\r\n\r\n      const { title, id } = menuOption.reply;\r\n\r\n      if (title.length > CARACTERS_FOR_MENU_OPTION) {\r\n        throw \"Exceeded menu TITLE text in: \" + title;\r\n      }\r\n\r\n      if (allMenuOptionsId.includes(id)) {\r\n        throw \"Two or more option with equality in id\";\r\n      }\r\n\r\n      allMenuOptionsId.push(id);\r\n    });\r\n    if (counterForMenuRows > ROWS_LIMIT) {\r\n      throw \"Exceeded in total menu rows\";\r\n    }\r\n    return true;\r\n  } catch (errorMsg) {\r\n    dataToReturn.hasError = true;\r\n    dataToReturn.errorMsg = errorMsg;\r\n  }\r\n  return dataToReturn;\r\n}\r\n\r\nfunction buildMenuBlip(allValidOptions, headerMsg, footerMsg, dataForMenus) {\r\n  const menuBlip = mountMenu(allValidOptions, headerMsg, footerMsg, dataForMenus);\r\n  if (menuBlip) return menuBlip;\r\n  else return false;\r\n}\r\n\r\nfunction mountMenu(allOptionsToShow, headerMessage, footerMessage, dataForMenus) {\r\n  const contractsOptions = allOptionsToShow.menuOptionsPerSection.reduce((acc, menuOption) => {\r\n    menuOption.forEach((value) => {\r\n      if (acc.indexOf(value.title) == -1) acc.push({ text: value.title });\r\n    });\r\n    return acc;\r\n  }, []);\r\n\r\n  const blipMenuMsg = mountBlipMenuAndTextualMenuTexts(headerMessage, footerMessage, dataForMenus);\r\n\r\n  const blipMenuData = {\r\n    type: \"application/vnd.lime.select+json\",\r\n    content: { text: blipMenuMsg, options: contractsOptions },\r\n  };\r\n\r\n  return blipMenuData;\r\n}\r\n\r\nfunction mountTextualMenu(allOptionsToShow, headerMessage, footerMessage, dataForMenus, channelJs) {\r\n  const { menuOptionsPerSection } = allOptionsToShow;\r\n\r\n  const blipMenuMsg = mountBlipMenuAndTextualMenuTexts(headerMessage, footerMessage, dataForMenus);\r\n\r\n  let menuTextualNumberOption = 1;\r\n\r\n  const allMenuData = menuOptionsPerSection.reduce(\r\n    (acc, everyMenuSection) => {\r\n      everyMenuSection.forEach((everyMenuOption) => {\r\n        const { title, description } = everyMenuOption;\r\n\r\n        const defaultTextOption = `{openBold}${menuTextualNumberOption++}{closeBold} - ${title}`;\r\n\r\n        const textOptionWithDescription = description\r\n          ? `${defaultTextOption}, ${description}`\r\n          : defaultTextOption;\r\n\r\n        acc.push(textOptionWithDescription);\r\n      });\r\n      return acc;\r\n    },\r\n    [blipMenuMsg, \"\"]\r\n  );\r\n\r\n  const allMenuDataInText = allMenuData.join(\"{lineBreak}\");\r\n\r\n  if (channelJs == \"blip\") {\r\n    const textualMenuData = {\r\n      type: \"text/plain\",\r\n      content: allMenuDataInText,\r\n    };\r\n    return textualMenuData;\r\n  }\r\n\r\n  const wppTextPattern = {\r\n    type: \"application/json\",\r\n    content: {\r\n      recipient_type: \"individual\",\r\n      type: \"text\",\r\n      text: {\r\n        body: allMenuDataInText,\r\n      },\r\n    },\r\n  };\r\n\r\n  return wppTextPattern;\r\n}\r\n\r\nfunction mountBlipMenuAndTextualMenuTexts(headerMessage, footerMessage, dataForMenus) {\r\n  const { defaultData } = dataForMenus;\r\n  const verifiedHeaderMsg = headerMessage || defaultData.headerMsg;\r\n\r\n  const verifiedFooterMsg = footerMessage || defaultData.footerMessage;\r\n\r\n  const footerMsgWithLineBreak = verifiedFooterMsg ? \"{lineBreak}\" + verifiedFooterMsg : \"\";\r\n\r\n  const headerMountedMsg = verifiedHeaderMsg + footerMsgWithLineBreak;\r\n  return headerMountedMsg;\r\n}\r\n\r\nfunction formattedMsg(message, formatterJson) {\r\n  try {\r\n    formatterJson = JSON.parse(formatterJson);\r\n    const { identifiers } = formatterJson;\r\n\r\n    formatterJson.lineBreak = formatterJson.lineBreakByObject;\r\n\r\n    let formattedMsg = message;\r\n    for (let everyFormatter in identifiers) {\r\n      formattedMsg = formattedMsg.replace(\r\n        new RegExp(identifiers[everyFormatter], \"g\"),\r\n        formatterJson[everyFormatter]\r\n      );\r\n    }\r\n    return formattedMsg;\r\n  } catch (e) {\r\n    return message;\r\n  }\r\n}",
            "inputVariables": ["channelJs", "formatterJson", "msgFinishedDataJs"],
            "outputVariable": "msgFinishedBuildJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "7fb8457e-3f7f-4e43-a1a3-8a9d4fe96cae",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - msgDebugResumeDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(testerPhone, userContext, resourceCompanyData) {\r\n  try {\r\n    if (testerPhone == \"true\") {\r\n      const { name } = JSON.parse(resourceCompanyData);\r\n\r\n      const {\r\n        askPortabilityType,\r\n        askNewNumberDDD,\r\n        askPortabilityNumber,\r\n        askPlans,\r\n        askBusinessCNPJ,\r\n        askBusinessPhone,\r\n        askBusinessOwnerName,\r\n        askBusinessEmail,\r\n        askBusinessCPF,\r\n        askBusinessRG,\r\n        askDueDay,\r\n        orderId,\r\n      } = JSON.parse(userContext);\r\n\r\n      const portabilityType =\r\n        askPortabilityType.toLowerCase() === \"newline\"\r\n          ? { msg: \"Novo número\", data: askNewNumberDDD }\r\n          : { msg: \"Portabilidade\", data: askPortabilityNumber };\r\n\r\n      const { planName } = askPlans.planData;\r\n\r\n      const allDataForHeaderMenu = [\"Resumo do pedido\", \"\"];\r\n\r\n      allDataForHeaderMenu.push(`{openBold}${name}{closeBold} - OrderId: ${checkData(orderId)}`);\r\n\r\n      allDataForHeaderMenu.push(\"\");\r\n\r\n      allDataForHeaderMenu.push(`{openBold}Nome do plano{closeBold}: ${checkData(planName)}`);\r\n\r\n      allDataForHeaderMenu.push(\"\");\r\n\r\n      allDataForHeaderMenu.push(\r\n        `Tipo de portabilidade: ${checkData(portabilityType.msg)} - ${checkData(portabilityType.data)}`\r\n      );\r\n\r\n      allDataForHeaderMenu.push(\"\");\r\n\r\n      allDataForHeaderMenu.push(`CNPJ: ${checkData(askBusinessCNPJ)}`);\r\n\r\n      allDataForHeaderMenu.push(`Telefone: ${checkData(askBusinessPhone)}`);\r\n\r\n      allDataForHeaderMenu.push(`Nome: ${checkData(askBusinessOwnerName)}`);\r\n\r\n      allDataForHeaderMenu.push(`E-mail: ${checkData(askBusinessEmail)}`);\r\n\r\n      allDataForHeaderMenu.push(`CPF: ${checkData(askBusinessCPF)}`);\r\n\r\n      allDataForHeaderMenu.push(`RG: ${checkData(askBusinessRG)}`);\r\n\r\n      allDataForHeaderMenu.push(`Dia de vencimento: ${checkData(askDueDay)}`);\r\n\r\n      const formattedHeaderData = allDataForHeaderMenu.join(\"{lineBreak}\");\r\n\r\n      const dataMenu = {\r\n        headerMsg: formattedHeaderData,\r\n        menuType: \"text\",\r\n      };\r\n\r\n      return dataMenu;\r\n    }\r\n  } catch (e) {}\r\n  return {\r\n    headerMsg: \"\",\r\n    menuType: \"text\",\r\n  };\r\n}\r\n\r\nfunction checkData(data) {\r\n  const checkedData = data || \"data not foud\";\r\n  return checkedData;\r\n}",
            "inputVariables": ["testerPhoneJs", "userContextJs", "resource.companyData"],
            "outputVariable": "msgDebugResumeDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "6980134a-d0cd-43cd-a012-397fd5aebdf2",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - msgDebugResumeJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "{{resource.functions_msgBuildJs}}",
            "inputVariables": ["channelJs", "formatterJson", "msgDebugResumeDataJs"],
            "outputVariable": "msgDebugResumeJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": { "stateId": "onboarding", "$invalid": false, "typeOfStateId": "state" },
      "isAiGenerated": false,
      "$tags": [
        {
          "id": "blip-tag-4fd14eb1-b527-4be7-8228-c02f7d94ef80",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        },
        {
          "id": "blip-tag-71e67b15-eb97-4dc8-8da9-a1f84ade3901",
          "label": "SendMessage",
          "background": "#EE82EE",
          "canChangeBackground": false
        }
      ],
      "id": "075413bd-8c6e-49aa-9996-b4b621a8299d",
      "root": false,
      "$title": "msgFinished",
      "$position": { "top": "4452.33px", "left": "772px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false
    },
    "baba231f-e21a-481a-a7ae-5bb487eeb77a": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "7bef707e-a82a-4b42-8471-bc3ebd6da43b",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [],
      "$enteringCustomActions": [],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": {
        "stateId": "075413bd-8c6e-49aa-9996-b4b621a8299d",
        "$invalid": false,
        "typeOfStateId": "state"
      },
      "isAiGenerated": false,
      "$tags": [],
      "id": "baba231f-e21a-481a-a7ae-5bb487eeb77a",
      "root": false,
      "$title": "finalizeAttendance",
      "$position": { "top": "2557.75px", "left": "3116.25px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false
    },
    "cb5823c2-449a-4963-887f-9a04d9673298": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "537dddf7-8a14-4351-b806-858b03807ce8",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false,
          "$$hashKey": "object:24897"
        }
      ],
      "$conditionOutputs": [
        {
          "stateId": "{{defaultBlocksIdsJs@broked}}",
          "typeOfStateId": "variable",
          "$id": "5d150875-0479-4ac7-87f7-076228f67b02",
          "conditions": [
            {
              "source": "context",
              "comparison": "exists",
              "values": [],
              "variable": "allFlowStepsJs@itBroked",
              "$$hashKey": "object:24916"
            }
          ],
          "$invalid": false,
          "$$hashKey": "object:24899"
        },
        {
          "stateId": "a12e4961-1583-48b8-ab74-a58a61823ff8",
          "typeOfStateId": "state",
          "$connId": "con_243",
          "$id": "0a032287-4f4f-4687-a356-c3e32d9518fe",
          "conditions": [
            { "source": "input", "comparison": "exists", "values": [], "$$hashKey": "object:24930" }
          ],
          "$invalid": false,
          "$$hashKey": "object:24900"
        }
      ],
      "$enteringCustomActions": [
        {
          "$id": "8e196d20-3f82-4e3b-b065-be4aff03cff7",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - allFlowStepsJs - update",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(allFlowSteps, userContext, nextStep) {\n  try {\n    allFlowSteps = JSON.parse(allFlowSteps);\n\n    const { idForSeeMorePlan } = JSON.parse(userContext);\n\n    if (idForSeeMorePlan) {\n      allFlowSteps.askWantPlanAfterSeeMore = true;\n    }\n\n    return allFlowSteps;\n  } catch (e) {\n    return { itBroked: true, message: e.message };\n  }\n}",
            "inputVariables": ["allFlowStepsJs", "userContextJs", "nextStepJs"],
            "outputVariable": "allFlowStepsJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": { "stateId": "fallback", "$invalid": false },
      "isAiGenerated": false,
      "$tags": [
        {
          "id": "blip-tag-ab49e46e-229f-420a-a4b3-7764bc8b91f6",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        }
      ],
      "id": "cb5823c2-449a-4963-887f-9a04d9673298",
      "root": false,
      "$title": "updateAllFlowStepsForPlanExtras",
      "$position": { "top": "1485px", "left": "7973px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false
    },
    "0f9fcbb5-1fae-4c11-9348-d11b199470f2": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "a7cef784-6e49-4f27-a0f0-7788fada9ae4",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [],
      "$enteringCustomActions": [
        {
          "$id": "5acb97f4-c7d1-48e7-837b-985ce6fe2369",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - askUpsellDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(menuPlansData, userContext) {\n  try {\n    menuPlansData = JSON.parse(menuPlansData);\n    const { originalPlanId } = JSON.parse(userContext).askPlans.planExtras;\n\n    const findSpecificNewPlan = Object.values(menuPlansData).find(\n      (everyPlanMenu) => everyPlanMenu.originalPlanId == originalPlanId\n    );\n    if (findSpecificNewPlan) {\n      const {\n        planName,\n        textDownloadSpeed,\n        textUploadSpeed,\n        textBiggestPrice,\n        textAutomaticDebitPrice,\n        textBilletPrice,\n        checkedUpsellImageLink,\n      } = findSpecificNewPlan.planData;\n      const headerText = [];\n\n      headerText.push(\"Você não pode perder esta incrível oportunidade!\");\n\n      headerText.push(\n        `No plano ${planName} você tem ${textDownloadSpeed} de download e ${textUploadSpeed} de upload por apenas ${textAutomaticDebitPrice} no débito automático e ${textBilletPrice} no boleto.`\n      );\n\n      const formattedPlanHeaderText = headerText.join(\"{lineBreak}\");\n\n      const footerMsg = \"\";\n\n      const mountedMenuData = menuDataForUpsell(\n        formattedPlanHeaderText,\n        footerMsg,\n        checkedUpsellImageLink,\n        findSpecificNewPlan.allIdData\n      );\n\n      return mountedMenuData;\n    }\n    return \"hasNotUpsellValidInThisPlan\";\n  } catch (e) {\n    return { itBroked: true, message: e.message };\n  }\n}\n\nfunction menuDataForUpsell(headerMsg, footerMsg, imageLink, allIDData) {\n  const menuData = {\n    headerMsg,\n    footerMsg,\n    menuType: \"menuWithImage\",\n    imageLink,\n    descriptionButtonText: \"\",\n    allMenuOptions: [\n      {\n        sectionTitle: \"\",\n        allSectionOptions: [\n          {\n            title: \"Aceitar oferta\",\n            description: \"\",\n            identifier: \"accept\",\n            active: true,\n            extras: {\n              userInput: allIDData,\n              dataToRegisterInUserContext: \"forceSetPlanIds\"\n            },\n          },\n          {\n            title: \"Perder oferta\",\n            description: \"\",\n            identifier: \"decline\",\n            active: true,\n            extras: {\n              ignoreUserContextRegister: true,\n            },\n          },\n        ],\n      },\n    ],\n  };\n  return menuData;\n}\n",
            "inputVariables": ["menuPlansDataJs", "userContextJs"],
            "outputVariable": "askUpsellDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "280bab62-b504-4c59-b87e-4afa9abeb1de",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - currentMenuDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "{{resource.function_currentMenuData}}",
            "inputVariables": ["askUpsellDataJs"],
            "outputVariable": "currentMenuDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": {
        "stateId": "bb93536d-668f-4683-95bd-ea547d6051bd",
        "$invalid": false,
        "typeOfStateId": "state"
      },
      "isAiGenerated": false,
      "$tags": [
        {
          "id": "blip-tag-93cc635c-5358-43f9-a214-cfcd3dc8ca06",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        }
      ],
      "id": "0f9fcbb5-1fae-4c11-9348-d11b199470f2",
      "root": false,
      "$title": "askUpsell",
      "$position": { "top": "1762.33px", "left": "4814px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false
    },
    "0c5bce15-77c6-4c4e-9a49-16ba5333cba3": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "e8983c5e-791f-48ed-84e8-6df13836d72d",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [
        {
          "stateId": "{{defaultBlocksIdsJs@invalid}}",
          "typeOfStateId": "variable",
          "$id": "37f80349-6c9a-4cc4-a81a-e3e8322edc9c",
          "conditions": [
            {
              "source": "context",
              "comparison": "exists",
              "values": [],
              "variable": "getOnlyInputDataForUpdateJs@itBroked"
            }
          ],
          "$invalid": false
        },
        {
          "stateId": "f6df8fd5-7840-4134-b659-667b90f35f06",
          "typeOfStateId": "state",
          "$connId": "con_248",
          "$id": "771cd660-b3db-48f6-a48e-6fc0d5d25632",
          "conditions": [{ "source": "input", "comparison": "exists", "values": [] }],
          "$invalid": false
        }
      ],
      "$enteringCustomActions": [
        {
          "$id": "f3659420-4520-4ed6-9753-57a0e82ed67f",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - getOnlyInputDataForUpdateJs - forceSetPlan",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(currentStepProcessed) {\n  try {\n    const { identifier, extras } = JSON.parse(currentStepProcessed);\n\n    const { dataToRegisterInUserContext, userInput } = extras;\n\n    const keyForRegisterInUserContext = dataToRegisterInUserContext || identifier;\n\n    const dataToReturn = { inputIdentifier: keyForRegisterInUserContext, inputData: userInput };\n\n    return dataToReturn;\n  } catch (e) {\n    return { itBroked: true, message: e.message };\n  }\n}\n\n",
            "inputVariables": ["currentStepProcessedJs"],
            "outputVariable": "getOnlyInputDataForUpdateJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": { "stateId": "fallback", "$invalid": false },
      "isAiGenerated": false,
      "$tags": [
        {
          "id": "blip-tag-bfb72be6-0c44-41d4-a318-5edfc5113568",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        }
      ],
      "id": "0c5bce15-77c6-4c4e-9a49-16ba5333cba3",
      "root": false,
      "$title": "validateAskUpsell",
      "$position": { "top": "2248.67px", "left": "7961.67px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false
    },
    "f6df8fd5-7840-4134-b659-667b90f35f06": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "ad22a456-23c8-407d-b7e2-c1682548e8e0",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [
        {
          "stateId": "2dc02083-0960-40a3-8bf2-f9c89aca61de",
          "typeOfStateId": "state",
          "$connId": "con_253",
          "$id": "f070cf83-acfd-4919-b246-3f7d6394a018",
          "conditions": [{ "source": "input", "comparison": "exists", "values": [] }],
          "$invalid": false
        }
      ],
      "$enteringCustomActions": [
        {
          "$id": "328ed34f-f696-4221-b674-5d4442ba0c1e",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - userContextJs - update",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(userContext, currentStepProcessed) {\n  try {\n    userContext = JSON.parse(userContext)\n\n    const { inputIdentifier, inputData } = JSON.parse(currentStepProcessed)\n\n    userContext[inputIdentifier] = inputData\n\n    return userContext\n\n  } catch (e) {\n    return userContext\n  }\n}\n\n",
            "inputVariables": ["userContextJs", "getOnlyInputDataForUpdateJs"],
            "outputVariable": "userContextJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": { "stateId": "fallback", "$invalid": false },
      "isAiGenerated": false,
      "$tags": [
        {
          "id": "blip-tag-320fe91f-2708-4047-9049-3448f027aab6",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        }
      ],
      "id": "f6df8fd5-7840-4134-b659-667b90f35f06",
      "root": false,
      "$title": "updateUserContextForcingSetPlan",
      "$position": { "top": "2123.33px", "left": "8208.33px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false
    },
    "bc601fb1-6099-4c40-97f6-9f73c751d413": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "a7cef784-6e49-4f27-a0f0-7788fada9ae4",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [
        {
          "stateId": "{{defaultBlocksIdsJs@broked}}",
          "typeOfStateId": "variable",
          "$id": "790a8933-b389-40e4-8bbe-149c420f97c0",
          "conditions": [
            {
              "source": "context",
              "comparison": "equals",
              "values": ["hasNotPlanOptionalData"],
              "variable": "askPlanOptionalDataJs"
            }
          ],
          "$invalid": false
        }
      ],
      "$enteringCustomActions": [
        {
          "$id": "5acb97f4-c7d1-48e7-837b-985ce6fe2369",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - askPlanOptionalDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "\nfunction run(menuPlansData, userContext) {\n  try {\n    menuPlansData = JSON.parse(menuPlansData);\n    const { askPlans } = JSON.parse(userContext)\n    const { planExtras, planData } = askPlans;\n    const { optionalData } = planExtras;\n\n    if (optionalData) {\n      const { name, debit_price, digital_price } = optionalData;\n\n      const headerMsg = `Gostaria de incluir este super adicional ${name} por apenas ${turnInTextPriceData(\n        debit_price.toFixed(2)\n      )} no débito automático e ${turnInTextPriceData(digital_price.toFixed(2))} no boleto?`;\n\n      const footerMsg = \"\";\n\n      const menuData = menuDataForPlanOptional(headerMsg, footerMsg, optionalData, planData.checkedPlanOptionImage);\n\n      return menuData;\n    }\n    return \"hasNotPlanOptionalData\";\n  } catch (e) {\n    return { itBroked: true, message: e.message };\n  }\n}\n\nfunction menuDataForPlanOptional(headerMsg, footerMsg, aLaCarteAllData, imageLink) {\n  const menuData = {\n    headerMsg,\n    footerMsg,\n    menuType: \"menuWithImage\",\n    imageLink,\n    descriptionButtonText: \"\",\n    allMenuOptions: [\n      {\n        sectionTitle: \"\",\n        allSectionOptions: [\n          {\n            title: \"Aceitar upgrade\",\n            description: \"\",\n            identifier: \"accept\",\n            active: true,\n            extras: {\n              userInput: aLaCarteAllData,\n              dataToRegisterInUserContext: \"askPlans\"\n            },\n          },\n          {\n            title: \"Perder oferta\",\n            description: \"\",\n            identifier: \"decline\",\n            active: true,\n            extras: {\n              ignoreUserContextRegister: true,\n            },\n          },\n        ],\n      },\n    ],\n  };\n  return menuData;\n}\n\nfunction turnInTextPriceData(priceData) {\n  const turnNumberInString = typeof priceData == \"number\" ? `${priceData}` : priceData;\n  const replaceDataForNumberString = turnNumberInString.replace(\".\", \",\");\n  const formattedData = `R$ ${replaceDataForNumberString}/mês`;\n  return formattedData;\n}",
            "inputVariables": ["menuPlansDataJs", "userContextJs"],
            "outputVariable": "askPlanOptionalDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "280bab62-b504-4c59-b87e-4afa9abeb1de",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - currentMenuDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "{{resource.function_currentMenuData}}",
            "inputVariables": ["askPlanOptionalDataJs"],
            "outputVariable": "currentMenuDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": {
        "stateId": "bb93536d-668f-4683-95bd-ea547d6051bd",
        "$invalid": false,
        "typeOfStateId": "state"
      },
      "isAiGenerated": false,
      "$tags": [
        {
          "id": "blip-tag-38dc53a4-b863-400e-887b-13c48198649e",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        }
      ],
      "id": "bc601fb1-6099-4c40-97f6-9f73c751d413",
      "root": false,
      "$title": "askPlanOptional",
      "$position": { "top": "1891px", "left": "4796.67px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false
    },
    "f23644f0-28cd-4de2-b6da-c390655b06b7": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "e8983c5e-791f-48ed-84e8-6df13836d72d",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [
        {
          "stateId": "{{defaultBlocksIdsJs@invalid}}",
          "typeOfStateId": "variable",
          "$id": "37f80349-6c9a-4cc4-a81a-e3e8322edc9c",
          "conditions": [
            {
              "source": "context",
              "comparison": "exists",
              "values": [],
              "variable": "getOnlyInputDataForUpdateJs@itBroked"
            }
          ],
          "$invalid": false
        },
        {
          "stateId": "a3f57bfe-82e6-477b-9b94-9857693db872",
          "typeOfStateId": "state",
          "$connId": "con_258",
          "$id": "375532e9-abc9-4661-a726-f33ed367a399",
          "conditions": [{ "source": "input", "comparison": "exists", "values": [] }],
          "$invalid": false
        }
      ],
      "$enteringCustomActions": [
        {
          "$id": "f3659420-4520-4ed6-9753-57a0e82ed67f",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - getOnlyInputDataForUpdateJs - askPlans",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(currentStepProcessed, userContext) {\n  try {\n    const { extras } = JSON.parse(currentStepProcessed);\n\n    const { dataToRegisterInUserContext, userInput } = extras;\n\n    const { askPlans } = JSON.parse(userContext);\n\n    const { planData, aLaCarteData, allProductsData } = askPlans;\n\n    const newALaCarteData = [...aLaCarteData, userInput];\n\n    const { biggestPrice, siteId, automaticDebitPrice, billetPrice } = planData;\n    const { name, id, type, price, debit_price, digital_price } = userInput;\n\n    const pricesWithOption = {\n      biggestPrice: (biggestPrice + price).toFixed(2),\n      automaticDebitPrice: (automaticDebitPrice + debit_price).toFixed(2),\n      billetPrice: (billetPrice + digital_price).toFixed(2),\n    };\n\n    planData.planName += ` + ${name}`;\n\n    planData.biggestPrice = parseFloat(pricesWithOption.biggestPrice);\n    planData.automaticDebitPrice = parseFloat(pricesWithOption.automaticDebitPrice);\n    planData.billetPrice = parseFloat(pricesWithOption.billetPrice);\n\n    planData.textBiggestPrice = turnInTextPriceData(pricesWithOption.biggestPrice);\n    planData.textAutomaticDebitPrice = turnInTextPriceData(pricesWithOption.automaticDebitPrice);\n    planData.textBilletPrice = turnInTextPriceData(pricesWithOption.billetPrice);\n\n    const dataForAllProducts = {\n      id,\n      site_id: siteId,\n      type,\n      line_type: \"new\",\n      name,\n      price,\n    };\n\n    allProductsData.push(dataForAllProducts);\n\n    const newPlansData = { planData, aLaCarteData: newALaCarteData, allProductsData };\n\n    const dataToReturn = { allDataForUpdate: [{ inputIdentifier: dataToRegisterInUserContext, inputData: newPlansData }] };\n\n    return dataToReturn;\n  } catch (e) {\n    return { itBroked: true, message: e.message };\n  }\n\n  function turnInTextPriceData(priceData) {\n    const turnNumberInString = typeof priceData == \"number\" ? `${priceData}` : priceData;\n    const replaceDataForNumberString = turnNumberInString.replace(\".\", \",\");\n    const formattedData = `R$ ${replaceDataForNumberString}/mês`;\n    return formattedData;\n  }\n}",
            "inputVariables": ["currentStepProcessedJs", "userContextJs"],
            "outputVariable": "getOnlyInputDataForUpdateJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": { "stateId": "fallback", "$invalid": false },
      "isAiGenerated": false,
      "$tags": [
        {
          "id": "blip-tag-a5d7d799-d9ce-422d-9907-a587ba16eec4",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        }
      ],
      "id": "f23644f0-28cd-4de2-b6da-c390655b06b7",
      "root": false,
      "$title": "validateAskPlanOptional",
      "$position": { "top": "2376.33px", "left": "7958.33px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false
    },
    "3b777309-19b1-4ad3-b227-e81767c2acf7": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "4f396120-3104-4363-b9fe-2ab202d12265",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [],
      "$enteringCustomActions": [],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": { "stateId": "fallback", "$invalid": false },
      "isAiGenerated": false,
      "$tags": [],
      "id": "3b777309-19b1-4ad3-b227-e81767c2acf7",
      "root": false,
      "$title": "BLOCOS DEFAULT DO BOT",
      "$position": { "top": "3595.25px", "left": "476.25px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false
    },
    "a12e4961-1583-48b8-ab74-a58a61823ff8": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "b4aedacd-3333-4738-8784-b7aab3cb5976",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false,
          "$$hashKey": "object:3768"
        }
      ],
      "$conditionOutputs": [
        {
          "stateId": "{{defaultBlocksIdsJs@changeCampaignName}}",
          "typeOfStateId": "variable",
          "$id": "896285bd-f3e5-40fb-b83c-36a52b242f51",
          "conditions": [
            {
              "source": "context",
              "comparison": "equals",
              "values": ["true"],
              "variable": "currentStepProcessedJs@extras.updateSpecificCampaignName",
              "$$hashKey": "object:3783"
            }
          ],
          "$invalid": false,
          "$$hashKey": "object:3770"
        }
      ],
      "$enteringCustomActions": [],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": {
        "stateId": "414a4d5c-380d-443c-9c3d-ac8977c4b72d",
        "$invalid": false,
        "typeOfStateId": "state"
      },
      "isAiGenerated": false,
      "$tags": [],
      "id": "a12e4961-1583-48b8-ab74-a58a61823ff8",
      "root": false,
      "$title": "goToByNextStepASK",
      "$position": { "top": "2100px", "left": "9000px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false
    },
    "3daa5bec-e962-4030-b1d1-bef4d09a4a8e": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "b4aedacd-3333-4738-8784-b7aab3cb5976",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false,
          "$$hashKey": "object:3925"
        }
      ],
      "$conditionOutputs": [],
      "$enteringCustomActions": [],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": {
        "stateId": "414a4d5c-380d-443c-9c3d-ac8977c4b72d",
        "$invalid": false,
        "typeOfStateId": "state"
      },
      "isAiGenerated": false,
      "$tags": [],
      "id": "3daa5bec-e962-4030-b1d1-bef4d09a4a8e",
      "root": false,
      "$title": "goTo - checkNextStepJsMSG",
      "$position": { "top": "434.5px", "left": "5850.75px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false
    },
    "985315a2-1e49-451f-b589-6d9b6a699eb3": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "1e299b87-dbd0-494c-8b59-da3f9a056239",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [
        {
          "stateId": "e2d73630-d95e-4763-8d7a-160122f866be",
          "typeOfStateId": "state",
          "$connId": "con_263",
          "$id": "4a478131-bab4-4b14-9d22-76c2e7f98982",
          "conditions": [
            {
              "source": "context",
              "comparison": "notExists",
              "values": [],
              "variable": "apiGetPlansDataJs@itBroked"
            }
          ],
          "$invalid": false
        }
      ],
      "$enteringCustomActions": [
        {
          "$id": "4234814d-7219-44b2-a87d-06e6465df9f9",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - apiGetPlansDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(stateName) {\n  const requestContentTypeAndAccept = \"application/json\";\n\n  const formattedStateName = stateName[0].toUpperCase() + stateName.slice(1);\n\n  const allRequestData = {\n    contentType: requestContentTypeAndAccept,\n    accept: requestContentTypeAndAccept,\n    formattedStateName,\n  };\n\n  try {\n\n    allRequestData.urlRequest = \"https://microcampanha.m2digital.com.br/api/get-product/?site_id={{resource.companyData@siteId}}&by_pass=true\"\n\n    return allRequestData;\n  } catch (e) {\n    return { itBroked: true, message: e.message };\n  }\n}\n",
            "inputVariables": ["state.name"],
            "outputVariable": "apiGetPlansDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": {
        "stateId": "37f6ea15-cf65-4884-b3f8-d59043fcf767",
        "$invalid": false,
        "typeOfStateId": "state"
      },
      "isAiGenerated": false,
      "$tags": [
        {
          "id": "blip-tag-c33c8bf1-0362-4550-b107-861979700414",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        }
      ],
      "id": "985315a2-1e49-451f-b589-6d9b6a699eb3",
      "root": false,
      "$title": "mountRequest - apiGetPlans",
      "$position": { "top": "5133.25px", "left": "5408.75px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false
    },
    "e2d73630-d95e-4763-8d7a-160122f866be": {
      "$contentActions": [
        {
          "action": {
            "$id": "8f4a37e3-65ca-40c9-b619-ce8a91e7a7ff",
            "$typeOfContent": "text",
            "type": "SendMessage",
            "settings": {
              "id": "df80518f-a563-4bb2-82e2-72b7441da58f",
              "type": "text/plain",
              "content": "{{apiGetPlansDebugJs}}",
              "metadata": {}
            },
            "$cardContent": {
              "document": {
                "id": "df80518f-a563-4bb2-82e2-72b7441da58f",
                "type": "text/plain",
                "content": "{{apiGetPlansDebugJs}}"
              },
              "editable": true,
              "deletable": true,
              "position": "left"
            }
          },
          "$invalid": false
        },
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "1e299b87-dbd0-494c-8b59-da3f9a056239",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [
        {
          "stateId": "9f8a5e23-3b48-4dbf-b1fc-08383c699629",
          "typeOfStateId": "state",
          "$connId": "con_268",
          "$id": "58e7e56f-e877-46c2-a425-fbac59f2dd60",
          "conditions": [
            {
              "source": "context",
              "comparison": "notExists",
              "values": [],
              "variable": "apiGetPlansValidatedJs@itBroked"
            }
          ],
          "$invalid": false
        }
      ],
      "$enteringCustomActions": [
        {
          "$id": "0aa2854c-e349-4b80-8b11-63f37537560a",
          "$typeOfContent": "",
          "type": "ProcessHttp",
          "$title": "Process http - apiGetPlans",
          "$invalid": false,
          "settings": {
            "headers": {
              "Content-Type": "{{apiGetPlansDataJs@contentType}}",
              "Accept": "{{apiGetPlansDataJs@accept}}"
            },
            "method": "GET",
            "uri": "{{apiGetPlansDataJs@urlRequest}}",
            "responseStatusVariable": "statusApiGetPlans",
            "responseBodyVariable": "responseApiGetPlans"
          },
          "conditions": [{ "values": ["ascasc"], "source": "input", "comparison": "equals" }]
        },
        {
          "$id": "6b0452f7-8d61-4675-bc0c-0ef6f977157c",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - apiGetPlansValidatedJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(responseApi) {\n  try {\n    return { message: \"OK\" }\n    const dataWhoNeedExistInFirstObjectLvl = [\"city, state\"];\n\n    const checkedApiData = responseApi ? JSON.parse(responseApi) : {};\n\n    const hasAllDataInApi = dataWhoNeedExistInFirstObjectLvl.find(\n      (everyDataWhoNeedExist) => !checkedApiData[everyDataWhoNeedExist]\n    );\n\n    if (hasAllDataInApi) {\n      throw \"Data has not whats need in api\";\n    }\n\n    return { message: \"OK\" }\n  } catch (e) {\n    return { itBroked: true, message: e.message };\n  }\n}",
            "inputVariables": ["responseApiGetPlans"],
            "outputVariable": "apiGetPlansValidatedJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "dadc8837-c838-4a57-a62c-48c47258180e",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - apiGetPlansDebugJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(debugJs, formatterJson, apiData, status, response, apiValidation) {\r\n  try {\r\n    const debugMsg = [];\r\n\r\n    debugJs = JSON.parse(debugJs);\r\n\r\n    const { urlRequest, formattedStateName, body } = JSON.parse(apiData);\r\n    const bodyStringfied = formatBodyData(body);\r\n\r\n    const validationMessage = JSON.parse(apiValidation).message\r\n\r\n    if (debugJs) {\r\n      debugMsg.push(`{openBold}${formattedStateName} - ${validationMessage}{closeBold}`);\r\n      debugMsg.push(\"\");\r\n      debugMsg.push(`{openBold}url:{closeBold} ${urlRequest}`);\r\n      debugMsg.push(`{openBold}status${formattedStateName}:{closeBold} ${status}`);\r\n\r\n      if (bodyStringfied) {\r\n        debugMsg.push(\"\");\r\n        debugMsg.push(`{openBold}body:{closeBold} ${bodyStringfied}`);\r\n      }\r\n      debugMsg.push(\"\");\r\n      debugMsg.push(`{openBold}response${formattedStateName}:{closeBold} ${response}`);\r\n    }\r\n\r\n    const mountedDebugMsg = debugMsg.join(\"{lineBreak}\");\r\n\r\n    return formattedMsg(mountedDebugMsg, formatterJson);\r\n  } catch (e) {\r\n    return e;\r\n    return \"\";\r\n  }\r\n}\r\n\r\nfunction formattedMsg(message, formatterJson) {\r\n  try {\r\n    formatterJson = JSON.parse(formatterJson);\r\n    const { identifiers } = formatterJson;\r\n    let formattedMsg = message;\r\n    for (let everyFormatter in identifiers) {\r\n      formattedMsg = formattedMsg.replace(\r\n        new RegExp(identifiers[everyFormatter], \"g\"),\r\n        formatterJson[everyFormatter]\r\n      );\r\n    }\r\n    return formattedMsg;\r\n  } catch (e) {\r\n    return message;\r\n  }\r\n}\r\n\r\nfunction formatBodyData(body) {\r\n  if (body == null || body == undefined || body == \"\") {\r\n    return false;\r\n  }\r\n  return JSON.stringify(body);\r\n}",
            "inputVariables": [
              "debugJs",
              "formatterJson",
              "apiGetPlansDataJs",
              "statusApiGetPlans",
              "responseApiGetPlans",
              "apiGetPlansValidatedJs"
            ],
            "outputVariable": "apiGetPlansDebugJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": [],
          "continueOnError": true
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": {
        "stateId": "37f6ea15-cf65-4884-b3f8-d59043fcf767",
        "$invalid": false,
        "typeOfStateId": "state"
      },
      "isAiGenerated": false,
      "$tags": [
        {
          "id": "blip-tag-d17c3aea-f3f3-4892-af5c-467281e22b7e",
          "label": "ProcessHttp",
          "background": "#7762E3",
          "canChangeBackground": false
        },
        {
          "id": "blip-tag-0dd3a2e8-a599-4bdb-9f33-69ca322065fd",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        },
        {
          "id": "blip-tag-5a30b4b3-f93a-42dd-a063-e3f476126da1",
          "label": "SendMessage",
          "background": "#EE82EE",
          "canChangeBackground": false
        }
      ],
      "id": "e2d73630-d95e-4763-8d7a-160122f866be",
      "root": false,
      "$title": "makeRequest - apiGetPlans",
      "$position": { "top": "5127.25px", "left": "5627.75px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false
    },
    "9f8a5e23-3b48-4dbf-b1fc-08383c699629": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "1e299b87-dbd0-494c-8b59-da3f9a056239",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false,
          "$$hashKey": "object:13412"
        }
      ],
      "$conditionOutputs": [
        {
          "stateId": "651e8a14-8abb-4e94-bfa6-44152a76c295",
          "typeOfStateId": "state",
          "$connId": "con_273",
          "$id": "3c0e270b-b597-4045-abdc-8b85ac72bd00",
          "conditions": [
            { "source": "input", "comparison": "exists", "values": [], "$$hashKey": "object:13431" }
          ],
          "$invalid": false,
          "$$hashKey": "object:13414"
        },
        {
          "stateId": "ff1273aa-085b-4cb5-bc35-a0f4bfabc3a9",
          "typeOfStateId": "state",
          "$connId": "con_278",
          "$id": "b6636a69-6ed2-4379-9744-87afad6ac8cb",
          "conditions": [
            { "source": "input", "comparison": "exists", "values": [], "$$hashKey": "object:13443" }
          ],
          "$invalid": false,
          "$$hashKey": "object:13415"
        }
      ],
      "$enteringCustomActions": [
        {
          "$id": "1bd09b25-03d1-44c3-ad0d-b292137b1d01",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - formatPlansDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run() {\n  const dataToReurn = [\n    {\n      id: 595,\n      name: \"Total Doc\",\n      fidelity: \"Anual\",\n      type: \"Odonto\",\n      personType: \"Física\",\n      optionals: [\n        { id: 629, name: \"Manutenção e apoio diagnóstico\" },\n        { id: 630, name: \"Os mais modernos Exames ortodônticos\" },\n        { id: 628, name: \"Cobertura ampliada + Documentação\" },\n        { id: 793, name: \"Restaurações\" },\n        { id: 794, name: \"Radiografias\" },\n        { id: 795, name: \"Limpezas preventivas\" },\n        { id: 796, name: \"Tratamento de canal dentário\" },\n        { id: 797, name: \"Prótese simples unitárias\" },\n        { id: 798, name: \"Tratamento gengival\" },\n        { id: 799, name: \"Cirurgias e extrações\" },\n        { id: 800, name: \"Biópsias de boca\" },\n        { id: 801, name: \"Prótese simples unitárias\" },\n        { id: 802, name: \"Urgência e emergências 24h\" },\n        { id: 803, name: \"Clareamento unitário de dente desvitalizado\" },\n        { id: 805, name: \"Tratamento ortodôntico\" },\n      ],\n      prices: {\n        1: {\n          total: { biggest: 598.8, debit: 598.8, billet: 598.8, pix: 598.8, creditCard: 0 },\n          forShow: {\n            biggest: \"R$ 49,90/mês\",\n            debit: \"R$ 49,90/mês\",\n            billet: \"R$ 49,90/mês\",\n            pix: \"R$ 49,90/mês\",\n            creditCard: \"R$ 0,00/mês\",\n          },\n        },\n        2: {\n          total: { biggest: 1077.6, debit: 1077.6, billet: 1077.6, pix: 1077.6, creditCard: 0 },\n          forShow: {\n            biggest: \"R$ 89,80/mês\",\n            debit: \"R$ 89,80/mês\",\n            billet: \"R$ 89,80/mês\",\n            pix: \"R$ 89,80/mês\",\n            creditCard: \"R$ 0,00/mês\",\n          },\n        },\n        3: {\n          total: { biggest: 1400.37, debit: 1400.37, billet: 1400.37, pix: 1400.37, creditCard: 0 },\n          forShow: {\n            biggest: \"R$ 116,70/mês\",\n            debit: \"R$ 116,70/mês\",\n            billet: \"R$ 116,70/mês\",\n            pix: \"R$ 116,70/mês\",\n            creditCard: \"R$ 0,00/mês\",\n          },\n        },\n        4: {\n          total: { biggest: 1867.16, debit: 1867.16, billet: 1867.16, pix: 1867.16, creditCard: 0 },\n          forShow: {\n            biggest: \"R$ 155,60/mês\",\n            debit: \"R$ 155,60/mês\",\n            billet: \"R$ 155,60/mês\",\n            pix: \"R$ 155,60/mês\",\n            creditCard: \"R$ 0,00/mês\",\n          },\n        },\n        5: {\n          total: { biggest: 2333.95, debit: 2333.95, billet: 2333.95, pix: 2333.95, creditCard: 0 },\n          forShow: {\n            biggest: \"R$ 194,50/mês\",\n            debit: \"R$ 194,50/mês\",\n            billet: \"R$ 194,50/mês\",\n            pix: \"R$ 194,50/mês\",\n            creditCard: \"R$ 0,00/mês\",\n          },\n        },\n      },\n    },\n    {\n      id: 562,\n      name: \"Total\",\n      fidelity: \"Anual\",\n      type: \"Odonto\",\n      personType: \"Física\",\n      optionals: [\n        { id: 496, name: \"Cobertura ampliada\" },\n        { id: 500, name: \"Manutenção da saúde bucal\" },\n        { id: 501, name: \"+ de 200 coberturas com o Melhor custo benefício\" },\n        { id: 793, name: \"Restaurações\" },\n        { id: 794, name: \"Radiografias\" },\n        { id: 795, name: \"Limpezas preventivas\" },\n        { id: 796, name: \"Tratamento de canal dentário\" },\n        { id: 797, name: \"Prótese simples unitárias\" },\n        { id: 798, name: \"Tratamento gengival\" },\n        { id: 799, name: \"Cirurgias e extrações\" },\n        { id: 800, name: \"Biópsias de boca\" },\n        { id: 801, name: \"Prótese simples unitárias\" },\n        { id: 802, name: \"Urgência e emergências 24h\" },\n        { id: 803, name: \"Clareamento unitário de dente desvitalizado\" },\n      ],\n      prices: {\n        1: {\n          total: { biggest: 526.8, debit: 526.8, billet: 526.8, pix: 526.8, creditCard: 0 },\n          forShow: {\n            biggest: \"R$ 43,90/mês\",\n            debit: \"R$ 43,90/mês\",\n            billet: \"R$ 43,90/mês\",\n            pix: \"R$ 43,90/mês\",\n            creditCard: \"R$ 0,00/mês\",\n          },\n        },\n        2: {\n          total: { biggest: 947.98, debit: 947.98, billet: 947.98, pix: 947.98, creditCard: 0 },\n          forShow: {\n            biggest: \"R$ 79,00/mês\",\n            debit: \"R$ 79,00/mês\",\n            billet: \"R$ 79,00/mês\",\n            pix: \"R$ 79,00/mês\",\n            creditCard: \"R$ 0,00/mês\",\n          },\n        },\n        3: {\n          total: { biggest: 1231.2, debit: 1231.2, billet: 1231.2, pix: 1231.2, creditCard: 0 },\n          forShow: {\n            biggest: \"R$ 102,60/mês\",\n            debit: \"R$ 102,60/mês\",\n            billet: \"R$ 102,60/mês\",\n            pix: \"R$ 102,60/mês\",\n            creditCard: \"R$ 0,00/mês\",\n          },\n        },\n        4: {\n          total: { biggest: 1641.6, debit: 1641.6, billet: 1641.6, pix: 1641.6, creditCard: 0 },\n          forShow: {\n            biggest: \"R$ 136,80/mês\",\n            debit: \"R$ 136,80/mês\",\n            billet: \"R$ 136,80/mês\",\n            pix: \"R$ 136,80/mês\",\n            creditCard: \"R$ 0,00/mês\",\n          },\n        },\n        5: {\n          total: { biggest: 2052, debit: 2052, billet: 2052, pix: 2052, creditCard: 0 },\n          forShow: {\n            biggest: \"R$ 171,00/mês\",\n            debit: \"R$ 171,00/mês\",\n            billet: \"R$ 171,00/mês\",\n            pix: \"R$ 171,00/mês\",\n            creditCard: \"R$ 0,00/mês\",\n          },\n        },\n      },\n    },\n    {\n      id: 667,\n      name: \"Total Clarear\",\n      fidelity: \"Mensal\",\n      type: \"Odonto\",\n      personType: \"Física\",\n      optionals: [\n        { id: 631, name: \"Cobertura ampliada + clareamento\" },\n        { id: 632, name: \"Manutenção e beleza do seu sorriso\" },\n        { id: 611, name: \"Clareamento seguro e eficaz\" },\n        { id: 793, name: \"Restaurações\" },\n        { id: 794, name: \"Radiografias\" },\n        { id: 795, name: \"Limpezas preventivas\" },\n        { id: 796, name: \"Tratamento de canal dentário\" },\n        { id: 797, name: \"Prótese simples unitárias\" },\n        { id: 798, name: \"Tratamento gengival\" },\n        { id: 799, name: \"Cirurgias e extrações\" },\n        { id: 800, name: \"Biópsias de boca\" },\n        { id: 801, name: \"Prótese simples unitárias\" },\n        { id: 802, name: \"Urgência e emergências 24h\" },\n        { id: 803, name: \"Clareamento unitário de dente desvitalizado\" },\n        { id: 804, name: \"Clareamento Convencional (gel + moldeiras)\" },\n      ],\n      prices: {\n        1: {\n          total: { biggest: 129.9, debit: 129.9, billet: 129.9, pix: 129.9, creditCard: 0 },\n          forShow: {\n            biggest: \"R$ 129,90/mês\",\n            debit: \"R$ 129,90/mês\",\n            billet: \"R$ 129,90/mês\",\n            pix: \"R$ 129,90/mês\",\n            creditCard: \"R$ 0,00/mês\",\n          },\n        },\n        2: {\n          total: { biggest: 233.78, debit: 233.78, billet: 233.78, pix: 233.78, creditCard: 0 },\n          forShow: {\n            biggest: \"R$ 233,78/mês\",\n            debit: \"R$ 233,78/mês\",\n            billet: \"R$ 233,78/mês\",\n            pix: \"R$ 233,78/mês\",\n            creditCard: \"R$ 0,00/mês\",\n          },\n        },\n        3: {\n          total: { biggest: 303.81, debit: 303.81, billet: 303.81, pix: 303.81, creditCard: 0 },\n          forShow: {\n            biggest: \"R$ 303,81/mês\",\n            debit: \"R$ 303,81/mês\",\n            billet: \"R$ 303,81/mês\",\n            pix: \"R$ 303,81/mês\",\n            creditCard: \"R$ 0,00/mês\",\n          },\n        },\n        4: {\n          total: { biggest: 405.08, debit: 405.08, billet: 405.08, pix: 405.08, creditCard: 0 },\n          forShow: {\n            biggest: \"R$ 405,08/mês\",\n            debit: \"R$ 405,08/mês\",\n            billet: \"R$ 405,08/mês\",\n            pix: \"R$ 405,08/mês\",\n            creditCard: \"R$ 0,00/mês\",\n          },\n        },\n        5: {\n          total: { biggest: 506.35, debit: 506.35, billet: 506.35, pix: 506.35, creditCard: 0 },\n          forShow: {\n            biggest: \"R$ 506,35/mês\",\n            debit: \"R$ 506,35/mês\",\n            billet: \"R$ 506,35/mês\",\n            pix: \"R$ 506,35/mês\",\n            creditCard: \"R$ 0,00/mês\",\n          },\n        },\n      },\n    },\n    {\n      id: 661,\n      name: \"Total Orto\",\n      fidelity: \"Anual\",\n      type: \"Odonto\",\n      personType: \"Física\",\n      optionals: [\n        { id: 499, name: \"Cobertura ampliada + Documentação + ortodontia\" },\n        { id: 500, name: \"Manutenção da saúde bucal\" },\n        { id: 634, name: \"Manutenção e tratamento ortodôntico completo\" },\n        { id: 793, name: \"Restaurações\" },\n        { id: 794, name: \"Radiografias\" },\n        { id: 795, name: \"Limpezas preventivas\" },\n        { id: 796, name: \"Tratamento de canal dentário\" },\n        { id: 797, name: \"Prótese simples unitárias\" },\n        { id: 798, name: \"Tratamento gengival\" },\n        { id: 799, name: \"Cirurgias e extrações\" },\n        { id: 800, name: \"Biópsias de boca\" },\n        { id: 801, name: \"Prótese simples unitárias\" },\n        { id: 802, name: \"Urgência e emergências 24h\" },\n        { id: 803, name: \"Clareamento unitário de dente desvitalizado\" },\n        { id: 804, name: \"Clareamento Convencional (gel + moldeiras)\" },\n        { id: 805, name: \"Tratamento ortodôntico\" },\n        { id: 806, name: \"Documentação e radiografias\" },\n        { id: 807, name: \"Instalação de aparelho fixo metálico\" },\n        { id: 808, name: \"Manutenção mensal de aparelho fixo\" },\n      ],\n      prices: {\n        1: {\n          total: { biggest: 1558.8, debit: 1558.8, billet: 1558.8, pix: 1558.8, creditCard: 0 },\n          forShow: {\n            biggest: \"R$ 129,90/mês\",\n            debit: \"R$ 129,90/mês\",\n            billet: \"R$ 129,90/mês\",\n            pix: \"R$ 129,90/mês\",\n            creditCard: \"R$ 0,00/mês\",\n          },\n        },\n        2: {\n          total: { biggest: 2805.58, debit: 2805.58, billet: 2805.58, pix: 2805.58, creditCard: 0 },\n          forShow: {\n            biggest: \"R$ 233,80/mês\",\n            debit: \"R$ 233,80/mês\",\n            billet: \"R$ 233,80/mês\",\n            pix: \"R$ 233,80/mês\",\n            creditCard: \"R$ 0,00/mês\",\n          },\n        },\n        3: {\n          total: { biggest: 3668.4, debit: 3668.4, billet: 3668.4, pix: 3668.4, creditCard: 0 },\n          forShow: {\n            biggest: \"R$ 305,70/mês\",\n            debit: \"R$ 305,70/mês\",\n            billet: \"R$ 305,70/mês\",\n            pix: \"R$ 305,70/mês\",\n            creditCard: \"R$ 0,00/mês\",\n          },\n        },\n        4: {\n          total: { biggest: 4891.2, debit: 4891.2, billet: 4891.2, pix: 4891.2, creditCard: 0 },\n          forShow: {\n            biggest: \"R$ 407,60/mês\",\n            debit: \"R$ 407,60/mês\",\n            billet: \"R$ 407,60/mês\",\n            pix: \"R$ 407,60/mês\",\n            creditCard: \"R$ 0,00/mês\",\n          },\n        },\n        5: {\n          total: { biggest: 6114, debit: 6114, billet: 6114, pix: 6114, creditCard: 0 },\n          forShow: {\n            biggest: \"R$ 509,50/mês\",\n            debit: \"R$ 509,50/mês\",\n            billet: \"R$ 509,50/mês\",\n            pix: \"R$ 509,50/mês\",\n            creditCard: \"R$ 0,00/mês\",\n          },\n        },\n      },\n    },\n    {\n      id: 665,\n      name: \"Total\",\n      fidelity: \"Mensal\",\n      type: \"Odonto\",\n      personType: \"Física\",\n      optionals: [\n        { id: 496, name: \"Cobertura ampliada\" },\n        { id: 500, name: \"Manutenção da saúde bucal\" },\n        { id: 501, name: \"+ de 200 coberturas com o Melhor custo benefício\" },\n        { id: 793, name: \"Restaurações\" },\n        { id: 794, name: \"Radiografias\" },\n        { id: 795, name: \"Limpezas preventivas\" },\n        { id: 796, name: \"Tratamento de canal dentário\" },\n        { id: 797, name: \"Prótese simples unitárias\" },\n        { id: 798, name: \"Tratamento gengival\" },\n        { id: 799, name: \"Cirurgias e extrações\" },\n        { id: 800, name: \"Biópsias de boca\" },\n        { id: 801, name: \"Prótese simples unitárias\" },\n        { id: 802, name: \"Urgência e emergências 24h\" },\n        { id: 803, name: \"Clareamento unitário de dente desvitalizado\" },\n      ],\n      prices: {\n        1: {\n          total: { biggest: 44.91, debit: 49.9, billet: 49.9, pix: 44.91, creditCard: 0 },\n          forShow: {\n            biggest: \"R$ 44,91/mês\",\n            debit: \"R$ 49,90/mês\",\n            billet: \"R$ 49,90/mês\",\n            pix: \"R$ 44,91/mês\",\n            creditCard: \"R$ 0,00/mês\",\n          },\n        },\n        2: {\n          total: { biggest: 89.8, debit: 89.8, billet: 89.8, pix: 89.8, creditCard: 0 },\n          forShow: {\n            biggest: \"R$ 89,80/mês\",\n            debit: \"R$ 89,80/mês\",\n            billet: \"R$ 89,80/mês\",\n            pix: \"R$ 89,80/mês\",\n            creditCard: \"R$ 0,00/mês\",\n          },\n        },\n        3: {\n          total: { biggest: 116.67, debit: 116.67, billet: 116.67, pix: 116.67, creditCard: 0 },\n          forShow: {\n            biggest: \"R$ 116,67/mês\",\n            debit: \"R$ 116,67/mês\",\n            billet: \"R$ 116,67/mês\",\n            pix: \"R$ 116,67/mês\",\n            creditCard: \"R$ 0,00/mês\",\n          },\n        },\n        4: {\n          total: { biggest: 155.56, debit: 155.56, billet: 155.56, pix: 155.56, creditCard: 0 },\n          forShow: {\n            biggest: \"R$ 155,56/mês\",\n            debit: \"R$ 155,56/mês\",\n            billet: \"R$ 155,56/mês\",\n            pix: \"R$ 155,56/mês\",\n            creditCard: \"R$ 0,00/mês\",\n          },\n        },\n        5: {\n          total: { biggest: 194.45, debit: 194.45, billet: 194.45, pix: 194.45, creditCard: 0 },\n          forShow: {\n            biggest: \"R$ 194,45/mês\",\n            debit: \"R$ 194,45/mês\",\n            billet: \"R$ 194,45/mês\",\n            pix: \"R$ 194,45/mês\",\n            creditCard: \"R$ 0,00/mês\",\n          },\n        },\n      },\n    },\n    {\n      id: 596,\n      name: \"Total Clarear\",\n      fidelity: \"Anual\",\n      type: \"Odonto\",\n      personType: \"Física\",\n      optionals: [\n        { id: 631, name: \"Cobertura ampliada + clareamento\" },\n        { id: 632, name: \"Manutenção e beleza do seu sorriso\" },\n        { id: 611, name: \"Clareamento seguro e eficaz\" },\n        { id: 793, name: \"Restaurações\" },\n        { id: 794, name: \"Radiografias\" },\n        { id: 795, name: \"Limpezas preventivas\" },\n        { id: 796, name: \"Tratamento de canal dentário\" },\n        { id: 797, name: \"Prótese simples unitárias\" },\n        { id: 798, name: \"Tratamento gengival\" },\n        { id: 799, name: \"Cirurgias e extrações\" },\n        { id: 800, name: \"Biópsias de boca\" },\n        { id: 801, name: \"Prótese simples unitárias\" },\n        { id: 802, name: \"Urgência e emergências 24h\" },\n        { id: 803, name: \"Clareamento unitário de dente desvitalizado\" },\n        { id: 804, name: \"Clareamento Convencional (gel + moldeiras)\" },\n      ],\n      prices: {\n        1: {\n          total: { biggest: 1366.8, debit: 1366.8, billet: 1366.8, pix: 1366.8, creditCard: 0 },\n          forShow: {\n            biggest: \"R$ 113,90/mês\",\n            debit: \"R$ 113,90/mês\",\n            billet: \"R$ 113,90/mês\",\n            pix: \"R$ 113,90/mês\",\n            creditCard: \"R$ 0,00/mês\",\n          },\n        },\n        2: {\n          total: { biggest: 2459.98, debit: 2459.98, billet: 2459.98, pix: 2459.98, creditCard: 0 },\n          forShow: {\n            biggest: \"R$ 205,00/mês\",\n            debit: \"R$ 205,00/mês\",\n            billet: \"R$ 205,00/mês\",\n            pix: \"R$ 205,00/mês\",\n            creditCard: \"R$ 0,00/mês\",\n          },\n        },\n        3: {\n          total: { biggest: 3196.8, debit: 3196.8, billet: 3196.8, pix: 3196.8, creditCard: 0 },\n          forShow: {\n            biggest: \"R$ 266,40/mês\",\n            debit: \"R$ 266,40/mês\",\n            billet: \"R$ 266,40/mês\",\n            pix: \"R$ 266,40/mês\",\n            creditCard: \"R$ 0,00/mês\",\n          },\n        },\n        4: {\n          total: { biggest: 4262.4, debit: 4262.4, billet: 4262.4, pix: 4262.4, creditCard: 0 },\n          forShow: {\n            biggest: \"R$ 355,20/mês\",\n            debit: \"R$ 355,20/mês\",\n            billet: \"R$ 355,20/mês\",\n            pix: \"R$ 355,20/mês\",\n            creditCard: \"R$ 0,00/mês\",\n          },\n        },\n        5: {\n          total: { biggest: 5328, debit: 5328, billet: 5328, pix: 5328, creditCard: 0 },\n          forShow: {\n            biggest: \"R$ 444,00/mês\",\n            debit: \"R$ 444,00/mês\",\n            billet: \"R$ 444,00/mês\",\n            pix: \"R$ 444,00/mês\",\n            creditCard: \"R$ 0,00/mês\",\n          },\n        },\n      },\n    },\n    {\n      id: 666,\n      name: \"Total Doc\",\n      fidelity: \"Mensal\",\n      type: \"Odonto\",\n      personType: \"Física\",\n      optionals: [\n        { id: 629, name: \"Manutenção e apoio diagnóstico\" },\n        { id: 630, name: \"Os mais modernos Exames ortodônticos\" },\n        { id: 628, name: \"Cobertura ampliada + Documentação\" },\n        { id: 793, name: \"Restaurações\" },\n        { id: 794, name: \"Radiografias\" },\n        { id: 795, name: \"Limpezas preventivas\" },\n        { id: 796, name: \"Tratamento de canal dentário\" },\n        { id: 797, name: \"Prótese simples unitárias\" },\n        { id: 798, name: \"Tratamento gengival\" },\n        { id: 799, name: \"Cirurgias e extrações\" },\n        { id: 800, name: \"Biópsias de boca\" },\n        { id: 801, name: \"Prótese simples unitárias\" },\n        { id: 802, name: \"Urgência e emergências 24h\" },\n        { id: 803, name: \"Clareamento unitário de dente desvitalizado\" },\n        { id: 805, name: \"Tratamento ortodôntico\" },\n      ],\n      prices: {\n        1: {\n          total: { biggest: 56.9, debit: 56.9, billet: 56.9, pix: 56.9, creditCard: 0 },\n          forShow: {\n            biggest: \"R$ 56,90/mês\",\n            debit: \"R$ 56,90/mês\",\n            billet: \"R$ 56,90/mês\",\n            pix: \"R$ 56,90/mês\",\n            creditCard: \"R$ 0,00/mês\",\n          },\n        },\n        2: {\n          total: { biggest: 102.38, debit: 102.38, billet: 102.38, pix: 102.38, creditCard: 0 },\n          forShow: {\n            biggest: \"R$ 102,38/mês\",\n            debit: \"R$ 102,38/mês\",\n            billet: \"R$ 102,38/mês\",\n            pix: \"R$ 102,38/mês\",\n            creditCard: \"R$ 0,00/mês\",\n          },\n        },\n        3: {\n          total: { biggest: 133.05, debit: 133.05, billet: 133.05, pix: 133.05, creditCard: 0 },\n          forShow: {\n            biggest: \"R$ 133,05/mês\",\n            debit: \"R$ 133,05/mês\",\n            billet: \"R$ 133,05/mês\",\n            pix: \"R$ 133,05/mês\",\n            creditCard: \"R$ 0,00/mês\",\n          },\n        },\n        4: {\n          total: { biggest: 177.4, debit: 177.4, billet: 177.4, pix: 177.4, creditCard: 0 },\n          forShow: {\n            biggest: \"R$ 177,40/mês\",\n            debit: \"R$ 177,40/mês\",\n            billet: \"R$ 177,40/mês\",\n            pix: \"R$ 177,40/mês\",\n            creditCard: \"R$ 0,00/mês\",\n          },\n        },\n        5: {\n          total: { biggest: 221.75, debit: 221.75, billet: 221.75, pix: 221.75, creditCard: 0 },\n          forShow: {\n            biggest: \"R$ 221,75/mês\",\n            debit: \"R$ 221,75/mês\",\n            billet: \"R$ 221,75/mês\",\n            pix: \"R$ 221,75/mês\",\n            creditCard: \"R$ 0,00/mês\",\n          },\n        },\n      },\n    },\n    {\n      id: 597,\n      name: \"Total Orto\",\n      fidelity: \"Mensal\",\n      type: \"Odonto\",\n      personType: \"Física\",\n      optionals: [\n        { id: 633, name: \"Cobertura ampliada + Documentação + ortodontia\" },\n        { id: 500, name: \"Manutenção da saúde bucal\" },\n        { id: 634, name: \"Manutenção e tratamento ortodôntico completo\" },\n        { id: 793, name: \"Restaurações\" },\n        { id: 794, name: \"Radiografias\" },\n        { id: 795, name: \"Limpezas preventivas\" },\n        { id: 796, name: \"Tratamento de canal dentário\" },\n        { id: 797, name: \"Prótese simples unitárias\" },\n        { id: 798, name: \"Tratamento gengival\" },\n        { id: 799, name: \"Cirurgias e extrações\" },\n        { id: 800, name: \"Biópsias de boca\" },\n        { id: 801, name: \"Prótese simples unitárias\" },\n        { id: 802, name: \"Urgência e emergências 24h\" },\n        { id: 803, name: \"Clareamento unitário de dente desvitalizado\" },\n        { id: 804, name: \"Clareamento Convencional (gel + moldeiras)\" },\n        { id: 805, name: \"Tratamento ortodôntico\" },\n        { id: 806, name: \"Documentação e radiografias\" },\n        { id: 807, name: \"Instalação de aparelho fixo metálico\" },\n        { id: 808, name: \"Manutenção mensal de aparelho fixo\" },\n      ],\n      prices: {\n        1: {\n          total: { biggest: 147.9, debit: 147.9, billet: 147.9, pix: 147.9, creditCard: 0 },\n          forShow: {\n            biggest: \"R$ 147,90/mês\",\n            debit: \"R$ 147,90/mês\",\n            billet: \"R$ 147,90/mês\",\n            pix: \"R$ 147,90/mês\",\n            creditCard: \"R$ 0,00/mês\",\n          },\n        },\n        2: {\n          total: { biggest: 266.18, debit: 266.18, billet: 266.18, pix: 266.18, creditCard: 0 },\n          forShow: {\n            biggest: \"R$ 266,18/mês\",\n            debit: \"R$ 266,18/mês\",\n            billet: \"R$ 266,18/mês\",\n            pix: \"R$ 266,18/mês\",\n            creditCard: \"R$ 0,00/mês\",\n          },\n        },\n        3: {\n          total: { biggest: 348.06, debit: 348.06, billet: 348.06, pix: 348.06, creditCard: 0 },\n          forShow: {\n            biggest: \"R$ 348,06/mês\",\n            debit: \"R$ 348,06/mês\",\n            billet: \"R$ 348,06/mês\",\n            pix: \"R$ 348,06/mês\",\n            creditCard: \"R$ 0,00/mês\",\n          },\n        },\n        4: {\n          total: { biggest: 464.08, debit: 464.08, billet: 464.08, pix: 464.08, creditCard: 0 },\n          forShow: {\n            biggest: \"R$ 464,08/mês\",\n            debit: \"R$ 464,08/mês\",\n            billet: \"R$ 464,08/mês\",\n            pix: \"R$ 464,08/mês\",\n            creditCard: \"R$ 0,00/mês\",\n          },\n        },\n        5: {\n          total: { biggest: 580.1, debit: 580.1, billet: 580.1, pix: 580.1, creditCard: 0 },\n          forShow: {\n            biggest: \"R$ 580,10/mês\",\n            debit: \"R$ 580,10/mês\",\n            billet: \"R$ 580,10/mês\",\n            pix: \"R$ 580,10/mês\",\n            creditCard: \"R$ 0,00/mês\",\n          },\n        },\n      },\n    },\n  ];\n\n  return JSON.stringify(dataToReurn);\n}\n",
            "inputVariables": ["responseApiGetPlans"],
            "outputVariable": "formatPlansDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "1b79df4c-14ec-4579-820f-2791ee300d33",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - mountPlansDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(filteredPlansData, resourcePlansData, resourcePlanTextData) {\n  try {\n    filteredPlansData = JSON.parse(filteredPlansData);\n    resourcePlansData = JSON.parse(resourcePlansData);\n\n    const { planData, textData } = JSON.parse(resourcePlanTextData);\n\n    const mountedAllPlansData = Object.values(resourcePlansData).reduce((acc, everyPlanData, index) => {\n      const { planName, fidelity, optionalsData, extras, customAfterPriceText, footerMsg } = everyPlanData;\n      const { principalOptionalsIds } = optionalsData;\n\n      const specificPlanId = planData[planName][fidelity];\n\n      const getSpecificPlanData = filteredPlansData.find((everyPlan) => everyPlan.id == specificPlanId);\n\n      const optionalFormatted = getOnlyArrayNameProperty(getSpecificPlanData.optionals);\n\n      const getPrincipalOptionsData = mountPrincipalOptionsId(\n        getSpecificPlanData.optionals,\n        principalOptionalsIds\n      );\n\n      const checkedFooterMsg = textData.footerMsg[footerMsg] || \"\";\n\n      const checkedLackText = textData.lack[fidelity] || \"\";\n\n      const checkedSpecificLackText = textData.specificLack[fidelity] || \"\";\n\n      const allPlanData = {\n        ...getSpecificPlanData,\n        optionalInText: optionalFormatted,\n        principalOptionalData: getPrincipalOptionsData,\n        extras,\n        customAfterPriceText,\n        lackText: checkedLackText,\n        specificLack: checkedSpecificLackText,\n        footerMsg: checkedFooterMsg,\n      };\n      acc[getSpecificPlanData.id] = allPlanData;\n      return acc;\n    }, {});\n\n    return mountedAllPlansData;\n  } catch (e) {\n    return { itBroked: true, brokenMsg: e.message };\n  }\n}\n\nfunction mountPrincipalOptionsId(specificPlanOptionalData, principalOptionalId) {\n  const getOnlyPrincipalOptionId = specificPlanOptionalData.filter((everyOptionalData) =>\n    principalOptionalId.includes(everyOptionalData.id)\n  );\n\n  if (getOnlyPrincipalOptionId.length > 0) {\n    const onlyOptionalNames = getOnlyArrayNameProperty(getOnlyPrincipalOptionId);\n    return onlyOptionalNames;\n  }\n  return false;\n}\n\nfunction getOnlyArrayNameProperty(arrayData) {\n  const onlyPropertyName = arrayData.map((everyData) => everyData.name);\n  return onlyPropertyName;\n}",
            "inputVariables": ["formatPlansDataJs", "resource.plansOptionData", "resource.plansMsgData"],
            "outputVariable": "mountPlansDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "3825f1bf-63b6-41b5-9959-5a4e356ac9da",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - menuPlansDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(allPlansData, resourceCompanyData) {\n  try {\n    allPlansData = JSON.parse(allPlansData);\n\n    resourceCompanyData = JSON.parse(resourceCompanyData);\n\n    const allPlansDataInMenu = Object.keys(allPlansData).reduce((acc, everyMenuIndex) => {\n      const specificMenuData = allPlansData[everyMenuIndex];\n      const simplifiedMenuData = mountSimplifiedMenuData(specificMenuData, resourceCompanyData);\n      const completelyMenuData = mountCompletelyMenuData(specificMenuData, resourceCompanyData);\n      acc[specificMenuData.id] = {\n        planId: specificMenuData.id,\n        planName: specificMenuData.name,\n        modality: specificMenuData.fidelity,\n        simplifiedMenuData,\n        completelyMenuData,\n      };\n      return acc;\n    }, {});\n\n    return allPlansDataInMenu;\n  } catch (e) {\n    return { itBroked: true, brokenMsg: e.message };\n  }\n}\n\nfunction mountSimplifiedMenuData(specificMenuData, resourceCompanyData) {\n  const { name, fidelity, prices, principalOptionalData, lackText, footerMsg } = specificMenuData;\n\n  const { emojis } = resourceCompanyData;\n\n  const priceForOnePerson = prices[\"1\"].forShow.biggest;\n\n  const dataForHeaderMsg = [];\n\n  dataForHeaderMsg.push(`{openBold}${resourceCompanyData.name} ${name} - ${fidelity}{closeBold}`);\n  dataForHeaderMsg.push(`Plano ${lackText}`);\n  dataForHeaderMsg.push(\"\");\n  dataForHeaderMsg.push(`{openBold}Por:{closeBold} ${priceForOnePerson}`);\n  dataForHeaderMsg.push(`{openItalic}Desconto progressivo por dependente{closeItalic}`);\n\n  if (principalOptionalData && principalOptionalData.length > 0) {\n    principalOptionalData.forEach((everyOptional) => {\n      dataForHeaderMsg.push(`${emojis.planPlus} ${everyOptional}`);\n    });\n  }\n\n  const formattedHeaderMsg = dataForHeaderMsg.join(\"{lineBreak}\");\n\n  const dataForReturn = {\n    headerMsg: formattedHeaderMsg,\n    footerMsg: footerMsg,\n  };\n\n  return dataForReturn;\n}\n\nfunction mountCompletelyMenuData(specificMenuData, resourceCompanyData) {\n  const { name, fidelity, prices, optionalInText, lackText, specificLack, footerMsg } = specificMenuData;\n\n  const { emojis } = resourceCompanyData;\n\n  const dataForHeaderMsg = [];\n\n  dataForHeaderMsg.push(`{openBold}Plano ${fidelity} - ${name}{closeBold}`);\n  dataForHeaderMsg.push(\n    `Nesta modalidade a contratação do plano é ${lackText[0].toLowerCase() + lackText.slice(1)}.`\n  );\n  dataForHeaderMsg.push(specificLack);\n  dataForHeaderMsg.push(\"\");\n  dataForHeaderMsg.push(\"Os planos apresentam os seguintes valores por dependente:\");\n\n  Object.keys(prices).forEach((everyPriceData) => {\n    const chekedDependentMsg = everyPriceData == 1 ? \"dependente\" : \"dependentes\";\n    dataForHeaderMsg.push(\n      `${everyPriceData} ${chekedDependentMsg}: ${prices[everyPriceData].forShow.biggest}`\n    );\n  });\n\n  dataForHeaderMsg.push(\"E você tem dieito aos seguintes procedimentos:\");\n\n  if (optionalInText && optionalInText.length > 0) {\n    optionalInText.forEach((everyOptional) => {\n      dataForHeaderMsg.push(`${emojis.planPlus} ${everyOptional}`);\n    });\n  }\n\n  const formattedHeaderMsg = dataForHeaderMsg.join(\"{lineBreak}\");\n\n  const dataForReturn = {\n    headerMsg: formattedHeaderMsg,\n    footerMsg: footerMsg,\n  };\n\n  return dataForReturn;\n}",
            "inputVariables": ["mountPlansDataJs", "resource.companyData"],
            "outputVariable": "menuPlansDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "683f679f-5609-4925-9bd3-cd2aa5ef85be",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - menuAllPlansBuildJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(menuPlansData, userContext, formattedJson, channelJs) {\n  try {\n    menuPlansData = JSON.parse(menuPlansData);\n\n    const { askPlanModality } = JSON.parse(userContext);\n\n    const onlyPlansByModality = Object.values(menuPlansData).filter(\n      (everyPlanData) => everyPlanData.modality == askPlanModality\n    );\n\n    const allPlansData = onlyPlansByModality.reduce((acc, everyPlanData, index) => {\n      const { planId, planName, simplifiedMenuData, completelyMenuData } = everyPlanData;\n\n      if (channelJs == \"blip\") {\n        const mountedSimplifiedMenuData = turnInBlipMenuDataSimplified(simplifiedMenuData, planName, planId);\n        const mountedCompletelyMenuData = turnInMenuDataCompletely(completelyMenuData, planName, planId);\n        acc[planId] = {\n          simplifiedMenu: mountedSimplifiedMenuData,\n          completelyMenu: mountedCompletelyMenuData,\n        };\n      }\n\n      if (channelJs != \"blip\") {\n        const mountedSimplifiedMenuData = turnDataInWppMenuSimplified(simplifiedMenuData, planName, planId);\n        const mountedCompletelyMenuData = turnInMenuDataCompletely(completelyMenuData, planName, planId);\n        acc[planId] = {\n          simplifiedMenu: mountedSimplifiedMenuData,\n          completelyMenu: mountedCompletelyMenuData,\n        };\n      }\n\n      return acc;\n    }, {});\n\n    const formattedPlansData = formattedMsg(JSON.stringify(allPlansData), formattedJson);\n\n    return formattedPlansData;\n  } catch (e) {\n    return { itBroked: true, brokenMsg: e.message };\n  }\n}\n\nfunction turnDataInWppMenuSimplified(specificMenuData, planName, menuId) {\n  const { headerMsg, footerMsg } = specificMenuData;\n\n  const menuPattern = {\n    recipient_type: \"individual\",\n    type: \"interactive\",\n    interactive: {\n      type: \"button\",\n      body: {\n        text: headerMsg,\n      },\n      footer: {\n        text: footerMsg,\n      },\n      action: {\n        buttons: [\n          {\n            type: \"reply\",\n            reply: {\n              id: `buy-${menuId}`,\n              title: `Assinar ${planName}`,\n            },\n          },\n          {\n            type: \"reply\",\n            reply: {\n              id: `seeMore-${menuId}`,\n              title: \"Mais detalhes\",\n            },\n          },\n        ],\n      },\n    },\n  };\n\n  const dataForShowMenu = { type: \"application/json\", content: menuPattern };\n  return dataForShowMenu;\n}\nfunction turnInMenuDataCompletely(specificMenuData) {\n  const { headerMsg, footerMsg } = specificMenuData;\n\n  const menuPattern = {\n    headerMsg,\n    menuType: \"menu\",\n    footerMsg,\n    allMenuOptions: [\n      {\n        sectionTitle: \"\",\n        allSectionOptions: [\n          {\n            title: \"Assinar\",\n            description: \"\",\n            identifier: \"{{nextStepJs}}\",\n            active: true,\n            extras: { ignoreUserContextRegister: true, stepForTurnTrue: [\"logicUpdatePlanAfterSeeMore\"], },\n          },\n          {\n            title: \"Ver todos os planos\",\n            description: \"\",\n            identifier: \"goBack\",\n            active: true,\n            extras: {\n              ignoreUserContextRegister: true,\n              stepForTurnTrue: [\"askPlans\"],\n              stepForTurnFalse: [\"askWantPlanAfterSeeMore\"],\n            },\n          },\n        ],\n      },\n    ],\n  };\n\n  return menuPattern;\n}\n\nfunction turnInBlipMenuDataSimplified(specificMenuData, planName, menuId) {\n  const { headerMsg, footerMsg } = specificMenuData;\n\n  const menuPattern = {\n    text: `${headerMsg}{lineBreak}${footerMsg}`,\n    options: [\n      {\n        text: `Assinar ${planName}`,\n        previewText: `Assinar ${planName}`,\n        value: `buy-${menuId}`,\n        index: `buy-${menuId}`,\n        type: \"plain/text\",\n      },\n      {\n        text: \"Mais detalhes\",\n        previewText: \"Mais detalhes\",\n        value: `seeMore-${menuId}`,\n        index: `seeMore-${menuId}`,\n        type: \"plain/text\",\n      },\n    ],\n    limitMenu: false,\n  };\n\n  const dataForShowMenu = { type: \"application/vnd.lime.select+json\", content: menuPattern };\n  return dataForShowMenu;\n}\n\nfunction formattedMsg(message, formatterJson) {\n  try {\n    formatterJson = JSON.parse(formatterJson);\n    const { identifiers } = formatterJson;\n\n    formatterJson.lineBreak = formatterJson.lineBreakByObject;\n\n    let formattedMsg = message;\n    for (let everyFormatter in identifiers) {\n      formattedMsg = formattedMsg.replace(\n        new RegExp(identifiers[everyFormatter], \"g\"),\n        formatterJson[everyFormatter]\n      );\n    }\n    return formattedMsg;\n  } catch (e) {\n    return message;\n  }\n}",
            "inputVariables": ["menuPlansDataJs", "userContextJs", "formatterJson", "channelJs"],
            "outputVariable": "menuAllPlansBuildJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": { "stateId": "fallback", "$invalid": false },
      "isAiGenerated": false,
      "$tags": [
        {
          "id": "blip-tag-4dd178a3-53d3-4acd-b6e0-7502441aa042",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        }
      ],
      "id": "9f8a5e23-3b48-4dbf-b1fc-08383c699629",
      "root": false,
      "$title": "mountDataForBot - apiGetPlans",
      "$position": { "top": "5133.25px", "left": "5855.75px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false
    },
    "d8545994-0bcb-4f8c-9f0f-af2c0e9ea46f": {
      "$contentActions": [
        {
          "action": {
            "$id": "35e85a9b-a7cc-4416-85de-0e53b9bade83",
            "$typeOfContent": "text",
            "type": "SendMessage",
            "settings": {
              "id": "aa5f3159-4dde-4461-b4a5-1a940905b738",
              "type": "text/plain",
              "content": "{{apiPostCreateUtmDebugJs}}",
              "metadata": {}
            },
            "$cardContent": {
              "document": {
                "id": "aa5f3159-4dde-4461-b4a5-1a940905b738",
                "type": "text/plain",
                "content": "{{apiPostCreateUtmDebugJs}}"
              },
              "editable": true,
              "deletable": true,
              "position": "left"
            }
          },
          "$invalid": false
        },
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "94917dfa-b301-4790-a145-38126a4c991e",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [
        {
          "stateId": "a98134bb-8a9b-4998-be01-d669ca4ef41b",
          "typeOfStateId": "state",
          "$connId": "con_283",
          "$id": "dafa130b-e006-42d6-ae8b-3efa59ed124a",
          "conditions": [{ "source": "input", "comparison": "exists", "values": [] }],
          "$invalid": false
        }
      ],
      "$enteringCustomActions": [
        {
          "$id": "ff8436aa-c61a-4e19-bf69-4a1a91a3ab6a",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - apiPostCreateUtmDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(stateName) {\n  const requestContentTypeAndAccept = \"application/json\";\n\n  const formattedStateName = stateName[0].toUpperCase() + stateName.slice(1);\n\n  const allRequestData = {\n    contentType: requestContentTypeAndAccept,\n    accept: requestContentTypeAndAccept,\n    formattedStateName,\n  };\n\n  try {\n    allRequestData.urlRequest = \"{{apiDataJs@url}}/utms\";\n\n    allRequestData.body = {\n      source: \"{{utmsDataJs@source}}\",\n      medium: \"{{utmsDataJs@medium}}\",\n      campaign: \"ChatWhatsApp\",\n      term: null,\n      content: \"{{utmsDataJs@source}}\",\n      gclid: null,\n      fbc: null,\n      pinid: null,\n    };\n  } catch (e) {\n    allRequestData.error = true;\n  }\n\n  return allRequestData;\n}\n",
            "inputVariables": ["state.name"],
            "outputVariable": "apiPostCreateUtmDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "72b631b1-03ff-445a-bb24-90cc25706aca",
          "$typeOfContent": "",
          "type": "ProcessHttp",
          "$title": "Process http - apiPostCreateUtm",
          "$invalid": false,
          "settings": {
            "headers": {
              "Content-Type": "{{apiPostCreateUtmDataJs@contentType}}",
              "Accept": "{{apiPostCreateUtmDataJs@accept}}"
            },
            "method": "POST",
            "uri": "{{apiPostCreateUtmDataJs@urlRequest}}",
            "responseStatusVariable": "statusApiPostCreateUtm",
            "responseBodyVariable": "responseApiPostCreateUtm",
            "body": "{{apiPostCreateUtmDataJs@body}}"
          },
          "conditions": []
        },
        {
          "$id": "f3a4a792-7dc7-46f5-83b7-31941c4d7ccf",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - apiPostCreateUtmValidatedJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(responseApi) {\n  try {\n    const dataWhoNeedExistInFirstObjectLvl = [\"id\"];\n\n    const checkedApiData = responseApi ? JSON.parse(responseApi) : {};\n\n    const hasAllDataInApi = dataWhoNeedExistInFirstObjectLvl.find(\n      (everyDataWhoNeedExist) => !checkedApiData[everyDataWhoNeedExist]\n    );\n\n    if (hasAllDataInApi) {\n      throw \"Data has not whats need in api\";\n    }\n\n    return { message: \"OK\" };\n  } catch (e) {\n    return { itBroked: true, message: e.message };\n  }\n}",
            "inputVariables": ["responseApiPostCreateUtm"],
            "outputVariable": "apiPostCreateUtmValidatedJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "73067e39-5e78-4ab9-af0f-e188814c89f7",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - apiPostCreateUtmDebugJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(debugJs, formatterJson, apiData, status, response, apiValidation) {\r\n  try {\r\n    const debugMsg = [];\r\n\r\n    debugJs = JSON.parse(debugJs);\r\n\r\n    const { urlRequest, formattedStateName, body } = JSON.parse(apiData);\r\n    const bodyStringfied = formatBodyData(body);\r\n\r\n    const validationMessage = JSON.parse(apiValidation).message\r\n\r\n    if (debugJs) {\r\n      debugMsg.push(`{openBold}${formattedStateName} - ${validationMessage}{closeBold}`);\r\n      debugMsg.push(\"\");\r\n      debugMsg.push(`{openBold}url:{closeBold} ${urlRequest}`);\r\n      debugMsg.push(`{openBold}status${formattedStateName}:{closeBold} ${status}`);\r\n\r\n      if (bodyStringfied) {\r\n        debugMsg.push(\"\");\r\n        debugMsg.push(`{openBold}body:{closeBold} ${bodyStringfied}`);\r\n      }\r\n      debugMsg.push(\"\");\r\n      debugMsg.push(`{openBold}response${formattedStateName}:{closeBold} ${response}`);\r\n    }\r\n\r\n    const mountedDebugMsg = debugMsg.join(\"{lineBreak}\");\r\n\r\n    return formattedMsg(mountedDebugMsg, formatterJson);\r\n  } catch (e) {\r\n    return e;\r\n    return \"\";\r\n  }\r\n}\r\n\r\nfunction formattedMsg(message, formatterJson) {\r\n  try {\r\n    formatterJson = JSON.parse(formatterJson);\r\n    const { identifiers } = formatterJson;\r\n    let formattedMsg = message;\r\n    for (let everyFormatter in identifiers) {\r\n      formattedMsg = formattedMsg.replace(\r\n        new RegExp(identifiers[everyFormatter], \"g\"),\r\n        formatterJson[everyFormatter]\r\n      );\r\n    }\r\n    return formattedMsg;\r\n  } catch (e) {\r\n    return message;\r\n  }\r\n}\r\n\r\nfunction formatBodyData(body) {\r\n  if (body == null || body == undefined || body == \"\") {\r\n    return false;\r\n  }\r\n  return JSON.stringify(body);\r\n}",
            "inputVariables": [
              "debugJs",
              "formatterJson",
              "apiPostCreateUtmDataJs",
              "statusApiPostCreateUtm",
              "responseApiPostCreateUtm",
              "apiPostCreateUtmValidatedJs"
            ],
            "outputVariable": "apiPostCreateUtmDebugJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": [],
          "continueOnError": true
        },
        {
          "$id": "3ffc3a91-a99e-41f2-896a-cd8c413e32db",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - allRequestsDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(allRequestsData, stateName, status, response) {\n\tallRequestsData = JSON.parse(allRequestsData)\n\ttry {\n\t\tallRequestsData[stateName] = { status: status, response: response }\n\t} catch (e) {\n\t}\n\treturn allRequestsData\n}\n",
            "inputVariables": [
              "allRequestsDataJs",
              "state.name",
              "statusApiPostCreateUtm",
              "responseApiPostCreateUtm"
            ],
            "outputVariable": "allRequestsDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": { "stateId": "fallback", "$invalid": false },
      "$tags": [
        {
          "id": "blip-tag-7db5d3ad-39eb-43ac-839b-251ddd33959c",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        },
        {
          "id": "blip-tag-1022365b-65f0-4995-8e1b-9ad9f3b574cc",
          "label": "ProcessHttp",
          "background": "#7762E3",
          "canChangeBackground": false
        },
        {
          "id": "blip-tag-b5a2cccf-dea0-42b3-a0e4-a00625ca02a7",
          "label": "SendMessage",
          "background": "#EE82EE",
          "canChangeBackground": false
        }
      ],
      "id": "d8545994-0bcb-4f8c-9f0f-af2c0e9ea46f",
      "root": false,
      "$title": "apiPostCreateUtm",
      "$position": { "top": "2089px", "left": "2070px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false,
      "isAiGenerated": false
    },
    "3bacdefe-0c02-4830-b3fe-8c202a36f001": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "bd5c8d35-55a4-4c36-9019-aa54bd34b217",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [],
      "$enteringCustomActions": [
        {
          "$id": "4ca20277-aee4-455d-a578-83c18a74ff94",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - askBusinessEmailDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run() {\r\n  try {\r\n\r\n    const dataMenu = {\r\n      headerMsg:\r\n        \"Informe o {openBold}email{closeBold} da empresa.{lineBreak}{lineBreak}({openBold}Exemplo{closeBold}: email@email.com.br)\",\r\n      menuType: \"text\",\r\n      descriptionButtonName: \"\",\r\n      menuWithFreeInput: [\r\n        {\r\n          needRegexValidation: true,\r\n          identifier: \"{{nextStepJs}}\",\r\n        },\r\n      ]\r\n    };\r\n\r\n\r\n    return dataMenu\r\n  } catch (e) {\r\n    return { itBroked: true, brokenMsg: e.message };\r\n  }\r\n}",
            "inputVariables": [],
            "outputVariable": "askBusinessEmailDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "f43e668e-47fb-4960-a00c-9a229159a3e7",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - currentMenuDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "{{resource.function_currentMenuData}}",
            "inputVariables": ["askBusinessEmailDataJs"],
            "outputVariable": "currentMenuDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": {
        "stateId": "bb93536d-668f-4683-95bd-ea547d6051bd",
        "$invalid": false,
        "typeOfStateId": "state"
      },
      "$tags": [
        {
          "id": "blip-tag-a0348514-3344-4113-9de9-6a0d1a09ebca",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        }
      ],
      "id": "3bacdefe-0c02-4830-b3fe-8c202a36f001",
      "root": false,
      "$title": "askBusinessEmail",
      "$position": { "top": "7182px", "left": "1083px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false,
      "invalidOutputs": true,
      "isAiGenerated": false
    },
    "6495ad6d-b497-488e-91ad-4b1be9da4c36": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "bd5c8d35-55a4-4c36-9019-aa54bd34b217",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [],
      "$enteringCustomActions": [
        {
          "$id": "4ca20277-aee4-455d-a578-83c18a74ff94",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - askBusinessOwnerNameDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run() {\r\n  try {\r\n\r\n    const dataMenu = {\r\n      headerMsg:\r\n        \"Informe o {openBold}nome completo{closeBold} do {openBold}representante legal{closeBold} da empresa.\",\r\n      menuType: \"text\",\r\n      descriptionButtonName: \"\",\r\n      menuWithFreeInput: [\r\n        {\r\n          needRegexValidation: true,\r\n          identifier: \"{{nextStepJs}}\",\r\n        },\r\n      ]\r\n    };\r\n\r\n\r\n    return dataMenu\r\n  } catch (e) {\r\n    return { itBroked: true, brokenMsg: e.message };\r\n  }\r\n}",
            "inputVariables": [],
            "outputVariable": "askBusinessOwnerNameDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "a1d69f5a-08a9-4667-982d-d8414484079f",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - currentMenuDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "{{resource.function_currentMenuData}}",
            "inputVariables": ["askBusinessOwnerNameDataJs"],
            "outputVariable": "currentMenuDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": {
        "stateId": "bb93536d-668f-4683-95bd-ea547d6051bd",
        "$invalid": false,
        "typeOfStateId": "state"
      },
      "$tags": [
        {
          "id": "blip-tag-b7951fdd-3c0e-4d2d-883d-ec17275cf690",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        }
      ],
      "id": "6495ad6d-b497-488e-91ad-4b1be9da4c36",
      "root": false,
      "$title": "askBusinessOwnerName",
      "$position": { "top": "7166px", "left": "880px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false,
      "invalidOutputs": true,
      "isAiGenerated": false
    },
    "be8edb98-6904-49b4-a0a7-fbbff5fe5928": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "60fac587-6a50-4269-aa7a-269c4ad4eb1c",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [
        {
          "stateId": "88e36bb9-657a-4df6-8aee-32720d3706e2",
          "typeOfStateId": "state",
          "$connId": "con_288",
          "$id": "7c4c6c1e-efb1-440c-8ebb-946b4b63fd4f",
          "conditions": [{ "source": "input", "comparison": "exists", "values": [] }],
          "$invalid": false
        }
      ],
      "$enteringCustomActions": [
        {
          "$id": "a289f9e3-bb04-43f0-8709-bbf3a1abeba1",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - userContextJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(userContext, responseCreateUtm, responseCreateLead) {\n  try {\n    userContext = JSON.parse(userContext);\n\n    const checkedCreateUtm = tryParseData(responseCreateUtm);\n\n    if (checkedCreateUtm.isAnObject) {\n      const { id } = checkedCreateUtm.data;\n\n      userContext.utmId = id || null;\n    }\n\n    const checkedCreateLead = tryParseData(responseCreateLead);\n\n    if (checkedCreateLead.isAnObject) {\n      const { uuid } = checkedCreateLead.data.lead;\n\n      userContext.leadUuId = uuid || null;\n    }\n  } catch (e) {}\n  return userContext;\n}\n\nfunction tryParseData(data) {\n  try {\n    data = JSON.parse(data);\n    return { isAnObject: true, data };\n  } catch (e) {\n    return { isAnObject: false };\n  }\n}",
            "inputVariables": ["userContextJs", "responseApiPostCreateUtm", "responseApiPostCreateLead"],
            "outputVariable": "userContextJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": { "stateId": "fallback", "$invalid": false },
      "isAiGenerated": false,
      "$tags": [
        {
          "id": "blip-tag-b77b6826-4479-442e-8c9d-cf19fe6de7a1",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        }
      ],
      "id": "be8edb98-6904-49b4-a0a7-fbbff5fe5928",
      "root": false,
      "$title": "updateUserContext",
      "$position": { "top": "2090.38px", "left": "2493.85px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false
    },
    "e19cebe8-e718-45a1-b09d-7389133c8e4a": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "1e299b87-dbd0-494c-8b59-da3f9a056239",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [
        {
          "stateId": "13cb82b3-1bca-4bfa-a146-68dd400877f9",
          "typeOfStateId": "state",
          "$connId": "con_293",
          "$id": "b6636a69-6ed2-4379-9744-87afad6ac8cb",
          "conditions": [
            {
              "source": "context",
              "comparison": "notExists",
              "values": [],
              "variable": "getDataForUpdateUserContextJs@itBroked"
            }
          ],
          "$invalid": false
        }
      ],
      "$enteringCustomActions": [
        {
          "$id": "4776b348-ec48-4c67-a8ea-8e262929fca9",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - getDataForUpdateUserContextJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(responseApi) {\n\ttry {\n\t\tconst { order_uuid, order_id } = JSON.parse(responseApi).data\n\n\t\tconst dataToReturn = { orderUuid: order_uuid, orderId: order_id }\n\n\t\treturn dataToReturn;\n\t} catch (e) {\n\t\treturn { itBroked: true, message: e.message };\n\t}\n}\n",
            "inputVariables": ["responseApiPostCheckoutPersonalAndPlan"],
            "outputVariable": "getDataForUpdateUserContextJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": {
        "stateId": "37f6ea15-cf65-4884-b3f8-d59043fcf767",
        "$invalid": false,
        "typeOfStateId": "state"
      },
      "isAiGenerated": false,
      "$tags": [
        {
          "id": "blip-tag-d5de1386-2a91-4278-9dcf-4cf599d016ff",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        }
      ],
      "id": "e19cebe8-e718-45a1-b09d-7389133c8e4a",
      "root": false,
      "$title": "saveData - apiPostCheckoutPersonalAndPlan",
      "$position": { "top": "6311.25px", "left": "6280px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false
    },
    "b240454f-faa6-4df4-8344-4e2a3862c0d7": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "1e299b87-dbd0-494c-8b59-da3f9a056239",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [
        {
          "stateId": "00ce0c70-0c6a-4ae7-94c5-4e73c804ad24",
          "typeOfStateId": "state",
          "$connId": "con_298",
          "$id": "4a478131-bab4-4b14-9d22-76c2e7f98982",
          "conditions": [
            {
              "source": "context",
              "comparison": "notExists",
              "values": [],
              "variable": "apiPostCheckoutPersonalAndPlanDataJs@itBroked"
            }
          ],
          "$invalid": false
        }
      ],
      "$enteringCustomActions": [
        {
          "$id": "4234814d-7219-44b2-a87d-06e6465df9f9",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - apiPostCheckoutPersonalAndPlanDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(stateName, userContext) {\n  const requestContentTypeAndAccept = \"application/json\";\n\n  const formattedStateName = stateName[0].toUpperCase() + stateName.slice(1);\n\n  const allRequestData = {\n    contentType: requestContentTypeAndAccept,\n    accept: requestContentTypeAndAccept,\n    formattedStateName,\n  };\n\n  try {\n    allRequestData.urlRequest =\n      \"https://microcheckout.m2digital.com.br/api/checkout/universal/personal_information_step\";\n\n    const {\n      idOriginSite,\n      siteId,\n      siteName,\n      utmId,\n      leadUuId,\n      askBusinessOwnerName,\n      askBusinessPhone,\n      askBusinessEmail,\n      askBusinessCNPJ,\n      askBusinessCPF,\n      askBusinessRG,\n      askPlans,\n    } = JSON.parse(userContext);\n\n    const { planData, allProductsData } = askPlans;\n\n    const { biggestPrice } = planData;\n\n    const mountedBodyData = {\n      client: {\n        has_agreed_to_receive_info: true,\n        full_name: askBusinessOwnerName,\n        // document_number:askBusinessCNPJ,\n        cell_phone: askBusinessPhone,\n        cell_phone_is_whatsapp: true,\n        email: askBusinessEmail,\n        person_type: true,\n        personal_documents: [\n          {\n            type: \"cnpj\",\n            number: askBusinessCNPJ,\n            is_principal: true,\n          },\n          {\n            type: \"cpf\",\n            number: askBusinessCPF,\n            is_principal: false,\n          },\n          {\n            type: \"rg\",\n            number: askBusinessRG,\n            is_principal: false,\n          },\n        ],\n      },\n      site_id: siteId,\n      price_total: biggestPrice,\n      price_subtotal: biggestPrice,\n      lead: leadUuId,\n      site_name: siteName,\n      products: allProductsData,\n      utms: {\n        id: utmId,\n        utm_tracking_id: idOriginSite,\n      },\n      addresses: null,\n    };\n\n    allRequestData.body = mountedBodyData;\n  } catch (e) {\n    allRequestData.error = true;\n  }\n\n  return allRequestData;\n}",
            "inputVariables": ["state.name", "userContextJs"],
            "outputVariable": "apiPostCheckoutPersonalAndPlanDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": {
        "stateId": "37f6ea15-cf65-4884-b3f8-d59043fcf767",
        "$invalid": false,
        "typeOfStateId": "state"
      },
      "isAiGenerated": false,
      "$tags": [
        {
          "id": "blip-tag-d6d49fc1-aa27-4faa-9f4a-3542418c293a",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        }
      ],
      "id": "b240454f-faa6-4df4-8344-4e2a3862c0d7",
      "root": false,
      "$title": "mountRequest - apiPostCheckoutPersonalAndPlan",
      "$position": { "top": "6268.25px", "left": "5857px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false
    },
    "00ce0c70-0c6a-4ae7-94c5-4e73c804ad24": {
      "$contentActions": [
        {
          "action": {
            "$id": "ca3b4203-6275-414b-8d10-9fb338c49096",
            "$typeOfContent": "text",
            "type": "SendMessage",
            "settings": {
              "id": "3d109b11-2942-47b3-9983-25fa1b5fdea3",
              "type": "text/plain",
              "content": "{{apiPostCheckoutPersonalAndPlanDebugJs}}",
              "metadata": {}
            },
            "$cardContent": {
              "document": {
                "id": "3d109b11-2942-47b3-9983-25fa1b5fdea3",
                "type": "text/plain",
                "content": "{{apiPostCheckoutPersonalAndPlanDebugJs}}"
              },
              "editable": true,
              "deletable": true,
              "position": "left"
            }
          },
          "$invalid": false
        },
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "1e299b87-dbd0-494c-8b59-da3f9a056239",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [
        {
          "stateId": "e19cebe8-e718-45a1-b09d-7389133c8e4a",
          "typeOfStateId": "state",
          "$connId": "con_303",
          "$id": "58e7e56f-e877-46c2-a425-fbac59f2dd60",
          "conditions": [
            {
              "source": "context",
              "comparison": "notExists",
              "values": [],
              "variable": "apiPostCheckoutPersonalAndPlanValidatedJs@itBroked"
            }
          ],
          "$invalid": false
        }
      ],
      "$enteringCustomActions": [
        {
          "$id": "0aa2854c-e349-4b80-8b11-63f37537560a",
          "$typeOfContent": "",
          "type": "ProcessHttp",
          "$title": "Process http - apiPostCheckoutPersonalAndPlan",
          "$invalid": false,
          "settings": {
            "headers": {
              "Content-Type": "{{apiPostCheckoutPersonalAndPlanDataJs@contentType}}",
              "Accept": "{{apiPostCheckoutPersonalAndPlanDataJs@accept}}"
            },
            "method": "POST",
            "uri": "{{apiPostCheckoutPersonalAndPlanDataJs@urlRequest}}",
            "responseStatusVariable": "statusApiPostCheckoutPersonalAndPlan",
            "responseBodyVariable": "responseApiPostCheckoutPersonalAndPlan",
            "body": "{{apiPostCheckoutPersonalAndPlanDataJs@body}}"
          },
          "conditions": []
        },
        {
          "$id": "6b0452f7-8d61-4675-bc0c-0ef6f977157c",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - apiPostCheckoutPersonalAndPlanValidatedJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(responseApi) {\n  try {\n    return { message: \"OK\" }\n    const dataWhoNeedExistInFirstObjectLvl = [\"city, state\"];\n\n    const checkedApiData = responseApi ? JSON.parse(responseApi) : {};\n\n    const hasAllDataInApi = dataWhoNeedExistInFirstObjectLvl.find(\n      (everyDataWhoNeedExist) => !checkedApiData[everyDataWhoNeedExist]\n    );\n\n    if (hasAllDataInApi) {\n      throw \"Data has not whats need in api\";\n    }\n\n    return { message: \"OK\" }\n  } catch (e) {\n    return { itBroked: true, message: e.message };\n  }\n}",
            "inputVariables": ["responseApiPostCheckoutPersonalAndPlan"],
            "outputVariable": "apiPostCheckoutPersonalAndPlanValidatedJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "dadc8837-c838-4a57-a62c-48c47258180e",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - apiPostCheckoutPersonalAndPlanDebugJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(debugJs, formatterJson, apiData, status, response, apiValidation) {\r\n  try {\r\n    const debugMsg = [];\r\n\r\n    debugJs = JSON.parse(debugJs);\r\n\r\n    const { urlRequest, formattedStateName, body } = JSON.parse(apiData);\r\n    const bodyStringfied = formatBodyData(body);\r\n\r\n    const validationMessage = JSON.parse(apiValidation).message\r\n\r\n    if (debugJs) {\r\n      debugMsg.push(`{openBold}${formattedStateName} - ${validationMessage}{closeBold}`);\r\n      debugMsg.push(\"\");\r\n      debugMsg.push(`{openBold}url:{closeBold} ${urlRequest}`);\r\n      debugMsg.push(`{openBold}status${formattedStateName}:{closeBold} ${status}`);\r\n\r\n      if (bodyStringfied) {\r\n        debugMsg.push(\"\");\r\n        debugMsg.push(`{openBold}body:{closeBold} ${bodyStringfied}`);\r\n      }\r\n      debugMsg.push(\"\");\r\n      debugMsg.push(`{openBold}response${formattedStateName}:{closeBold} ${response}`);\r\n    }\r\n\r\n    const mountedDebugMsg = debugMsg.join(\"{lineBreak}\");\r\n\r\n    return formattedMsg(mountedDebugMsg, formatterJson);\r\n  } catch (e) {\r\n    return e;\r\n    return \"\";\r\n  }\r\n}\r\n\r\nfunction formattedMsg(message, formatterJson) {\r\n  try {\r\n    formatterJson = JSON.parse(formatterJson);\r\n    const { identifiers } = formatterJson;\r\n    let formattedMsg = message;\r\n    for (let everyFormatter in identifiers) {\r\n      formattedMsg = formattedMsg.replace(\r\n        new RegExp(identifiers[everyFormatter], \"g\"),\r\n        formatterJson[everyFormatter]\r\n      );\r\n    }\r\n    return formattedMsg;\r\n  } catch (e) {\r\n    return message;\r\n  }\r\n}\r\n\r\nfunction formatBodyData(body) {\r\n  if (body == null || body == undefined || body == \"\") {\r\n    return false;\r\n  }\r\n  return JSON.stringify(body);\r\n}",
            "inputVariables": [
              "debugJs",
              "formatterJson",
              "apiPostCheckoutPersonalAndPlanDataJs",
              "statusApiPostCheckoutPersonalAndPlan",
              "responseApiPostCheckoutPersonalAndPlan",
              "apiPostCheckoutPersonalAndPlanValidatedJs"
            ],
            "outputVariable": "apiPostCheckoutPersonalAndPlanDebugJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": [],
          "continueOnError": true
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": {
        "stateId": "37f6ea15-cf65-4884-b3f8-d59043fcf767",
        "$invalid": false,
        "typeOfStateId": "state"
      },
      "isAiGenerated": false,
      "$tags": [
        {
          "id": "blip-tag-3da6bca0-c0d4-44ff-8e1c-45d028f40cd5",
          "label": "ProcessHttp",
          "background": "#7762E3",
          "canChangeBackground": false
        },
        {
          "id": "blip-tag-4c274684-1446-4dba-8132-77161ad90665",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        },
        {
          "id": "blip-tag-cabfc480-53c1-4e6c-9279-d60b6036695e",
          "label": "SendMessage",
          "background": "#EE82EE",
          "canChangeBackground": false
        }
      ],
      "id": "00ce0c70-0c6a-4ae7-94c5-4e73c804ad24",
      "root": false,
      "$title": "makeRequest - apiPostCheckoutPersonalAndPlan",
      "$position": { "top": "5531px", "left": "6036.5px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false
    },
    "1e043481-4af5-4d03-ba5c-f24e40e39c07": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "1e299b87-dbd0-494c-8b59-da3f9a056239",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [
        {
          "stateId": "6d69a25c-94a6-4e23-a3a1-322f32d37ca7",
          "typeOfStateId": "state",
          "$connId": "con_308",
          "$id": "4a478131-bab4-4b14-9d22-76c2e7f98982",
          "conditions": [
            {
              "source": "context",
              "comparison": "notExists",
              "values": [],
              "variable": "apiPostCheckoutPaymentDataJs@itBroked"
            }
          ],
          "$invalid": false
        }
      ],
      "$enteringCustomActions": [
        {
          "$id": "4234814d-7219-44b2-a87d-06e6465df9f9",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - apiPostCheckoutPaymentDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(stateName, userContext) {\n  const requestContentTypeAndAccept = \"application/json\";\n\n  const formattedStateName = stateName[0].toUpperCase() + stateName.slice(1);\n\n  const allRequestData = {\n    contentType: requestContentTypeAndAccept,\n    accept: requestContentTypeAndAccept,\n    formattedStateName,\n  };\n\n  try {\n    allRequestData.urlRequest =\n      \"https://microcheckout.m2digital.com.br/api/checkout/universal/personal_information_step\";\n\n    const {\n      idOriginSite,\n      siteId,\n      siteName,\n      utmId,\n      leadUuId,\n      askBusinessOwnerName,\n      askBusinessPhone,\n      askBusinessEmail,\n      askBusinessCNPJ,\n      askBusinessCPF,\n      askBusinessRG,\n      askPlans,\n    } = JSON.parse(userContext);\n\n    const { planData, allProductsData } = askPlans;\n\n    const { biggestPrice } = planData;\n\n    const mountedBodyData = {\n      client: {\n        has_agreed_to_receive_info: true,\n        full_name: askBusinessOwnerName,\n        // document_number:askBusinessCNPJ,\n        cell_phone: askBusinessPhone,\n        cell_phone_is_whatsapp: true,\n        email: askBusinessEmail,\n        person_type: true,\n        personal_documents: [\n          {\n            type: \"cnpj\",\n            number: askBusinessCNPJ,\n            is_principal: true,\n          },\n          {\n            type: \"cpf\",\n            number: askBusinessCPF,\n            is_principal: false,\n          },\n          {\n            type: \"rg\",\n            number: askBusinessRG,\n            is_principal: false,\n          },\n        ],\n      },\n      site_id: siteId,\n      price_total: biggestPrice,\n      price_subtotal: biggestPrice,\n      lead: leadUuId,\n      site_name: siteName,\n      products: allProductsData,\n      utms: {\n        id: utmId,\n        utm_tracking_id: idOriginSite,\n      },\n      addresses: null,\n    };\n\n    allRequestData.body = mountedBodyData;\n  } catch (e) {\n    allRequestData.error = true;\n  }\n\n  return allRequestData;\n}",
            "inputVariables": ["state.name", "userContextJs"],
            "outputVariable": "apiPostCheckoutPaymentDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": {
        "stateId": "37f6ea15-cf65-4884-b3f8-d59043fcf767",
        "$invalid": false,
        "typeOfStateId": "state"
      },
      "isAiGenerated": false,
      "$tags": [
        {
          "id": "blip-tag-748f17da-bf7f-45af-a591-b49cb29e4808",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        }
      ],
      "id": "1e043481-4af5-4d03-ba5c-f24e40e39c07",
      "root": false,
      "$title": "mountRequest - apiPostCheckoutPayment",
      "$position": { "top": "6476.25px", "left": "5842px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false
    },
    "6d69a25c-94a6-4e23-a3a1-322f32d37ca7": {
      "$contentActions": [
        {
          "action": {
            "$id": "ca3b4203-6275-414b-8d10-9fb338c49096",
            "$typeOfContent": "text",
            "type": "SendMessage",
            "settings": {
              "id": "3d109b11-2942-47b3-9983-25fa1b5fdea3",
              "type": "text/plain",
              "content": "{{apiPostCheckoutPaymentDebugJs}}",
              "metadata": {}
            },
            "$cardContent": {
              "document": {
                "id": "3d109b11-2942-47b3-9983-25fa1b5fdea3",
                "type": "text/plain",
                "content": "{{apiPostCheckoutPaymentDebugJs}}"
              },
              "editable": true,
              "deletable": true,
              "position": "left"
            }
          },
          "$invalid": false
        },
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "1e299b87-dbd0-494c-8b59-da3f9a056239",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [
        {
          "stateId": "75f448dd-9413-4fb8-94de-608a0ed46e72",
          "typeOfStateId": "state",
          "$connId": "con_313",
          "$id": "58e7e56f-e877-46c2-a425-fbac59f2dd60",
          "conditions": [
            {
              "source": "context",
              "comparison": "notExists",
              "values": [],
              "variable": "apiPostCheckoutPaymentValidatedJs@itBroked"
            }
          ],
          "$invalid": false
        }
      ],
      "$enteringCustomActions": [
        {
          "$id": "0aa2854c-e349-4b80-8b11-63f37537560a",
          "$typeOfContent": "",
          "type": "ProcessHttp",
          "$title": "Process http - apiPostCheckoutPayment",
          "$invalid": false,
          "settings": {
            "headers": {
              "Content-Type": "{{apiPostCheckoutPaymentDataJs@contentType}}",
              "Accept": "{{apiPostCheckoutPaymentDataJs@accept}}"
            },
            "method": "POST",
            "uri": "{{apiPostCheckoutPaymentDataJs@urlRequest}}",
            "responseStatusVariable": "statusApiPostCheckoutPayment",
            "responseBodyVariable": "responseApiPostCheckoutPayment",
            "body": "{{apiPostCheckoutPaymentDataJs@body}}"
          },
          "conditions": []
        },
        {
          "$id": "6b0452f7-8d61-4675-bc0c-0ef6f977157c",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - apiPostCheckoutPaymentValidatedJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(responseApi) {\n  try {\n    return { message: \"OK\" }\n    const dataWhoNeedExistInFirstObjectLvl = [\"city, state\"];\n\n    const checkedApiData = responseApi ? JSON.parse(responseApi) : {};\n\n    const hasAllDataInApi = dataWhoNeedExistInFirstObjectLvl.find(\n      (everyDataWhoNeedExist) => !checkedApiData[everyDataWhoNeedExist]\n    );\n\n    if (hasAllDataInApi) {\n      throw \"Data has not whats need in api\";\n    }\n\n    return { message: \"OK\" }\n  } catch (e) {\n    return { itBroked: true, message: e.message };\n  }\n}",
            "inputVariables": ["responseApiPostCheckoutPayment"],
            "outputVariable": "apiPostCheckoutPaymentValidatedJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "dadc8837-c838-4a57-a62c-48c47258180e",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - apiPostCheckoutPaymentDebugJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(debugJs, formatterJson, apiData, status, response, apiValidation) {\r\n  try {\r\n    const debugMsg = [];\r\n\r\n    debugJs = JSON.parse(debugJs);\r\n\r\n    const { urlRequest, formattedStateName, body } = JSON.parse(apiData);\r\n    const bodyStringfied = formatBodyData(body);\r\n\r\n    const validationMessage = JSON.parse(apiValidation).message\r\n\r\n    if (debugJs) {\r\n      debugMsg.push(`{openBold}${formattedStateName} - ${validationMessage}{closeBold}`);\r\n      debugMsg.push(\"\");\r\n      debugMsg.push(`{openBold}url:{closeBold} ${urlRequest}`);\r\n      debugMsg.push(`{openBold}status${formattedStateName}:{closeBold} ${status}`);\r\n\r\n      if (bodyStringfied) {\r\n        debugMsg.push(\"\");\r\n        debugMsg.push(`{openBold}body:{closeBold} ${bodyStringfied}`);\r\n      }\r\n      debugMsg.push(\"\");\r\n      debugMsg.push(`{openBold}response${formattedStateName}:{closeBold} ${response}`);\r\n    }\r\n\r\n    const mountedDebugMsg = debugMsg.join(\"{lineBreak}\");\r\n\r\n    return formattedMsg(mountedDebugMsg, formatterJson);\r\n  } catch (e) {\r\n    return e;\r\n    return \"\";\r\n  }\r\n}\r\n\r\nfunction formattedMsg(message, formatterJson) {\r\n  try {\r\n    formatterJson = JSON.parse(formatterJson);\r\n    const { identifiers } = formatterJson;\r\n    let formattedMsg = message;\r\n    for (let everyFormatter in identifiers) {\r\n      formattedMsg = formattedMsg.replace(\r\n        new RegExp(identifiers[everyFormatter], \"g\"),\r\n        formatterJson[everyFormatter]\r\n      );\r\n    }\r\n    return formattedMsg;\r\n  } catch (e) {\r\n    return message;\r\n  }\r\n}\r\n\r\nfunction formatBodyData(body) {\r\n  if (body == null || body == undefined || body == \"\") {\r\n    return false;\r\n  }\r\n  return JSON.stringify(body);\r\n}",
            "inputVariables": [
              "debugJs",
              "formatterJson",
              "apiPostCheckoutPaymentDataJs",
              "statusApiPostCheckoutPayment",
              "responseApiPostCheckoutPayment",
              "apiPostCheckoutPaymentValidatedJs"
            ],
            "outputVariable": "apiPostCheckoutPaymentDebugJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": [],
          "continueOnError": true
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": {
        "stateId": "37f6ea15-cf65-4884-b3f8-d59043fcf767",
        "$invalid": false,
        "typeOfStateId": "state"
      },
      "isAiGenerated": false,
      "$tags": [
        {
          "id": "blip-tag-d4509313-1695-4da9-a767-d4e4b616425b",
          "label": "ProcessHttp",
          "background": "#7762E3",
          "canChangeBackground": false
        },
        {
          "id": "blip-tag-40ba8a7a-7e71-4b86-9be5-0ba4cbf9ba31",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        },
        {
          "id": "blip-tag-7ad43cc0-7683-4f77-9b9d-f58ba394a65c",
          "label": "SendMessage",
          "background": "#EE82EE",
          "canChangeBackground": false
        }
      ],
      "id": "6d69a25c-94a6-4e23-a3a1-322f32d37ca7",
      "root": false,
      "$title": "makeRequest - apiPostCheckoutPayment",
      "$position": { "top": "6505.25px", "left": "6046px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false
    },
    "75f448dd-9413-4fb8-94de-608a0ed46e72": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "1e299b87-dbd0-494c-8b59-da3f9a056239",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [
        {
          "stateId": "13cb82b3-1bca-4bfa-a146-68dd400877f9",
          "typeOfStateId": "state",
          "$connId": "con_318",
          "$id": "b6636a69-6ed2-4379-9744-87afad6ac8cb",
          "conditions": [{ "source": "input", "comparison": "exists", "values": [] }],
          "$invalid": false
        }
      ],
      "$enteringCustomActions": [
        {
          "$id": "4776b348-ec48-4c67-a8ea-8e262929fca9",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - getDataForUpdateUserContextJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(responseApi) {\n\n\treturn responseApi;\n\n}\n",
            "inputVariables": ["responseApiPostCheckoutPayment"],
            "outputVariable": "getDataForUpdateUserContextJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": { "stateId": "fallback", "$invalid": false },
      "isAiGenerated": false,
      "$tags": [
        {
          "id": "blip-tag-7c6cde17-cd89-41f0-b266-5533e80e901d",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        }
      ],
      "id": "75f448dd-9413-4fb8-94de-608a0ed46e72",
      "root": false,
      "$title": "saveData - apiPostCheckoutPayment",
      "$position": { "top": "6492.25px", "left": "6277px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false
    },
    "b6968b67-325c-479f-a9dd-0b8e443cccf2": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "bd5c8d35-55a4-4c36-9019-aa54bd34b217",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [],
      "$enteringCustomActions": [
        {
          "$id": "4ca20277-aee4-455d-a578-83c18a74ff94",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - askPlanPrincipalOfferJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "\r\nfunction run(allPlansData) {\r\n  try {\r\n    const { principalOffer } = JSON.parse(allPlansData);\r\n\r\n    if (!principalOffer) {\r\n      return \"hasNotPrincipalOffer\";\r\n    }\r\n    const { allIdData, planData } = principalOffer;\r\n\r\n    const { checkedPrincipalOfferImage } = planData;\r\n\r\n    const dataMenu = {\r\n      headerMsg: \"Desfrute da nossa promoção exclusiva para {openBold}clientes novos{closeBold}! 🎉\",\r\n      menuType: \"menuWithImage\",\r\n      imageLink: checkedPrincipalOfferImage,\r\n      descriptionButtonName: \"\",\r\n      allMenuOptions: [\r\n        {\r\n          sectionTitle: \"\",\r\n          allSectionOptions: [\r\n            {\r\n              title: \"Aceitar oferta\",\r\n              description: \"\",\r\n              identifier: \"acepptOffer\",\r\n              active: true,\r\n              extras: {\r\n                userInput: allIdData,\r\n                dataToRegisterInUserContext: \"forceSetPlanIds\",\r\n                stepForTurnFalse: [\"msgPlans\"],\r\n              },\r\n            },\r\n            {\r\n              title: \"Recusar\",\r\n              description: \"\",\r\n              identifier: \"declineOffer\",\r\n              active: true,\r\n              extras: {\r\n                ignoreUserContextRegister: true,\r\n\r\n              },\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n\r\n    return dataMenu;\r\n  } catch (e) {\r\n    return { itBroked: true, brokenMsg: e.message };\r\n  }\r\n}",
            "inputVariables": ["menuPlansDataJs"],
            "outputVariable": "askPlanPrincipalOfferJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "97625730-9eff-4ca4-8e51-593626ad7f16",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - currentMenuDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "{{resource.function_currentMenuData}}",
            "inputVariables": ["askPlanPrincipalOfferJs"],
            "outputVariable": "currentMenuDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": ["First option", "Second option"],
      "$defaultOutput": {
        "stateId": "bb93536d-668f-4683-95bd-ea547d6051bd",
        "$invalid": false,
        "typeOfStateId": "state"
      },
      "$tags": [
        {
          "id": "blip-tag-9a39a3b2-5407-414d-bd0c-d6861377e0b4",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        }
      ],
      "id": "b6968b67-325c-479f-a9dd-0b8e443cccf2",
      "root": false,
      "$title": "askPlanPrincipalOffer",
      "$position": { "top": "1592.67px", "left": "4805px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false,
      "invalidOutputs": true,
      "isAiGenerated": false
    },
    "e7de724b-eba0-40e3-9949-e7df021f56b5": {
      "$contentActions": [
        {
          "action": {
            "$id": "f889095b-1549-46b3-9be9-a00a6e412738",
            "$typeOfContent": "chat-state",
            "type": "SendMessage",
            "settings": {
              "id": "ff9dce54-d7aa-450c-b761-68478aef970c",
              "type": "application/vnd.lime.chatstate+json",
              "content": { "state": "composing", "interval": 1000 }
            },
            "$cardContent": {
              "document": {
                "id": "ff9dce54-d7aa-450c-b761-68478aef970c",
                "type": "application/vnd.lime.chatstate+json",
                "content": { "state": "composing", "interval": 1000 }
              },
              "editable": true,
              "deletable": true,
              "position": "left"
            }
          },
          "$invalid": false
        },
        {
          "action": {
            "$id": "59df7c8a-d08e-422f-8238-56090d7c0eae",
            "$typeOfContent": "raw-content",
            "type": "SendRawMessage",
            "settings": {
              "metadata": {},
              "type": "{{msgPlansBuildJs@menuData.type}}",
              "rawContent": "{{msgPlansBuildJs@menuData.content}}"
            }
          },
          "$invalid": false
        },
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "dafe1e38-6b51-4d20-a34e-398eed237a7c",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [
        {
          "stateId": "{{defaultBlocksIdsJs@broked}}",
          "typeOfStateId": "variable",
          "$id": "22c4fdb8-332c-4d47-81c2-e3dc476773ea",
          "conditions": [
            {
              "source": "context",
              "comparison": "equals",
              "values": ["true"],
              "variable": "processedMsgByBlockJs@isBroked"
            }
          ],
          "$invalid": false
        },
        {
          "stateId": "3daa5bec-e962-4030-b1d1-bef4d09a4a8e",
          "typeOfStateId": "state",
          "$connId": "con_323",
          "$id": "c6f6ce3b-51ac-47fe-8ec4-2954276c8598",
          "conditions": [{ "source": "input", "comparison": "exists", "values": [] }],
          "$invalid": false
        }
      ],
      "$enteringCustomActions": [
        {
          "$id": "c7eeb51f-7079-47f1-8aba-1ae3fce2c607",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - msgPlansDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run() {\r\n  try {\r\n    const dataMenu = {\r\n      headerMsg:\r\n        `Selecione um dos planos abaixo:`,\r\n      menuType: \"text\",\r\n    };\r\n\r\n    return dataMenu;\r\n  } catch (e) {\r\n    return { itBroked: true, brokenMsg: e.message };\r\n  }\r\n}\r\n",
            "inputVariables": [],
            "outputVariable": "msgPlansDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "425bd57e-051f-4dc5-a27b-91a2b7eb6d7f",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - msgPlansBuildJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "{{resource.functions_msgBuildJs}}",
            "inputVariables": ["channelJs", "formatterJson", "msgPlansDataJs"],
            "outputVariable": "msgPlansBuildJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": { "stateId": "fallback", "$invalid": false, "typeOfStateId": "state" },
      "$tags": [
        {
          "id": "blip-tag-149481a7-bab8-458e-91c2-939a607359e8",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        },
        {
          "id": "blip-tag-af194347-63d2-4cc0-a262-e1cbab29c85a",
          "label": "SendMessage",
          "background": "#EE82EE",
          "canChangeBackground": false
        }
      ],
      "id": "e7de724b-eba0-40e3-9949-e7df021f56b5",
      "root": false,
      "$title": "msgPlans",
      "$position": { "top": "285.75px", "left": "5491.75px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false,
      "invalidOutputs": true,
      "isAiGenerated": false
    },
    "769ea9b6-186d-474f-a8a3-9638020e5f4a": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "bd5c8d35-55a4-4c36-9019-aa54bd34b217",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [],
      "$enteringCustomActions": [
        {
          "$id": "4ca20277-aee4-455d-a578-83c18a74ff94",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - askPlanPrincipalOfferJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run() {\r\n  try {\r\n    const menuData = {\r\n      headerMsg:\r\n        \"Preciso saber se você gostaria de manter o número ou prefere uma nova linha?\",\r\n      menuType: \"menu\",\r\n      descriptionButtonText: \"\",\r\n      allMenuOptions: [\r\n        {\r\n          sectionTitle: \"\",\r\n          allSectionOptions: [\r\n            {\r\n              title: \"Nova linha\",\r\n              description: \"\",\r\n              identifier: \"{{nextStepJs}}\",\r\n              active: true,\r\n              extras: { userInput: \"newLine\", updateSpecificCampaignName: true },\r\n            },\r\n            {\r\n              title: \"Manter número\",\r\n              description: \"\",\r\n              identifier: \"{{nextStepJs}}\",\r\n              active: true,\r\n              extras: { userInput: \"portability\", updateSpecificCampaignName: true },\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n    return menuData;\r\n  } catch (e) {\r\n    return \"error\";\r\n  }\r\n}\r\n",
            "inputVariables": ["menuPlansDataJs"],
            "outputVariable": "askPlanPrincipalOfferJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "97625730-9eff-4ca4-8e51-593626ad7f16",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - currentMenuDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "{{resource.function_currentMenuData}}",
            "inputVariables": ["askPlanPrincipalOfferJs"],
            "outputVariable": "currentMenuDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": ["First option", "Second option"],
      "$defaultOutput": {
        "stateId": "bb93536d-668f-4683-95bd-ea547d6051bd",
        "$invalid": false,
        "typeOfStateId": "state"
      },
      "$tags": [
        {
          "id": "blip-tag-4d2aee3c-7af8-4bb2-9273-04fe86750bf7",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        }
      ],
      "id": "769ea9b6-186d-474f-a8a3-9638020e5f4a",
      "root": false,
      "$title": "askPortabilityType",
      "$position": { "top": "6932.67px", "left": "885.333px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false,
      "invalidOutputs": true,
      "isAiGenerated": false
    },
    "d2c26ee8-1af2-475e-adeb-7438a16171a7": {
      "$contentActions": [
        {
          "action": {
            "$id": "f889095b-1549-46b3-9be9-a00a6e412738",
            "$typeOfContent": "chat-state",
            "type": "SendMessage",
            "settings": {
              "id": "ff9dce54-d7aa-450c-b761-68478aef970c",
              "type": "application/vnd.lime.chatstate+json",
              "content": { "state": "composing", "interval": 1000 }
            },
            "$cardContent": {
              "document": {
                "id": "ff9dce54-d7aa-450c-b761-68478aef970c",
                "type": "application/vnd.lime.chatstate+json",
                "content": { "state": "composing", "interval": 1000 }
              },
              "editable": true,
              "deletable": true,
              "position": "left"
            }
          },
          "$invalid": false
        },
        {
          "action": {
            "$id": "59df7c8a-d08e-422f-8238-56090d7c0eae",
            "$typeOfContent": "raw-content",
            "type": "SendRawMessage",
            "settings": {
              "metadata": {},
              "type": "{{inactivityBlock1BuildJs@menuData.type}}",
              "rawContent": "{{inactivityBlock1BuildJs@menuData.content}}"
            }
          },
          "$invalid": false
        },
        {
          "input": {
            "bypass": false,
            "$cardContent": {
              "document": {
                "id": "dafe1e38-6b51-4d20-a34e-398eed237a7c",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false,
            "expiration": "0:15"
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [
        {
          "stateId": "{{defaultBlocksIdsJs@broked}}",
          "typeOfStateId": "variable",
          "$id": "22c4fdb8-332c-4d47-81c2-e3dc476773ea",
          "conditions": [
            {
              "source": "context",
              "comparison": "equals",
              "values": ["true"],
              "variable": "processedMsgByBlockJs@isBroked"
            }
          ],
          "$invalid": false
        },
        {
          "stateId": "cc52ec66-ae7a-4884-a25a-a47cd54f13b5",
          "typeOfStateId": "state",
          "$connId": "con_328",
          "$id": "d7fc2758-1ff4-45df-ba16-c2fd871b8a7d",
          "conditions": [{ "source": "input", "comparison": "notExists", "values": [] }],
          "$invalid": false
        },
        {
          "stateId": "612504e1-2c55-40a0-aebc-3d0012f97604",
          "typeOfStateId": "state",
          "$connId": "con_333",
          "$id": "25be99d0-06b7-47ec-95d1-b06099ff571f",
          "conditions": [{ "source": "input", "comparison": "exists", "values": [] }],
          "$invalid": false
        }
      ],
      "$enteringCustomActions": [
        {
          "$id": "c7eeb51f-7079-47f1-8aba-1ae3fce2c607",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - inactivityBlock1DataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "{{resource.function_isCommercialHours}}\r\n\r\nfunction run(nextStep) {\r\n  try {\r\n    const headerMsg = getMsgByNextStep(nextStep)\r\n\r\n    const checkedHeaderMsg = isCommercialHours() ? headerMsg : \"\"\r\n\r\n    const dataMenu = {\r\n      checkedHeaderMsg,\r\n      menuType: \"text\",\r\n    };\r\n\r\n    return dataMenu;\r\n  } catch (e) {\r\n    return { itBroked: true, brokenMsg: e.message };\r\n  }\r\n}\r\n\r\n\r\nfunction getMsgByNextStep(nextStep) {\r\n  const defaultMsg = \"Ainda não recebei sua responsta\";\r\n\r\n  const msgsPattern = { defaultInactivity: \"Escolha apenas uma das opções do menu\" };\r\n\r\n  const allMsgsByCategory = {\r\n    portabilityType: {\r\n      // askPortabilityType: [msgsPattern.defaultInactivity],\r\n      // askNewNumberDDD: [\"Por favor, digite apenas o DDD do telefone\"],\r\n      // askPortabilityNumber: [\"Por favor, digite o seu novo número\"],\r\n    },\r\n    plans: {\r\n      // askPlanPrincipalOffer: [msgsPattern.defaultInactivity],\r\n      // askPlans: [\"Escolha apenas um dos planos listados\"],\r\n      // askUpsell: [msgsPattern.defaultInactivity],\r\n      // askPlanOptional: [msgsPattern.defaultInactivity],\r\n      // askPlansAndPortabilityCheckout: [msgsPattern.defaultInactivity],\r\n      // askPlansAndPortabilityCorrection: [msgsPattern.defaultInactivity],\r\n    },\r\n    businessData: {\r\n      // askBusinessCNPJ: [\"Não entedi, informe apenas o CNPJ da empresa\"],\r\n      // askBusinessPhone: [\"Não entedi, informe apenas o telefone da empresa\"],\r\n      // askBusinessCPF: [\"Não entedi, informe apenas o CPF do responsável legal\"],\r\n      // askBusinessOwnerName: [\"Não entedi, informe apenas o telefone do responsável legal\"],\r\n      // askBusinessEmail: [\"Não entedi, informe apenas o E-mail do responsável legal\"],\r\n      // askBusinessRG: [\"Não entedi, informe apenas o RG do responsável legal\"],\r\n      // askBusinessCorrection: [msgsPattern.defaultInactivity],\r\n      // askBusinessCheckout: [msgsPattern.defaultInactivity],\r\n    },\r\n    payment: {\r\n      // askDueDay: [\"Selecione um dos dias de pagamento\"],\r\n    },\r\n    lgpd: {\r\n      // askTerms: [msgsPattern.menuSelection1],\r\n    },\r\n  };\r\n\r\n  const allMsgsInUniqueObject = Object.values(allMsgsByCategory).reduce((acc, categoryData) => {\r\n    acc = { ...acc, ...categoryData };\r\n    return acc;\r\n  }, {});\r\n\r\n  const specificMsgByStep = allMsgsByCategory[nextStep] || defaultMsg\r\n\r\n  return specificMsgByStep\r\n\r\n}",
            "inputVariables": ["nextStepJs"],
            "outputVariable": "inactivityBlock1DataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "425bd57e-051f-4dc5-a27b-91a2b7eb6d7f",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - inactivityBlock1BuildJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "{{resource.functions_msgBuildJs}}",
            "inputVariables": ["channelJs", "formatterJson", "inactivityBlock1DataJs"],
            "outputVariable": "inactivityBlock1BuildJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": { "stateId": "fallback", "$invalid": false, "typeOfStateId": "state" },
      "$tags": [
        {
          "id": "blip-tag-2e63f23f-1a36-4e23-b29d-799ae1b7ce07",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        },
        {
          "id": "blip-tag-0cc7fef8-e62f-467b-9e71-c697ea0e05c7",
          "label": "SendMessage",
          "background": "#EE82EE",
          "canChangeBackground": false
        },
        {
          "id": "blip-tag-61bd945a-94eb-494e-8d8f-e179869f24e8",
          "label": "UserInput",
          "background": "#000000",
          "canChangeBackground": false
        }
      ],
      "id": "d2c26ee8-1af2-475e-adeb-7438a16171a7",
      "root": false,
      "$title": "inactivityBlock1",
      "$position": { "top": "3968px", "left": "1165px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false,
      "invalidOutputs": true,
      "isAiGenerated": false
    },
    "612504e1-2c55-40a0-aebc-3d0012f97604": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "f295d57e-cddb-46ec-a566-35709eb493ef",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [
        {
          "stateId": "{{defaultBlocksIdsJs@broked}}",
          "typeOfStateId": "variable",
          "$id": "b3e30244-1e83-4b21-93e3-a643f4256c4a",
          "conditions": [
            {
              "source": "context",
              "comparison": "exists",
              "values": [],
              "variable": "checkWhereGoByStatePreviousIdJs@isBroked"
            }
          ],
          "$invalid": false
        },
        {
          "stateId": "{{checkWhereGoByStatePreviousIdJs@id}}",
          "typeOfStateId": "variable",
          "$id": "480d5cd3-bde8-44de-a4bb-3dd55112dfe9",
          "conditions": [{ "source": "input", "comparison": "exists", "values": [] }],
          "$invalid": false
        }
      ],
      "$enteringCustomActions": [
        {
          "$id": "c0e78398-28ad-4d7a-a8ad-01d5c4a9f389",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - checkWhereGoByStatePreviousIdJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(inactivityStatePreviousId) {\n  try {\n    const mappedData = {\n      \"387e3e3a-473b-43a0-bddf-520329b9f5ca\": {\n        blockTitleFromWhereCame: \"askAllPlans\",\n        blockWhereGo: {\n          title: \"processPlansUserInputAndUnsetForcePlan\",\n          id: \"2dc02083-0960-40a3-8bf2-f9c89aca61de\",\n        },\n      },\n      \"6a54ee39-4b53-4546-81e0-85774757ad96\": {\n        blockTitleFromWhereCame: \"genericBlockForASK\",\n        blockWhereGo: { title: \"process - userInputByNextStep\", id: \"5e40fa1d-72b1-4c5a-ad6c-c237f65d3597\" },\n      },\n      defaultData: {\n        blockTitleFromWhereCame: \"anyOtherBlock\",\n        blockWhereGo: { title: \"registerBrokedData\", id: \"37f6ea15-cf65-4884-b3f8-d59043fcf767\" },\n      },\n    };\n\n    const { blockWhereGo } = mappedData[inactivityStatePreviousId]\n\n    return blockWhereGo\n\n  } catch (e) {\n    return { itBroked: true, brokenMsg: e.message };\n  }\n}\n",
            "inputVariables": ["inactivityStatePreviousId"],
            "outputVariable": "checkWhereGoByStatePreviousIdJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": { "stateId": "fallback", "$invalid": false },
      "isAiGenerated": false,
      "$tags": [
        {
          "id": "blip-tag-fad27332-a29b-4144-ad90-e0baffaad81f",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        }
      ],
      "id": "612504e1-2c55-40a0-aebc-3d0012f97604",
      "root": false,
      "$title": "checkInactivityGoBack",
      "$position": { "top": "3808px", "left": "2391px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false
    },
    "331e65ba-b9c5-4c30-86af-daf5dddb6882": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "8d3c8e2c-19da-4777-9e05-f46f9ae58e0d",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [
        {
          "stateId": "a53f0c28-3305-43c3-adfe-31c173a2c2d5",
          "typeOfStateId": "state",
          "$connId": "con_338",
          "$id": "d3b053fa-ee9c-4925-9d2f-f7f57c468a18",
          "conditions": [
            { "source": "context", "comparison": "equals", "values": ["blip"], "variable": "channelJs" }
          ],
          "$invalid": false
        },
        {
          "stateId": "d2c26ee8-1af2-475e-adeb-7438a16171a7",
          "typeOfStateId": "state",
          "$connId": "con_343",
          "$id": "1a3eb3ab-fe35-43c8-9199-db54e20a506c",
          "conditions": [{ "source": "input", "comparison": "exists", "values": [] }],
          "$invalid": false
        }
      ],
      "$enteringCustomActions": [
        {
          "$id": "e6e1cd07-0001-48bc-a5a6-5075eb52a701",
          "$typeOfContent": "",
          "type": "SetVariable",
          "$title": "Set variable - inactivityStatePreviousId",
          "$invalid": false,
          "settings": { "variable": "inactivityStatePreviousId", "value": "{{state.previous.id}}" },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": { "stateId": "fallback", "$invalid": false },
      "isAiGenerated": false,
      "$tags": [
        {
          "id": "blip-tag-507644df-6f12-4963-abab-1ea0f853147a",
          "label": "SetVariable",
          "background": "#FF4A1E",
          "canChangeBackground": false
        }
      ],
      "id": "331e65ba-b9c5-4c30-86af-daf5dddb6882",
      "root": false,
      "$title": "checkInactivityConditions",
      "$position": { "top": "3962px", "left": "886px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false
    },
    "cc52ec66-ae7a-4884-a25a-a47cd54f13b5": {
      "$contentActions": [
        {
          "action": {
            "$id": "f889095b-1549-46b3-9be9-a00a6e412738",
            "$typeOfContent": "chat-state",
            "type": "SendMessage",
            "settings": {
              "id": "ff9dce54-d7aa-450c-b761-68478aef970c",
              "type": "application/vnd.lime.chatstate+json",
              "content": { "state": "composing", "interval": 1000 }
            },
            "$cardContent": {
              "document": {
                "id": "ff9dce54-d7aa-450c-b761-68478aef970c",
                "type": "application/vnd.lime.chatstate+json",
                "content": { "state": "composing", "interval": 1000 }
              },
              "editable": true,
              "deletable": true,
              "position": "left"
            }
          },
          "$invalid": false
        },
        {
          "action": {
            "$id": "59df7c8a-d08e-422f-8238-56090d7c0eae",
            "$typeOfContent": "raw-content",
            "type": "SendRawMessage",
            "settings": {
              "metadata": {},
              "type": "{{inactivityBlock2BuildJs@menuData.type}}",
              "rawContent": "{{inactivityBlock2BuildJs@menuData.content}}"
            }
          },
          "$invalid": false
        },
        {
          "input": {
            "bypass": false,
            "$cardContent": {
              "document": {
                "id": "dafe1e38-6b51-4d20-a34e-398eed237a7c",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false,
            "expiration": "1:0"
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [
        {
          "stateId": "{{defaultBlocksIdsJs@broked}}",
          "typeOfStateId": "variable",
          "$id": "22c4fdb8-332c-4d47-81c2-e3dc476773ea",
          "conditions": [
            {
              "source": "context",
              "comparison": "equals",
              "values": ["true"],
              "variable": "processedMsgByBlockJs@isBroked"
            }
          ],
          "$invalid": false
        },
        {
          "stateId": "2ec6b69c-c6b7-4d80-9076-66c4961e755d",
          "typeOfStateId": "state",
          "$connId": "con_348",
          "$id": "d7fc2758-1ff4-45df-ba16-c2fd871b8a7d",
          "conditions": [{ "source": "input", "comparison": "notExists", "values": [] }],
          "$invalid": false
        },
        {
          "stateId": "612504e1-2c55-40a0-aebc-3d0012f97604",
          "typeOfStateId": "state",
          "$connId": "con_353",
          "$id": "9223bb6c-0eac-4816-8b52-9810e2112d6b",
          "conditions": [{ "source": "input", "comparison": "exists", "values": [] }],
          "$invalid": false
        }
      ],
      "$enteringCustomActions": [
        {
          "$id": "c7eeb51f-7079-47f1-8aba-1ae3fce2c607",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - inactivityBlock2DataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "{{resource.function_isCommercialHours}}\r\n\r\nfunction run(nextStep) {\r\n  try {\r\n    const headerMsg = getMsgByNextStep(nextStep)\r\n\r\n    const checkedHeaderMsg = isCommercialHours() ? headerMsg : \"\"\r\n\r\n    const dataMenu = {\r\n      checkedHeaderMsg,\r\n      menuType: \"text\",\r\n    };\r\n\r\n    return dataMenu;\r\n  } catch (e) {\r\n    return { itBroked: true, brokenMsg: e.message };\r\n  }\r\n}\r\n\r\n\r\nfunction getMsgByNextStep(nextStep) {\r\n  const defaultMsg = \"Ainda não recebei sua responsta\";\r\n\r\n  const msgsPattern = { defaultInactivity: \"Escolha apenas uma das opções do menu\" };\r\n\r\n  const allMsgsByCategory = {\r\n    portabilityType: {\r\n      // askPortabilityType: [msgsPattern.defaultInactivity],\r\n      // askNewNumberDDD: [\"Por favor, digite apenas o DDD do telefone\"],\r\n      // askPortabilityNumber: [\"Por favor, digite o seu novo número\"],\r\n    },\r\n    plans: {\r\n      // askPlanPrincipalOffer: [msgsPattern.defaultInactivity],\r\n      // askPlans: [\"Escolha apenas um dos planos listados\"],\r\n      // askUpsell: [msgsPattern.defaultInactivity],\r\n      // askPlanOptional: [msgsPattern.defaultInactivity],\r\n      // askPlansAndPortabilityCheckout: [msgsPattern.defaultInactivity],\r\n      // askPlansAndPortabilityCorrection: [msgsPattern.defaultInactivity],\r\n    },\r\n    businessData: {\r\n      // askBusinessCNPJ: [\"Não entedi, informe apenas o CNPJ da empresa\"],\r\n      // askBusinessPhone: [\"Não entedi, informe apenas o telefone da empresa\"],\r\n      // askBusinessCPF: [\"Não entedi, informe apenas o CPF do responsável legal\"],\r\n      // askBusinessOwnerName: [\"Não entedi, informe apenas o telefone do responsável legal\"],\r\n      // askBusinessEmail: [\"Não entedi, informe apenas o E-mail do responsável legal\"],\r\n      // askBusinessRG: [\"Não entedi, informe apenas o RG do responsável legal\"],\r\n      // askBusinessCorrection: [msgsPattern.defaultInactivity],\r\n      // askBusinessCheckout: [msgsPattern.defaultInactivity],\r\n    },\r\n    payment: {\r\n      // askDueDay: [\"Selecione um dos dias de pagamento\"],\r\n    },\r\n    lgpd: {\r\n      // askTerms: [msgsPattern.menuSelection1],\r\n    },\r\n  };\r\n\r\n  const allMsgsInUniqueObject = Object.values(allMsgsByCategory).reduce((acc, categoryData) => {\r\n    acc = { ...acc, ...categoryData };\r\n    return acc;\r\n  }, {});\r\n\r\n  const specificMsgByStep = allMsgsByCategory[nextStep] || defaultMsg\r\n\r\n  return specificMsgByStep\r\n\r\n}",
            "inputVariables": ["nextStepJs"],
            "outputVariable": "inactivityBlock2DataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "425bd57e-051f-4dc5-a27b-91a2b7eb6d7f",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - inactivityBlock2BuildJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "{{resource.functions_msgBuildJs}}",
            "inputVariables": ["channelJs", "formatterJson", "inactivityBlock2DataJs"],
            "outputVariable": "inactivityBlock2BuildJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": { "stateId": "fallback", "$invalid": false, "typeOfStateId": "state" },
      "$tags": [
        {
          "id": "blip-tag-f8e55f99-cbd2-48e9-a1e9-78f444681ea1",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        },
        {
          "id": "blip-tag-2e4a45ae-56df-4995-a957-246c70b03401",
          "label": "SendMessage",
          "background": "#EE82EE",
          "canChangeBackground": false
        },
        {
          "id": "blip-tag-5f946d1e-0137-43b0-8553-faf7830af572",
          "label": "UserInput",
          "background": "#000000",
          "canChangeBackground": false
        }
      ],
      "id": "cc52ec66-ae7a-4884-a25a-a47cd54f13b5",
      "root": false,
      "$title": "inactivityBlock2",
      "$position": { "top": "3970px", "left": "1416px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false,
      "invalidOutputs": true,
      "isAiGenerated": false
    },
    "2ec6b69c-c6b7-4d80-9076-66c4961e755d": {
      "$contentActions": [
        {
          "action": {
            "$id": "f889095b-1549-46b3-9be9-a00a6e412738",
            "$typeOfContent": "chat-state",
            "type": "SendMessage",
            "settings": {
              "id": "ff9dce54-d7aa-450c-b761-68478aef970c",
              "type": "application/vnd.lime.chatstate+json",
              "content": { "state": "composing", "interval": 1000 }
            },
            "$cardContent": {
              "document": {
                "id": "ff9dce54-d7aa-450c-b761-68478aef970c",
                "type": "application/vnd.lime.chatstate+json",
                "content": { "state": "composing", "interval": 1000 }
              },
              "editable": true,
              "deletable": true,
              "position": "left"
            }
          },
          "$invalid": false
        },
        {
          "action": {
            "$id": "59df7c8a-d08e-422f-8238-56090d7c0eae",
            "$typeOfContent": "raw-content",
            "type": "SendRawMessage",
            "settings": {
              "metadata": {},
              "type": "{{inactivityBlock3BuildJs@menuData.type}}",
              "rawContent": "{{inactivityBlock3BuildJs@menuData.content}}"
            }
          },
          "$invalid": false
        },
        {
          "input": {
            "bypass": false,
            "$cardContent": {
              "document": {
                "id": "dafe1e38-6b51-4d20-a34e-398eed237a7c",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false,
            "expiration": "3:0"
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [
        {
          "stateId": "{{defaultBlocksIdsJs@broked}}",
          "typeOfStateId": "variable",
          "$id": "22c4fdb8-332c-4d47-81c2-e3dc476773ea",
          "conditions": [
            {
              "source": "context",
              "comparison": "equals",
              "values": ["true"],
              "variable": "processedMsgByBlockJs@isBroked"
            }
          ],
          "$invalid": false
        },
        {
          "stateId": "c28f3bae-52b1-4591-834a-4df102abf2ab",
          "typeOfStateId": "state",
          "$connId": "con_358",
          "$id": "d7fc2758-1ff4-45df-ba16-c2fd871b8a7d",
          "conditions": [{ "source": "input", "comparison": "notExists", "values": [] }],
          "$invalid": false
        },
        {
          "stateId": "612504e1-2c55-40a0-aebc-3d0012f97604",
          "typeOfStateId": "state",
          "$connId": "con_363",
          "$id": "3ec122fb-9e48-4fba-8e76-854047b43309",
          "conditions": [{ "source": "input", "comparison": "exists", "values": [] }],
          "$invalid": false
        }
      ],
      "$enteringCustomActions": [
        {
          "$id": "c7eeb51f-7079-47f1-8aba-1ae3fce2c607",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - inactivityBlock3DataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "{{resource.function_isCommercialHours}}\r\n\r\nfunction run(nextStep) {\r\n  try {\r\n    const headerMsg = getMsgByNextStep(nextStep)\r\n\r\n    const checkedHeaderMsg = isCommercialHours() ? headerMsg : \"\"\r\n\r\n    const dataMenu = {\r\n      checkedHeaderMsg,\r\n      menuType: \"text\",\r\n    };\r\n\r\n    return dataMenu;\r\n  } catch (e) {\r\n    return { itBroked: true, brokenMsg: e.message };\r\n  }\r\n}\r\n\r\nfunction getMsgByNextStep(nextStep) {\r\n  const defaultMsg = \"Ainda não recebei sua responsta\";\r\n\r\n  const msgsPattern = { defaultInactivity: \"Escolha apenas uma das opções do menu\" };\r\n\r\n  const allMsgsByCategory = {\r\n    portabilityType: {\r\n      // askPortabilityType: [msgsPattern.defaultInactivity],\r\n      // askNewNumberDDD: [\"Por favor, digite apenas o DDD do telefone\"],\r\n      // askPortabilityNumber: [\"Por favor, digite o seu novo número\"],\r\n    },\r\n    plans: {\r\n      // askPlanPrincipalOffer: [msgsPattern.defaultInactivity],\r\n      // askPlans: [\"Escolha apenas um dos planos listados\"],\r\n      // askUpsell: [msgsPattern.defaultInactivity],\r\n      // askPlanOptional: [msgsPattern.defaultInactivity],\r\n      // askPlansAndPortabilityCheckout: [msgsPattern.defaultInactivity],\r\n      // askPlansAndPortabilityCorrection: [msgsPattern.defaultInactivity],\r\n    },\r\n    businessData: {\r\n      // askBusinessCNPJ: [\"Não entedi, informe apenas o CNPJ da empresa\"],\r\n      // askBusinessPhone: [\"Não entedi, informe apenas o telefone da empresa\"],\r\n      // askBusinessCPF: [\"Não entedi, informe apenas o CPF do responsável legal\"],\r\n      // askBusinessOwnerName: [\"Não entedi, informe apenas o telefone do responsável legal\"],\r\n      // askBusinessEmail: [\"Não entedi, informe apenas o E-mail do responsável legal\"],\r\n      // askBusinessRG: [\"Não entedi, informe apenas o RG do responsável legal\"],\r\n      // askBusinessCorrection: [msgsPattern.defaultInactivity],\r\n      // askBusinessCheckout: [msgsPattern.defaultInactivity],\r\n    },\r\n    payment: {\r\n      // askDueDay: [\"Selecione um dos dias de pagamento\"],\r\n    },\r\n    lgpd: {\r\n      // askTerms: [msgsPattern.menuSelection1],\r\n    },\r\n  };\r\n\r\n  const allMsgsInUniqueObject = Object.values(allMsgsByCategory).reduce((acc, categoryData) => {\r\n    acc = { ...acc, ...categoryData };\r\n    return acc;\r\n  }, {});\r\n\r\n  const specificMsgByStep = allMsgsByCategory[nextStep] || defaultMsg\r\n\r\n  return specificMsgByStep\r\n\r\n}",
            "inputVariables": ["nextStepJs"],
            "outputVariable": "inactivityBlock3DataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "425bd57e-051f-4dc5-a27b-91a2b7eb6d7f",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - inactivityBlock3BuildJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "{{resource.functions_msgBuildJs}}",
            "inputVariables": ["channelJs", "formatterJson", "inactivityBlock3DataJs"],
            "outputVariable": "inactivityBlock3BuildJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": { "stateId": "fallback", "$invalid": false, "typeOfStateId": "state" },
      "$tags": [
        {
          "id": "blip-tag-0299aad1-8220-4b2e-9efb-cbcc801cdab6",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        },
        {
          "id": "blip-tag-70308231-4120-45d9-a62b-80d8676d33e1",
          "label": "SendMessage",
          "background": "#EE82EE",
          "canChangeBackground": false
        },
        {
          "id": "blip-tag-be91c01f-2d0b-42a7-bd4d-67ad7e3c3077",
          "label": "UserInput",
          "background": "#000000",
          "canChangeBackground": false
        }
      ],
      "id": "2ec6b69c-c6b7-4d80-9076-66c4961e755d",
      "root": false,
      "$title": "inactivityBlock3",
      "$position": { "top": "3971px", "left": "1650px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false,
      "invalidOutputs": true,
      "isAiGenerated": false
    },
    "c28f3bae-52b1-4591-834a-4df102abf2ab": {
      "$contentActions": [
        {
          "action": {
            "$id": "f889095b-1549-46b3-9be9-a00a6e412738",
            "$typeOfContent": "chat-state",
            "type": "SendMessage",
            "settings": {
              "id": "ff9dce54-d7aa-450c-b761-68478aef970c",
              "type": "application/vnd.lime.chatstate+json",
              "content": { "state": "composing", "interval": 1000 }
            },
            "$cardContent": {
              "document": {
                "id": "ff9dce54-d7aa-450c-b761-68478aef970c",
                "type": "application/vnd.lime.chatstate+json",
                "content": { "state": "composing", "interval": 1000 }
              },
              "editable": true,
              "deletable": true,
              "position": "left"
            }
          },
          "$invalid": false
        },
        {
          "action": {
            "$id": "59df7c8a-d08e-422f-8238-56090d7c0eae",
            "$typeOfContent": "raw-content",
            "type": "SendRawMessage",
            "settings": {
              "metadata": {},
              "type": "{{inactivityBlock4BuildJs@menuData.type}}",
              "rawContent": "{{inactivityBlock4BuildJs@menuData.content}}"
            }
          },
          "$invalid": false
        },
        {
          "input": {
            "bypass": false,
            "$cardContent": {
              "document": {
                "id": "dafe1e38-6b51-4d20-a34e-398eed237a7c",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false,
            "expiration": "5:20"
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [
        {
          "stateId": "{{defaultBlocksIdsJs@broked}}",
          "typeOfStateId": "variable",
          "$id": "22c4fdb8-332c-4d47-81c2-e3dc476773ea",
          "conditions": [
            {
              "source": "context",
              "comparison": "equals",
              "values": ["true"],
              "variable": "processedMsgByBlockJs@isBroked"
            }
          ],
          "$invalid": false
        },
        {
          "stateId": "115f748b-b0d0-4f69-b87c-85981c5477a4",
          "typeOfStateId": "state",
          "$connId": "con_368",
          "$id": "d7fc2758-1ff4-45df-ba16-c2fd871b8a7d",
          "conditions": [{ "source": "input", "comparison": "notExists", "values": [] }],
          "$invalid": false
        },
        {
          "stateId": "612504e1-2c55-40a0-aebc-3d0012f97604",
          "typeOfStateId": "state",
          "$connId": "con_373",
          "$id": "a3ac5838-7321-4557-9b9e-758690b6545d",
          "conditions": [{ "source": "input", "comparison": "exists", "values": [] }],
          "$invalid": false
        }
      ],
      "$enteringCustomActions": [
        {
          "$id": "c7eeb51f-7079-47f1-8aba-1ae3fce2c607",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - inactivityBlock4DataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "{{resource.function_isCommercialHours}}\r\n\r\nfunction run(nextStep) {\r\n  try {\r\n    const headerMsg = getMsgByNextStep(nextStep)\r\n\r\n    const checkedHeaderMsg = isCommercialHours() ? headerMsg : \"\"\r\n\r\n    const dataMenu = {\r\n      checkedHeaderMsg,\r\n      menuType: \"text\",\r\n    };\r\n\r\n    return dataMenu;\r\n  } catch (e) {\r\n    return { itBroked: true, brokenMsg: e.message };\r\n  }\r\n}\r\n\r\n\r\nfunction getMsgByNextStep(nextStep) {\r\n  const defaultMsg = \"Ainda não recebei sua responsta\";\r\n\r\n  const msgsPattern = { defaultInactivity: \"Escolha apenas uma das opções do menu\" };\r\n\r\n  const allMsgsByCategory = {\r\n    portabilityType: {\r\n      // askPortabilityType: [msgsPattern.defaultInactivity],\r\n      // askNewNumberDDD: [\"Por favor, digite apenas o DDD do telefone\"],\r\n      // askPortabilityNumber: [\"Por favor, digite o seu novo número\"],\r\n    },\r\n    plans: {\r\n      // askPlanPrincipalOffer: [msgsPattern.defaultInactivity],\r\n      // askPlans: [\"Escolha apenas um dos planos listados\"],\r\n      // askUpsell: [msgsPattern.defaultInactivity],\r\n      // askPlanOptional: [msgsPattern.defaultInactivity],\r\n      // askPlansAndPortabilityCheckout: [msgsPattern.defaultInactivity],\r\n      // askPlansAndPortabilityCorrection: [msgsPattern.defaultInactivity],\r\n    },\r\n    businessData: {\r\n      // askBusinessCNPJ: [\"Não entedi, informe apenas o CNPJ da empresa\"],\r\n      // askBusinessPhone: [\"Não entedi, informe apenas o telefone da empresa\"],\r\n      // askBusinessCPF: [\"Não entedi, informe apenas o CPF do responsável legal\"],\r\n      // askBusinessOwnerName: [\"Não entedi, informe apenas o telefone do responsável legal\"],\r\n      // askBusinessEmail: [\"Não entedi, informe apenas o E-mail do responsável legal\"],\r\n      // askBusinessRG: [\"Não entedi, informe apenas o RG do responsável legal\"],\r\n      // askBusinessCorrection: [msgsPattern.defaultInactivity],\r\n      // askBusinessCheckout: [msgsPattern.defaultInactivity],\r\n    },\r\n    payment: {\r\n      // askDueDay: [\"Selecione um dos dias de pagamento\"],\r\n    },\r\n    lgpd: {\r\n      // askTerms: [msgsPattern.menuSelection1],\r\n    },\r\n  };\r\n\r\n  const allMsgsInUniqueObject = Object.values(allMsgsByCategory).reduce((acc, categoryData) => {\r\n    acc = { ...acc, ...categoryData };\r\n    return acc;\r\n  }, {});\r\n\r\n  const specificMsgByStep = allMsgsByCategory[nextStep] || defaultMsg\r\n\r\n  return specificMsgByStep\r\n\r\n}",
            "inputVariables": ["nextStepJs"],
            "outputVariable": "inactivityBlock4DataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "425bd57e-051f-4dc5-a27b-91a2b7eb6d7f",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - inactivityBlock4BuildJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "{{resource.functions_msgBuildJs}}",
            "inputVariables": ["channelJs", "formatterJson", "inactivityBlock4DataJs"],
            "outputVariable": "inactivityBlock4BuildJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": { "stateId": "fallback", "$invalid": false, "typeOfStateId": "state" },
      "$tags": [
        {
          "id": "blip-tag-4a5d9373-8934-4080-9324-7b7de0845786",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        },
        {
          "id": "blip-tag-2724d00f-c00d-432d-9c61-a76735147a7e",
          "label": "SendMessage",
          "background": "#EE82EE",
          "canChangeBackground": false
        },
        {
          "id": "blip-tag-6464e62d-406a-46c3-b3bb-fa07c9306b3e",
          "label": "UserInput",
          "background": "#000000",
          "canChangeBackground": false
        }
      ],
      "id": "c28f3bae-52b1-4591-834a-4df102abf2ab",
      "root": false,
      "$title": "inactivityBlock4",
      "$position": { "top": "3962px", "left": "1894px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false,
      "invalidOutputs": true,
      "isAiGenerated": false
    },
    "115f748b-b0d0-4f69-b87c-85981c5477a4": {
      "$contentActions": [
        {
          "action": {
            "$id": "f889095b-1549-46b3-9be9-a00a6e412738",
            "$typeOfContent": "chat-state",
            "type": "SendMessage",
            "settings": {
              "id": "ff9dce54-d7aa-450c-b761-68478aef970c",
              "type": "application/vnd.lime.chatstate+json",
              "content": { "state": "composing", "interval": 1000 }
            },
            "$cardContent": {
              "document": {
                "id": "ff9dce54-d7aa-450c-b761-68478aef970c",
                "type": "application/vnd.lime.chatstate+json",
                "content": { "state": "composing", "interval": 1000 }
              },
              "editable": true,
              "deletable": true,
              "position": "left"
            }
          },
          "$invalid": false
        },
        {
          "action": {
            "$id": "59df7c8a-d08e-422f-8238-56090d7c0eae",
            "$typeOfContent": "raw-content",
            "type": "SendRawMessage",
            "settings": {
              "metadata": {},
              "type": "{{inactivityBlock5BuildJs@menuData.type}}",
              "rawContent": "{{inactivityBlock5BuildJs@menuData.content}}"
            }
          },
          "$invalid": false
        },
        {
          "input": {
            "bypass": false,
            "$cardContent": {
              "document": {
                "id": "dafe1e38-6b51-4d20-a34e-398eed237a7c",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false,
            "expiration": "15:0"
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [
        {
          "stateId": "{{defaultBlocksIdsJs@broked}}",
          "typeOfStateId": "variable",
          "$id": "22c4fdb8-332c-4d47-81c2-e3dc476773ea",
          "conditions": [
            {
              "source": "context",
              "comparison": "equals",
              "values": ["true"],
              "variable": "processedMsgByBlockJs@isBroked"
            }
          ],
          "$invalid": false
        },
        {
          "stateId": "0ad15d5d-2e51-4122-8d99-87f8883b5307",
          "typeOfStateId": "state",
          "$connId": "con_378",
          "$id": "fcdffc18-7d0a-44d7-a683-f2d2c7c0a7fb",
          "conditions": [{ "source": "input", "comparison": "notExists", "values": [] }],
          "$invalid": false
        },
        {
          "stateId": "612504e1-2c55-40a0-aebc-3d0012f97604",
          "typeOfStateId": "state",
          "$connId": "con_383",
          "$id": "d7fc2758-1ff4-45df-ba16-c2fd871b8a7d",
          "conditions": [{ "source": "input", "comparison": "exists", "values": [] }],
          "$invalid": false
        }
      ],
      "$enteringCustomActions": [
        {
          "$id": "c7eeb51f-7079-47f1-8aba-1ae3fce2c607",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - inactivityBlock5DataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "{{resource.function_isCommercialHours}}\r\n\r\nfunction run(nextStep) {\r\n  try {\r\n    const headerMsg = getMsgByNextStep(nextStep)\r\n\r\n    const checkedHeaderMsg = isCommercialHours() ? headerMsg : \"\"\r\n\r\n    const dataMenu = {\r\n      checkedHeaderMsg,\r\n      menuType: \"text\",\r\n    };\r\n\r\n    return dataMenu;\r\n  } catch (e) {\r\n    return { itBroked: true, brokenMsg: e.message };\r\n  }\r\n}\r\n\r\n\r\nfunction getMsgByNextStep(nextStep) {\r\n  const defaultMsg = \"Ainda não recebei sua responsta\";\r\n\r\n  const msgsPattern = { defaultInactivity: \"Escolha apenas uma das opções do menu\" };\r\n\r\n  const allMsgsByCategory = {\r\n    portabilityType: {\r\n      // askPortabilityType: [msgsPattern.defaultInactivity],\r\n      // askNewNumberDDD: [\"Por favor, digite apenas o DDD do telefone\"],\r\n      // askPortabilityNumber: [\"Por favor, digite o seu novo número\"],\r\n    },\r\n    plans: {\r\n      // askPlanPrincipalOffer: [msgsPattern.defaultInactivity],\r\n      // askPlans: [\"Escolha apenas um dos planos listados\"],\r\n      // askUpsell: [msgsPattern.defaultInactivity],\r\n      // askPlanOptional: [msgsPattern.defaultInactivity],\r\n      // askPlansAndPortabilityCheckout: [msgsPattern.defaultInactivity],\r\n      // askPlansAndPortabilityCorrection: [msgsPattern.defaultInactivity],\r\n    },\r\n    businessData: {\r\n      // askBusinessCNPJ: [\"Não entedi, informe apenas o CNPJ da empresa\"],\r\n      // askBusinessPhone: [\"Não entedi, informe apenas o telefone da empresa\"],\r\n      // askBusinessCPF: [\"Não entedi, informe apenas o CPF do responsável legal\"],\r\n      // askBusinessOwnerName: [\"Não entedi, informe apenas o telefone do responsável legal\"],\r\n      // askBusinessEmail: [\"Não entedi, informe apenas o E-mail do responsável legal\"],\r\n      // askBusinessRG: [\"Não entedi, informe apenas o RG do responsável legal\"],\r\n      // askBusinessCorrection: [msgsPattern.defaultInactivity],\r\n      // askBusinessCheckout: [msgsPattern.defaultInactivity],\r\n    },\r\n    payment: {\r\n      // askDueDay: [\"Selecione um dos dias de pagamento\"],\r\n    },\r\n    lgpd: {\r\n      // askTerms: [msgsPattern.menuSelection1],\r\n    },\r\n  };\r\n\r\n  const allMsgsInUniqueObject = Object.values(allMsgsByCategory).reduce((acc, categoryData) => {\r\n    acc = { ...acc, ...categoryData };\r\n    return acc;\r\n  }, {});\r\n\r\n  const specificMsgByStep = allMsgsByCategory[nextStep] || defaultMsg\r\n\r\n  return specificMsgByStep\r\n\r\n}",
            "inputVariables": ["nextStepJs"],
            "outputVariable": "inactivityBlock5DataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "425bd57e-051f-4dc5-a27b-91a2b7eb6d7f",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - inactivityBlock5BuildJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "{{resource.functions_msgBuildJs}}",
            "inputVariables": ["channelJs", "formatterJson", "inactivityBlock5DataJs"],
            "outputVariable": "inactivityBlock5BuildJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": { "stateId": "fallback", "$invalid": false, "typeOfStateId": "state" },
      "$tags": [
        {
          "id": "blip-tag-bddb4776-85a3-4c20-a634-b03f872b51c8",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        },
        {
          "id": "blip-tag-be4f791c-aa3e-4557-866c-5b61ad5f2274",
          "label": "SendMessage",
          "background": "#EE82EE",
          "canChangeBackground": false
        },
        {
          "id": "blip-tag-a3540fbc-3b34-4c17-9239-12b1b16f71b9",
          "label": "UserInput",
          "background": "#000000",
          "canChangeBackground": false
        }
      ],
      "id": "115f748b-b0d0-4f69-b87c-85981c5477a4",
      "root": false,
      "$title": "inactivityBlock5",
      "$position": { "top": "3958px", "left": "2148px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false,
      "invalidOutputs": true,
      "isAiGenerated": false
    },
    "0ad15d5d-2e51-4122-8d99-87f8883b5307": {
      "$contentActions": [
        {
          "action": {
            "$id": "f889095b-1549-46b3-9be9-a00a6e412738",
            "$typeOfContent": "chat-state",
            "type": "SendMessage",
            "settings": {
              "id": "ff9dce54-d7aa-450c-b761-68478aef970c",
              "type": "application/vnd.lime.chatstate+json",
              "content": { "state": "composing", "interval": 1000 }
            },
            "$cardContent": {
              "document": {
                "id": "ff9dce54-d7aa-450c-b761-68478aef970c",
                "type": "application/vnd.lime.chatstate+json",
                "content": { "state": "composing", "interval": 1000 }
              },
              "editable": true,
              "deletable": true,
              "position": "left"
            }
          },
          "$invalid": false
        },
        {
          "action": {
            "$id": "59df7c8a-d08e-422f-8238-56090d7c0eae",
            "$typeOfContent": "raw-content",
            "type": "SendRawMessage",
            "settings": {
              "metadata": {},
              "type": "{{inactivityBlock5BuildJs@menuData.type}}",
              "rawContent": "{{inactivityBlock5BuildJs@menuData.content}}"
            }
          },
          "$invalid": false
        },
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "dafe1e38-6b51-4d20-a34e-398eed237a7c",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [
        {
          "stateId": "{{defaultBlocksIdsJs@broked}}",
          "typeOfStateId": "variable",
          "$id": "22c4fdb8-332c-4d47-81c2-e3dc476773ea",
          "conditions": [
            {
              "source": "context",
              "comparison": "equals",
              "values": ["true"],
              "variable": "processedMsgByBlockJs@isBroked"
            }
          ],
          "$invalid": false
        },
        {
          "stateId": "612504e1-2c55-40a0-aebc-3d0012f97604",
          "typeOfStateId": "state",
          "$connId": "con_388",
          "$id": "d7fc2758-1ff4-45df-ba16-c2fd871b8a7d",
          "conditions": [{ "source": "input", "comparison": "exists", "values": [] }],
          "$invalid": false
        }
      ],
      "$enteringCustomActions": [
        {
          "$id": "c7eeb51f-7079-47f1-8aba-1ae3fce2c607",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - inactivityBlock5DataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(nextStep) {\r\n  try {\r\n    const headerMsg = getMsgByNextStep(nextStep)\r\n\r\n    const dataMenu = {\r\n      headerMsg,\r\n      menuType: \"text\",\r\n    };\r\n\r\n    return dataMenu;\r\n  } catch (e) {\r\n    return { itBroked: true, brokenMsg: e.message };\r\n  }\r\n}\r\n\r\n\r\nfunction getMsgByNextStep(nextStep) {\r\n  const defaultMsg = \"😔 vou precisar encerrar nossa conversa.\";\r\n\r\n  const msgsPattern = { defaultInactivity: \"Escolha apenas uma das opções do menu\" };\r\n\r\n  const allMsgsByCategory = {\r\n    portabilityType: {\r\n      // askPortabilityType: [msgsPattern.defaultInactivity],\r\n      // askNewNumberDDD: [\"Por favor, digite apenas o DDD do telefone\"],\r\n      // askPortabilityNumber: [\"Por favor, digite o seu novo número\"],\r\n    },\r\n    plans: {\r\n      // askPlanPrincipalOffer: [msgsPattern.defaultInactivity],\r\n      // askPlans: [\"Escolha apenas um dos planos listados\"],\r\n      // askUpsell: [msgsPattern.defaultInactivity],\r\n      // askPlanOptional: [msgsPattern.defaultInactivity],\r\n      // askPlansAndPortabilityCheckout: [msgsPattern.defaultInactivity],\r\n      // askPlansAndPortabilityCorrection: [msgsPattern.defaultInactivity],\r\n    },\r\n    businessData: {\r\n      // askBusinessCNPJ: [\"Não entedi, informe apenas o CNPJ da empresa\"],\r\n      // askBusinessPhone: [\"Não entedi, informe apenas o telefone da empresa\"],\r\n      // askBusinessCPF: [\"Não entedi, informe apenas o CPF do responsável legal\"],\r\n      // askBusinessOwnerName: [\"Não entedi, informe apenas o telefone do responsável legal\"],\r\n      // askBusinessEmail: [\"Não entedi, informe apenas o E-mail do responsável legal\"],\r\n      // askBusinessRG: [\"Não entedi, informe apenas o RG do responsável legal\"],\r\n      // askBusinessCorrection: [msgsPattern.defaultInactivity],\r\n      // askBusinessCheckout: [msgsPattern.defaultInactivity],\r\n    },\r\n    payment: {\r\n      // askDueDay: [\"Selecione um dos dias de pagamento\"],\r\n    },\r\n    lgpd: {\r\n      // askTerms: [msgsPattern.menuSelection1],\r\n    },\r\n  };\r\n\r\n  const allMsgsInUniqueObject = Object.values(allMsgsByCategory).reduce((acc, categoryData) => {\r\n    acc = { ...acc, ...categoryData };\r\n    return acc;\r\n  }, {});\r\n\r\n  const specificMsgByStep = allMsgsByCategory[nextStep] || defaultMsg\r\n\r\n  return specificMsgByStep\r\n\r\n}",
            "inputVariables": ["nextStepJs"],
            "outputVariable": "inactivityBlock5DataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "425bd57e-051f-4dc5-a27b-91a2b7eb6d7f",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - inactivityBlock5BuildJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "{{resource.functions_msgBuildJs}}",
            "inputVariables": ["channelJs", "formatterJson", "inactivityBlock5DataJs"],
            "outputVariable": "inactivityBlock5BuildJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": { "stateId": "fallback", "$invalid": false, "typeOfStateId": "state" },
      "$tags": [
        {
          "id": "blip-tag-c2b44175-f21b-43d7-bba5-006bffd969b2",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        },
        {
          "id": "blip-tag-21d534dc-52e6-49d1-b0dd-049905c0d093",
          "label": "SendMessage",
          "background": "#EE82EE",
          "canChangeBackground": false
        },
        {
          "id": "blip-tag-dd5b34c1-b2ec-4dc9-808d-6e45bc5fd441",
          "label": "UserInput",
          "background": "#000000",
          "canChangeBackground": false
        }
      ],
      "id": "0ad15d5d-2e51-4122-8d99-87f8883b5307",
      "root": false,
      "$title": "msgFinalFromInactivity",
      "$position": { "top": "4128px", "left": "2389px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false,
      "invalidOutputs": true,
      "isAiGenerated": false
    },
    "a53f0c28-3305-43c3-adfe-31c173a2c2d5": {
      "$contentActions": [
        {
          "action": {
            "$id": "0c4e6914-c079-46ab-aa3f-5e9da1b07d36",
            "$typeOfContent": "chat-state",
            "type": "SendMessage",
            "settings": {
              "id": "43a8a4dc-7f8a-4224-b52a-a09dda05967f",
              "type": "application/vnd.lime.chatstate+json",
              "content": { "state": "composing", "interval": 1000 }
            },
            "$cardContent": {
              "document": {
                "id": "43a8a4dc-7f8a-4224-b52a-a09dda05967f",
                "type": "application/vnd.lime.chatstate+json",
                "content": { "state": "composing", "interval": 1000 }
              },
              "editable": true,
              "deletable": true,
              "position": "left"
            }
          },
          "$invalid": false
        },
        {
          "action": {
            "$id": "d83fb4f1-a6e6-4454-aad8-e3111045cc9e",
            "$typeOfContent": "text",
            "type": "SendMessage",
            "settings": {
              "id": "e91e1bff-82b3-43db-a51b-4b742a8777da",
              "type": "text/plain",
              "content": "Você é apenas um lead de teste na INATIVIDADE, tome cuidado, com grande poderes, tanto bate até que fura.",
              "metadata": {}
            },
            "$cardContent": {
              "document": {
                "id": "e91e1bff-82b3-43db-a51b-4b742a8777da",
                "type": "text/plain",
                "content": "Você é apenas um lead de teste na INATIVIDADE, tome cuidado, com grande poderes, tanto bate até que fura."
              },
              "editable": true,
              "deletable": true,
              "position": "left"
            }
          },
          "$invalid": false
        },
        {
          "input": {
            "bypass": false,
            "$cardContent": {
              "document": {
                "id": "37d04051-8ffb-4a4b-b3b4-5168ef4d1a60",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [],
      "$enteringCustomActions": [],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": {
        "stateId": "612504e1-2c55-40a0-aebc-3d0012f97604",
        "$invalid": false,
        "typeOfStateId": "state"
      },
      "isAiGenerated": false,
      "$tags": [
        {
          "id": "blip-tag-5931139b-c2f2-4be3-94f4-2b6387789dc8",
          "label": "SendMessage",
          "background": "#EE82EE",
          "canChangeBackground": false
        },
        {
          "id": "blip-tag-cef44160-ae0f-4168-8757-e774b290e63a",
          "label": "UserInput",
          "background": "#000000",
          "canChangeBackground": false
        }
      ],
      "id": "a53f0c28-3305-43c3-adfe-31c173a2c2d5",
      "root": false,
      "$title": "inactivityTestLead",
      "$position": { "top": "3770px", "left": "1177px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false
    },
    "7d0286db-d63a-4259-a427-077b86b5fd33": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "bd5c8d35-55a4-4c36-9019-aa54bd34b217",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [],
      "$enteringCustomActions": [
        {
          "$id": "4ca20277-aee4-455d-a578-83c18a74ff94",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - askClientNameDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run() {\r\n  try {\r\n\r\n    const dataMenu = {\r\n      headerMsg:\r\n        \"Por favor me informe o seu nome.\",\r\n      menuType: \"text\",\r\n      descriptionButtonName: \"\",\r\n      menuWithFreeInput: [\r\n        {\r\n          needRegexValidation: true,\r\n          identifier: \"{{nextStepJs}}\",\r\n        },\r\n      ]\r\n    };\r\n\r\n\r\n    return dataMenu\r\n  } catch (e) {\r\n    return { itBroked: true, brokenMsg: e.message };\r\n  }\r\n}",
            "inputVariables": [],
            "outputVariable": "askClientNameDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "f43e668e-47fb-4960-a00c-9a229159a3e7",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - currentMenuDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "{{resource.function_currentMenuData}}",
            "inputVariables": ["askClientNameDataJs"],
            "outputVariable": "currentMenuDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": {
        "stateId": "bb93536d-668f-4683-95bd-ea547d6051bd",
        "$invalid": false,
        "typeOfStateId": "state"
      },
      "$tags": [
        {
          "id": "blip-tag-95434011-709d-4ae7-80e4-387e9cbba8de",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        }
      ],
      "id": "7d0286db-d63a-4259-a427-077b86b5fd33",
      "root": false,
      "$title": "askClientName",
      "$position": { "top": "2504.67px", "left": "5469px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false,
      "invalidOutputs": true,
      "isAiGenerated": false
    },
    "bc26aeb6-deb5-4287-98d2-d04a6d84efd7": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "bd5c8d35-55a4-4c36-9019-aa54bd34b217",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [],
      "$enteringCustomActions": [
        {
          "$id": "4ca20277-aee4-455d-a578-83c18a74ff94",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - askHaveDependentDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run() {\r\n  try {\r\n\r\n    const dataMenu = {\r\n      headerMsg:\r\n        \"Gostaria de adicionar um dependente\",\r\n      menuType: \"menu\",\r\n      descriptionButtonName: \"\",\r\n      allMenuOptions: [\r\n        {\r\n          sectionTitle: \"\",\r\n          allSectionOptions: [\r\n            {\r\n              title: \"Sim\",\r\n              description: \"\",\r\n              identifier: \"{{nextStepJs}}\",\r\n              active: true,\r\n              extras: { userInput: \"hasDependent\", updateSpecificCampaignName: true },\r\n            },\r\n            {\r\n              title: \"Não\",\r\n              description: \"\",\r\n              identifier: \"{{nextStepJs}}\",\r\n              active: true,\r\n              extras: { userInput: \"hasNotDependent\", updateSpecificCampaignName: true },\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n\r\n\r\n    return dataMenu\r\n  } catch (e) {\r\n    return { itBroked: true, brokenMsg: e.message };\r\n  }\r\n}\r\n",
            "inputVariables": [],
            "outputVariable": "askHaveDependentDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "47b6c8bc-a101-4883-ad29-fe6f2749f8d1",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - currentMenuDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "{{resource.function_currentMenuData}}",
            "inputVariables": ["askHaveDependentDataJs"],
            "outputVariable": "currentMenuDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": {
        "stateId": "bb93536d-668f-4683-95bd-ea547d6051bd",
        "$invalid": false,
        "typeOfStateId": "state"
      },
      "$tags": [
        {
          "id": "blip-tag-be693387-d217-4e7d-a83a-a0147217a9d8",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        }
      ],
      "id": "bc26aeb6-deb5-4287-98d2-d04a6d84efd7",
      "root": false,
      "$title": "askHaveDependent",
      "$position": { "top": "2986px", "left": "5467.25px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false,
      "invalidOutputs": true,
      "isAiGenerated": false
    },
    "5808d06b-6f53-474b-baaf-8d0cab730dba": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "bd5c8d35-55a4-4c36-9019-aa54bd34b217",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [],
      "$enteringCustomActions": [
        {
          "$id": "4ca20277-aee4-455d-a578-83c18a74ff94",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - askDependentNameDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run() {\r\n  try {\r\n\r\n    const dataMenu = {\r\n      headerMsg:\r\n        \"Por favor me informe o nome do seu dependente.\",\r\n      menuType: \"text\",\r\n      descriptionButtonName: \"\",\r\n      menuWithFreeInput: [\r\n        {\r\n          needRegexValidation: true,\r\n          identifier: \"{{nextStepJs}}\",\r\n        },\r\n      ]\r\n    };\r\n\r\n\r\n    return dataMenu\r\n  } catch (e) {\r\n    return { itBroked: true, brokenMsg: e.message };\r\n  }\r\n}",
            "inputVariables": [],
            "outputVariable": "askDependentNameDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "f43e668e-47fb-4960-a00c-9a229159a3e7",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - currentMenuDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "{{resource.function_currentMenuData}}",
            "inputVariables": ["askDependentNameDataJs"],
            "outputVariable": "currentMenuDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": {
        "stateId": "bb93536d-668f-4683-95bd-ea547d6051bd",
        "$invalid": false,
        "typeOfStateId": "state"
      },
      "$tags": [
        {
          "id": "blip-tag-95434011-709d-4ae7-80e4-387e9cbba8de",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        }
      ],
      "id": "5808d06b-6f53-474b-baaf-8d0cab730dba",
      "root": false,
      "$title": "askDependentName",
      "$position": { "top": "2834px", "left": "5473px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false,
      "invalidOutputs": true,
      "isAiGenerated": false
    },
    "8329d86f-403c-40e4-84cc-b39b9263c02f": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "bd5c8d35-55a4-4c36-9019-aa54bd34b217",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [],
      "$enteringCustomActions": [
        {
          "$id": "4ca20277-aee4-455d-a578-83c18a74ff94",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - askDegreeOfDependentDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run() {\r\n  try {\r\n\r\n    const dataMenu = {\r\n      headerMsg:\r\n        \"Qual o parentesco?.\",\r\n      menuType: \"menu\",\r\n      descriptionButtonName: \"\",\r\n      allMenuOptions: [\r\n        {\r\n          sectionTitle: \"\",\r\n          allSectionOptions: [\r\n            {\r\n              title: \"Sim\",\r\n              description: \"\",\r\n              identifier: \"{{nextStepJs}}\",\r\n              active: true,\r\n              // extras: { userInput: \"hasDependent\", updateSpecificCampaignName: true },\r\n            },\r\n            {\r\n              title: \"Não\",\r\n              description: \"\",\r\n              identifier: \"{{nextStepJs}}\",\r\n              active: true,\r\n              // extras: { userInput: \"hasNotDependent\", updateSpecificCampaignName: true },\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n\r\n\r\n    return dataMenu\r\n  } catch (e) {\r\n    return { itBroked: true, brokenMsg: e.message };\r\n  }\r\n}",
            "inputVariables": [],
            "outputVariable": "askDegreeOfDependentDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "f43e668e-47fb-4960-a00c-9a229159a3e7",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - currentMenuDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "{{resource.function_currentMenuData}}",
            "inputVariables": ["askDegreeOfDependentDataJs"],
            "outputVariable": "currentMenuDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": {
        "stateId": "bb93536d-668f-4683-95bd-ea547d6051bd",
        "$invalid": false,
        "typeOfStateId": "state"
      },
      "$tags": [
        {
          "id": "blip-tag-95434011-709d-4ae7-80e4-387e9cbba8de",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        }
      ],
      "id": "8329d86f-403c-40e4-84cc-b39b9263c02f",
      "root": false,
      "$title": "askDegreeOfDependent",
      "$position": { "top": "3153px", "left": "5910.5px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false,
      "invalidOutputs": true,
      "isAiGenerated": false
    },
    "7bac90b8-d58b-4663-a15f-dbc2b0c1893d": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "bd5c8d35-55a4-4c36-9019-aa54bd34b217",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [],
      "$enteringCustomActions": [
        {
          "$id": "4ca20277-aee4-455d-a578-83c18a74ff94",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - askDependentCPFDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run() {\r\n  try {\r\n\r\n    const dataMenu = {\r\n      headerMsg:\r\n        \"Por favor me informe o seu CPF.\",\r\n      menuType: \"text\",\r\n      descriptionButtonName: \"\",\r\n      menuWithFreeInput: [\r\n        {\r\n          needRegexValidation: true,\r\n          identifier: \"{{nextStepJs}}\",\r\n        },\r\n      ]\r\n    };\r\n\r\n\r\n    return dataMenu\r\n  } catch (e) {\r\n    return { itBroked: true, brokenMsg: e.message };\r\n  }\r\n}",
            "inputVariables": [],
            "outputVariable": "askDependentCPFDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "ece2a2ef-bffc-4c78-b8a6-7d7514fed0e7",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - currentMenuDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "{{resource.function_currentMenuData}}",
            "inputVariables": ["askDependentCPFDataJs"],
            "outputVariable": "currentMenuDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": {
        "stateId": "bb93536d-668f-4683-95bd-ea547d6051bd",
        "$invalid": false,
        "typeOfStateId": "state"
      },
      "$tags": [
        {
          "id": "blip-tag-3b35a8c7-d978-46d4-93d1-53f49ce8d503",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        }
      ],
      "id": "7bac90b8-d58b-4663-a15f-dbc2b0c1893d",
      "root": false,
      "$title": "askDependentCPF",
      "$position": { "top": "3165px", "left": "5699.5px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false,
      "invalidOutputs": true,
      "isAiGenerated": false
    },
    "9168a6e1-a22d-4e39-a77d-4eb66d90ae09": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "bd5c8d35-55a4-4c36-9019-aa54bd34b217",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false,
          "$$hashKey": "object:28318"
        }
      ],
      "$conditionOutputs": [],
      "$enteringCustomActions": [
        {
          "$id": "4ca20277-aee4-455d-a578-83c18a74ff94",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - askPersonalDataCheckoutDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(userContext, allFlowStepsJs) {\r\n  try {\r\n    const menuHeaderMsg = mountMsgForHeader(userContext, allFlowStepsJs);\r\n\r\n    const dataMenu = {\r\n      headerMsg: menuHeaderMsg,\r\n      menuType: \"menu\",\r\n      descriptionButtonName: \"\",\r\n      allMenuOptions: [\r\n        {\r\n          sectionTitle: \"\",\r\n          allSectionOptions: [\r\n            {\r\n              title: \"Confirmar\",\r\n              description: \"\",\r\n              identifier: \"confirm\",\r\n              active: true,\r\n              extras: { ignoreUserContextRegister: true },\r\n            },\r\n            {\r\n              title: \"Não confirmar\",\r\n              description: \"\",\r\n              identifier: \"decline\",\r\n              active: true,\r\n              extras: {\r\n                ignoreUserContextRegister: true,\r\n                stepForTurnTrue: [\"askPersonalDataCorrection\"],\r\n              },\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n\r\n    return dataMenu;\r\n  } catch (e) {\r\n    return { itBroked: true, brokenMsg: e.message };\r\n  }\r\n}\r\n\r\nfunction mountMsgForHeader(userContext, allFlowStepsJs) {\r\n  const { askClientName, askClientCPF, askClientEmail, askDependentName, askDependentCPF } =\r\n    JSON.parse(userContext);\r\n\r\n  const allFlowStepsInArray = Object.keys(JSON.parse(allFlowStepsJs));\r\n\r\n  const allHeaderMsg = [];\r\n\r\n  allHeaderMsg.push(`Resumo do cadastro`);\r\n  allHeaderMsg.push(\"\");\r\n\r\n  if (allFlowStepsInArray.includes(\"askClientName\") && askClientName) {\r\n    allHeaderMsg.push(`Nome: ${askClientName}`);\r\n  }\r\n  if (allFlowStepsInArray.includes(\"askClientCPF\") && askClientCPF) {\r\n    allHeaderMsg.push(`CPF: ${formatCPF(askClientCPF)}`);\r\n  }\r\n  if (allFlowStepsInArray.includes(\"askClientEmail\") && askClientEmail) {\r\n    allHeaderMsg.push(`E-mail: ${askClientEmail}`);\r\n  }\r\n\r\n  // if (askDependentName || askDependentCPF) {\r\n  //   allHeaderMsg.push(\"\");\r\n  //   allHeaderMsg.push(`Dados do dependente:`);\r\n\r\n  //   if (allFlowStepsInArray.includes(\"askDependentName\") && askDependentName) {\r\n  //     allHeaderMsg.push(`Nome: ${askDependentName}`);\r\n  //   }\r\n  //   if (allFlowStepsInArray.includes(\"askDependentCPF\") && askDependentCPF) {\r\n  //     allHeaderMsg.push(`Cpf: ${formatCPF(askDependentCPF)}`);\r\n  //   }\r\n  // }\r\n\r\n  const mountedHeaderMsg = allHeaderMsg.join(\"{lineBreak}\");\r\n  return mountedHeaderMsg;\r\n}\r\n\r\nfunction formatCPF(inputCPF) {\r\n  const allCpfParts = {\r\n    first: inputCPF.slice(0, 3),\r\n    second: inputCPF.slice(3, 6),\r\n    third: inputCPF.slice(6, 9),\r\n    fourth: inputCPF.slice(9, 11),\r\n  };\r\n  const formattedCpfData = `${allCpfParts.first}.${allCpfParts.second}.${allCpfParts.third}-${allCpfParts.fourth}`;\r\n  return formattedCpfData;\r\n}\r\n",
            "inputVariables": ["userContextJs", "allFlowStepsJs"],
            "outputVariable": "askPersonalDataCheckoutDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "a99b79db-74ad-46ae-9d1e-0c92509500a0",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - currentMenuDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "{{resource.function_currentMenuData}}",
            "inputVariables": ["askPersonalDataCheckoutDataJs"],
            "outputVariable": "currentMenuDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": {
        "stateId": "bb93536d-668f-4683-95bd-ea547d6051bd",
        "$invalid": false,
        "typeOfStateId": "state"
      },
      "$tags": [
        {
          "id": "blip-tag-73d2e93b-6775-43fd-b0a8-50e13d3f2b30",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        }
      ],
      "id": "9168a6e1-a22d-4e39-a77d-4eb66d90ae09",
      "root": false,
      "$title": "askPersonalDataCheckout",
      "$position": { "top": "2673.5px", "left": "5477.75px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false,
      "invalidOutputs": true,
      "isAiGenerated": false
    },
    "117e6c40-1438-46d4-868a-9714afd3a3a1": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "bd5c8d35-55a4-4c36-9019-aa54bd34b217",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false,
          "$$hashKey": "object:17813"
        }
      ],
      "$conditionOutputs": [],
      "$enteringCustomActions": [
        {
          "$id": "4ca20277-aee4-455d-a578-83c18a74ff94",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - askAdhesionCheckoutDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(userContext, allFlowStepsJs) {\r\n  try {\r\n    const allMenuOptionsInSection = mountMenuOptions(userContext, allFlowStepsJs);\r\n\r\n    const dataMenu = {\r\n      headerMsg: \"Qual dado você gostaria de corrigir\",\r\n      menuType: \"menu\",\r\n      descriptionButtonName: \"\",\r\n      allMenuOptions: [\r\n        {\r\n          sectionTitle: \"\",\r\n          allSectionOptions: allMenuOptionsInSection,\r\n        },\r\n      ],\r\n    };\r\n\r\n    return dataMenu;\r\n  } catch (e) {\r\n    return { itBroked: true, brokenMsg: e.message };\r\n  }\r\n}\r\n\r\nfunction mountMenuOptions(userContext, allFlowStepsJs) {\r\n  const { askClientName, askClientCPF, askClientEmail, askDependentName, askDependentCPF } =\r\n    JSON.parse(userContext);\r\n\r\n  const allFlowStepsInArray = Object.keys(JSON.parse(allFlowStepsJs));\r\n\r\n  const allMenuOption = [];\r\n\r\n  if (allFlowStepsInArray.includes(askClientName) && askClientName) {\r\n    allMenuOption.push({\r\n      title: \"Nome\",\r\n      description: \"\",\r\n      identifier: \"changeData\",\r\n      active: true,\r\n      extras: {\r\n        ignoreUserContextRegister: true,\r\n        stepForTurnTrue: [\"askClientName\"],\r\n        stepForTurnFalse: [\"askPersonalDataCorrection\"],\r\n      },\r\n    });\r\n  }\r\n  if (allFlowStepsInArray.includes(askClientCPF) && askClientCPF) {\r\n    allMenuOption.push({\r\n      title: \"CPF\",\r\n      description: \"\",\r\n      identifier: \"changeData\",\r\n      active: true,\r\n      extras: {\r\n        ignoreUserContextRegister: true,\r\n        stepForTurnTrue: [\"askClientCPF\"],\r\n        stepForTurnFalse: [\"askPersonalDataCorrection\"],\r\n      },\r\n    });\r\n  }\r\n  if (allFlowStepsInArray.includes(askClientEmail) && askClientEmail) {\r\n    allMenuOption.push({\r\n      title: \"E-mail\",\r\n      description: \"\",\r\n      identifier: \"changeData\",\r\n      active: true,\r\n      extras: {\r\n        ignoreUserContextRegister: true,\r\n        stepForTurnTrue: [\"askClientEmail\"],\r\n        stepForTurnFalse: [\"askPersonalDataCorrection\"],\r\n      },\r\n    });\r\n  }\r\n  // if (allFlowStepsInArray.includes(askDependentName) && askDependentName) {\r\n  //   allMenuOption.push({\r\n  //     title: \"Nome do dependente\",\r\n  //     description: \"\",\r\n  //     identifier: \"changeData\",\r\n  //     active: true,\r\n  //     extras: {\r\n  //       ignoreUserContextRegister: true,\r\n  //       stepForTurnTrue: [\"askDependentName\"],\r\n  //       stepForTurnFalse: [\"askPersonalDataCorrection\"],\r\n  //     },\r\n  //   });\r\n  // }\r\n  // if (allFlowStepsInArray.includes(askDependentCPF) && askDependentCPF) {\r\n  //   allMenuOption.push({\r\n  //     title: \"CPF do dependente\",\r\n  //     description: \"\",\r\n  //     identifier: \"changeData\",\r\n  //     active: true,\r\n  //     extras: {\r\n  //       ignoreUserContextRegister: true,\r\n  //       stepForTurnTrue: [\"askDependentCPF\"],\r\n  //       stepForTurnFalse: [\"askPersonalDataCorrection\"],\r\n  //     },\r\n  //   });\r\n  }\r\n\r\n\r\n  return allMenuOption;\r\n}\r\n",
            "inputVariables": ["userContextJs", "allFlowStepsJs"],
            "outputVariable": "askAdhesionCheckoutDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "a50431c9-68b3-46d9-9eb0-8d24226f9364",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - currentMenuDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "{{resource.function_currentMenuData}}",
            "inputVariables": ["askAdhesionCheckoutDataJs"],
            "outputVariable": "currentMenuDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": {
        "stateId": "bb93536d-668f-4683-95bd-ea547d6051bd",
        "$invalid": false,
        "typeOfStateId": "state"
      },
      "$tags": [
        {
          "id": "blip-tag-4d082220-e666-49c2-8f21-7b262ad23ef2",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        }
      ],
      "id": "117e6c40-1438-46d4-868a-9714afd3a3a1",
      "root": false,
      "$title": "askPersonalDataCorrection",
      "$position": { "top": "2687.5px", "left": "5697px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false,
      "invalidOutputs": true,
      "isAiGenerated": false
    },
    "ef9db071-9295-4247-9e58-385a5ab1e418": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "bd5c8d35-55a4-4c36-9019-aa54bd34b217",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [],
      "$enteringCustomActions": [
        {
          "$id": "4ca20277-aee4-455d-a578-83c18a74ff94",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - askAddressCorrectionDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(userContext, allFlowStepsJs) {\r\n  try {\r\n    const allMenuOptionsInSection = mountMenuOptions(userContext, allFlowStepsJs);\r\n\r\n    const dataMenu = {\r\n      headerMsg: \"Qual dado você gostaria de corrigir?\",\r\n      menuType: \"menu\",\r\n      descriptionButtonName: \"\",\r\n      allMenuOptions: [\r\n        {\r\n          sectionTitle: \"\",\r\n          allSectionOptions: allMenuOptionsInSection,\r\n        },\r\n      ],\r\n    };\r\n\r\n    return dataMenu;\r\n  } catch (e) {\r\n    return { itBroked: true, brokenMsg: e.message };\r\n  }\r\n}\r\n\r\nfunction mountMenuOptions(userContext, allFlowStepsJs) {\r\n  const { askZipCode, askNumber, askComplement, askRoadName, askNeighborhood, askStreetBlock, askStreetLot } =\r\n    JSON.parse(userContext);\r\n\r\n  const allFlowStepsInArray = Object.keys(JSON.parse(allFlowStepsJs));\r\n\r\n  const allMenuOption = [];\r\n\r\n  if (allFlowStepsInArray.includes(\"askZipCode\") && askZipCode) {\r\n    allMenuOption.push({\r\n      title: \"CEP\",\r\n      description: \"\",\r\n      identifier: \"changeCEP\",\r\n      active: true,\r\n      extras: {\r\n        ignoreUserContextRegister: true,\r\n        stepForTurnTrue: [\"askZipCode\", \"apiGetDataByZipCode\", \"askNumber\", \"askComplement\"],\r\n        stepForTurnFalse: [\"askAddressCorrection\"],\r\n      },\r\n    });\r\n  }\r\n\r\n  if (allFlowStepsInArray.includes(\"askNumber\") && askNumber) {\r\n    allMenuOption.push({\r\n      title: \"Número\",\r\n      description: \"\",\r\n      identifier: \"changeNumber\",\r\n      active: true,\r\n      extras: {\r\n        ignoreUserContextRegister: true,\r\n        stepForTurnTrue: [\"askNumber\"],\r\n        stepForTurnFalse: [\"askAddressCorrection\"],\r\n      },\r\n    });\r\n  }\r\n\r\n  if (allFlowStepsInArray.includes(\"askRoadName\") && askRoadName) {\r\n    allMenuOption.push({\r\n      title: \"Rua\",\r\n      description: \"\",\r\n      identifier: \"changeRoadName\",\r\n      active: true,\r\n      extras: {\r\n        ignoreUserContextRegister: true,\r\n        stepForTurnTrue: [\"askRoadName\"],\r\n        stepForTurnFalse: [\"askAddressCorrection\"],\r\n      },\r\n    });\r\n  }\r\n\r\n  if (allFlowStepsInArray.includes(\"askNeighborhood\") && askNeighborhood) {\r\n    allMenuOption.push({\r\n      title: \"Bairro\",\r\n      description: \"\",\r\n      identifier: \"changeNeighborhood\",\r\n      active: true,\r\n      extras: {\r\n        ignoreUserContextRegister: true,\r\n        stepForTurnTrue: [\"askNeighborhood\"],\r\n        stepForTurnFalse: [\"askAddressCorrection\"],\r\n      },\r\n    });\r\n  }\r\n\r\n  if (allFlowStepsInArray.includes(\"askStreetBlock\") && askStreetBlock) {\r\n    allMenuOption.push({\r\n      title: \"Bloco\",\r\n      description: \"\",\r\n      identifier: \"changeBlockName\",\r\n      active: true,\r\n      extras: {\r\n        ignoreUserContextRegister: true,\r\n        stepForTurnTrue: [\"askStreetBlock\"],\r\n        stepForTurnFalse: [\"askAddressCorrection\"],\r\n      },\r\n    });\r\n  }\r\n\r\n  if (allFlowStepsInArray.includes(\"askStreetLot\") && askStreetLot) {\r\n    allMenuOption.push({\r\n      title: \"Lote\",\r\n      description: \"\",\r\n      identifier: \"changeLot\",\r\n      active: true,\r\n      extras: {\r\n        ignoreUserContextRegister: true,\r\n        stepForTurnTrue: [\"askStreetLot\"],\r\n        stepForTurnFalse: [\"askAddressCorrection\"],\r\n      },\r\n    });\r\n  }\r\n\r\n  if (allFlowStepsInArray.includes(\"askComplement\") && askComplement) {\r\n    allMenuOption.push({\r\n      title: \"Complemento\",\r\n      description: \"\",\r\n      identifier: \"changeComplement\",\r\n      active: true,\r\n      extras: {\r\n        ignoreUserContextRegister: true,\r\n        stepForTurnTrue: [\"askComplement\"],\r\n        stepForTurnFalse: [\"askAddressCorrection\"],\r\n      },\r\n    });\r\n  }\r\n\r\n  return allMenuOption;\r\n}",
            "inputVariables": ["userContextJs", "allFlowStepsJs"],
            "outputVariable": "askAddressCorrectionDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "64ce1b3d-2a8d-4763-8e07-abdc9f928a28",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - currentMenuDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "{{resource.function_currentMenuData}}",
            "inputVariables": ["askAddressCorrectionDataJs"],
            "outputVariable": "currentMenuDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": {
        "stateId": "bb93536d-668f-4683-95bd-ea547d6051bd",
        "$invalid": false,
        "typeOfStateId": "state"
      },
      "$tags": [
        {
          "id": "blip-tag-c392cac1-483e-461b-89be-5f3f2a3a2533",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        }
      ],
      "id": "ef9db071-9295-4247-9e58-385a5ab1e418",
      "root": false,
      "$title": "askAddressCorrection",
      "$position": { "top": "1282.67px", "left": "5494px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false,
      "invalidOutputs": true,
      "isAiGenerated": false
    },
    "0b1d39dc-53b1-4cb0-b7da-65982183c889": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "bd5c8d35-55a4-4c36-9019-aa54bd34b217",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [],
      "$enteringCustomActions": [
        {
          "$id": "4ca20277-aee4-455d-a578-83c18a74ff94",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - askPaymentTypeDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run() {\r\n  try {\r\n\r\n    const dataMenu = {\r\n      headerMsg:\r\n        \"Qual seria o métodos de pagamento\",\r\n      menuType: \"menu\",\r\n      descriptionButtonName: \"\",\r\n       allMenuOptions: [\r\n        {\r\n          sectionTitle: \"\",\r\n          allSectionOptions: [\r\n            {\r\n              title: \"Pix\",\r\n              description: \"\",\r\n              identifier: \"{{nextStepJs}}\",\r\n              active: true,\r\n              extras: { userInput: \"paymentMethodPix\", updateSpecificCampaignName: true },\r\n            },\r\n            {\r\n              title: \"Boleto\",\r\n              description: \"\",\r\n              identifier: \"{{nextStepJs}}\",\r\n              active: true,\r\n              extras: { userInput: \"paymentMethodBillet\", updateSpecificCampaignName: true },\r\n            },\r\n            {\r\n              title: \"Cartão de crédito\",\r\n              description: \"\",\r\n              identifier: \"{{nextStepJs}}\",\r\n              active: true,\r\n              extras: { userInput: \"paymentMethodCreditCard\", updateSpecificCampaignName: true },\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n\r\n\r\n    return dataMenu\r\n  } catch (e) {\r\n    return { itBroked: true, brokenMsg: e.message };\r\n  }\r\n}\r\n",
            "inputVariables": [],
            "outputVariable": "askPaymentTypeDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "8c9083de-34ba-4681-8c74-12c171b17965",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - currentMenuDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "{{resource.function_currentMenuData}}",
            "inputVariables": ["askPaymentTypeDataJs"],
            "outputVariable": "currentMenuDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": {
        "stateId": "bb93536d-668f-4683-95bd-ea547d6051bd",
        "$invalid": false,
        "typeOfStateId": "state"
      },
      "$tags": [
        {
          "id": "blip-tag-944eba1d-f9d6-4001-b63c-792ac6d6c1c7",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        }
      ],
      "id": "0b1d39dc-53b1-4cb0-b7da-65982183c889",
      "root": false,
      "$title": "askPaymentType",
      "$position": { "top": "3628px", "left": "5438px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false,
      "invalidOutputs": true,
      "isAiGenerated": false
    },
    "a1312dea-48b4-4b61-bf17-ac94beac66e9": {
      "$contentActions": [
        {
          "action": {
            "$id": "f889095b-1549-46b3-9be9-a00a6e412738",
            "$typeOfContent": "chat-state",
            "type": "SendMessage",
            "settings": {
              "id": "ff9dce54-d7aa-450c-b761-68478aef970c",
              "type": "application/vnd.lime.chatstate+json",
              "content": { "state": "composing", "interval": 1000 }
            },
            "$cardContent": {
              "document": {
                "id": "ff9dce54-d7aa-450c-b761-68478aef970c",
                "type": "application/vnd.lime.chatstate+json",
                "content": { "state": "composing", "interval": 1000 }
              },
              "editable": true,
              "deletable": true,
              "position": "left"
            }
          },
          "$invalid": false
        },
        {
          "action": {
            "$id": "59df7c8a-d08e-422f-8238-56090d7c0eae",
            "$typeOfContent": "raw-content",
            "type": "SendRawMessage",
            "settings": {
              "metadata": {},
              "type": "{{msgForPixBuildJs@menuData.type}}",
              "rawContent": "{{msgForPixBuildJs@menuData.content}}"
            }
          },
          "$invalid": false
        },
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "dafe1e38-6b51-4d20-a34e-398eed237a7c",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [
        {
          "stateId": "{{defaultBlocksIdsJs@broked}}",
          "typeOfStateId": "variable",
          "$id": "22c4fdb8-332c-4d47-81c2-e3dc476773ea",
          "conditions": [
            {
              "source": "context",
              "comparison": "equals",
              "values": ["true"],
              "variable": "processedMsgByBlockJs@isBroked"
            }
          ],
          "$invalid": false
        },
        {
          "stateId": "3daa5bec-e962-4030-b1d1-bef4d09a4a8e",
          "typeOfStateId": "state",
          "$connId": "con_393",
          "$id": "c6f6ce3b-51ac-47fe-8ec4-2954276c8598",
          "conditions": [{ "source": "input", "comparison": "exists", "values": [] }],
          "$invalid": false
        }
      ],
      "$enteringCustomActions": [
        {
          "$id": "c7eeb51f-7079-47f1-8aba-1ae3fce2c607",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - msgForPixDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run() {\r\n  try {\r\n    const dataMenu = {\r\n      headerMsg:\r\n        `Selecione um dos planos abaixo:`,\r\n      menuType: \"text\",\r\n    };\r\n\r\n    return dataMenu;\r\n  } catch (e) {\r\n    return { itBroked: true, brokenMsg: e.message };\r\n  }\r\n}\r\n",
            "inputVariables": [],
            "outputVariable": "msgForPixDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "425bd57e-051f-4dc5-a27b-91a2b7eb6d7f",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - msgForPixBuildJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "{{resource.functions_msgBuildJs}}",
            "inputVariables": ["channelJs", "formatterJson", "msgForPixDataJs"],
            "outputVariable": "msgForPixBuildJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": { "stateId": "fallback", "$invalid": false, "typeOfStateId": "state" },
      "$tags": [
        {
          "id": "blip-tag-149481a7-bab8-458e-91c2-939a607359e8",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        },
        {
          "id": "blip-tag-af194347-63d2-4cc0-a262-e1cbab29c85a",
          "label": "SendMessage",
          "background": "#EE82EE",
          "canChangeBackground": false
        }
      ],
      "id": "a1312dea-48b4-4b61-bf17-ac94beac66e9",
      "root": false,
      "$title": "msgForPix",
      "$position": { "top": "432px", "left": "5488.75px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false,
      "invalidOutputs": true,
      "isAiGenerated": false
    },
    "2d09b3b7-08a0-408b-8924-f957dc37c6f7": {
      "$contentActions": [
        {
          "action": {
            "$id": "f889095b-1549-46b3-9be9-a00a6e412738",
            "$typeOfContent": "chat-state",
            "type": "SendMessage",
            "settings": {
              "id": "ff9dce54-d7aa-450c-b761-68478aef970c",
              "type": "application/vnd.lime.chatstate+json",
              "content": { "state": "composing", "interval": 1000 }
            },
            "$cardContent": {
              "document": {
                "id": "ff9dce54-d7aa-450c-b761-68478aef970c",
                "type": "application/vnd.lime.chatstate+json",
                "content": { "state": "composing", "interval": 1000 }
              },
              "editable": true,
              "deletable": true,
              "position": "left"
            }
          },
          "$invalid": false
        },
        {
          "action": {
            "$id": "59df7c8a-d08e-422f-8238-56090d7c0eae",
            "$typeOfContent": "raw-content",
            "type": "SendRawMessage",
            "settings": {
              "metadata": {},
              "type": "{{msgForBilletBuildJs@menuData.type}}",
              "rawContent": "{{msgForBilletBuildJs@menuData.content}}"
            }
          },
          "$invalid": false
        },
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "dafe1e38-6b51-4d20-a34e-398eed237a7c",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [
        {
          "stateId": "{{defaultBlocksIdsJs@broked}}",
          "typeOfStateId": "variable",
          "$id": "22c4fdb8-332c-4d47-81c2-e3dc476773ea",
          "conditions": [
            {
              "source": "context",
              "comparison": "equals",
              "values": ["true"],
              "variable": "processedMsgByBlockJs@isBroked"
            }
          ],
          "$invalid": false
        },
        {
          "stateId": "3daa5bec-e962-4030-b1d1-bef4d09a4a8e",
          "typeOfStateId": "state",
          "$connId": "con_398",
          "$id": "c6f6ce3b-51ac-47fe-8ec4-2954276c8598",
          "conditions": [{ "source": "input", "comparison": "exists", "values": [] }],
          "$invalid": false
        }
      ],
      "$enteringCustomActions": [
        {
          "$id": "c7eeb51f-7079-47f1-8aba-1ae3fce2c607",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - msgForBilletDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run() {\r\n  try {\r\n    const dataMenu = {\r\n      headerMsg:\r\n        `Selecione um dos planos abaixo:`,\r\n      menuType: \"text\",\r\n    };\r\n\r\n    return dataMenu;\r\n  } catch (e) {\r\n    return { itBroked: true, brokenMsg: e.message };\r\n  }\r\n}\r\n",
            "inputVariables": [],
            "outputVariable": "msgForBilletDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "425bd57e-051f-4dc5-a27b-91a2b7eb6d7f",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - msgForBilletBuildJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "{{resource.functions_msgBuildJs}}",
            "inputVariables": ["channelJs", "formatterJson", "msgForBilletDataJs"],
            "outputVariable": "msgForBilletBuildJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": { "stateId": "fallback", "$invalid": false, "typeOfStateId": "state" },
      "$tags": [
        {
          "id": "blip-tag-149481a7-bab8-458e-91c2-939a607359e8",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        },
        {
          "id": "blip-tag-af194347-63d2-4cc0-a262-e1cbab29c85a",
          "label": "SendMessage",
          "background": "#EE82EE",
          "canChangeBackground": false
        }
      ],
      "id": "2d09b3b7-08a0-408b-8924-f957dc37c6f7",
      "root": false,
      "$title": "msgForBillet",
      "$position": { "top": "590.25px", "left": "5495.25px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false,
      "invalidOutputs": true,
      "isAiGenerated": false
    },
    "e3696983-388e-438d-be0c-c5fd96e4ee02": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "bd5c8d35-55a4-4c36-9019-aa54bd34b217",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [],
      "$enteringCustomActions": [
        {
          "$id": "4ca20277-aee4-455d-a578-83c18a74ff94",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - askFlowsCreditCardDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(channelJs) {\r\n  try {\r\n    if (channelJs == \"blip\") {\r\n      const dataMenu = { type: \"text/plain\", content: \"Flow no whatsApp, para seguir, usar #testData\" };\r\n      return dataMenu;\r\n    }\r\n\r\n    const dataMenu = {\r\n      type: \"application/json\",\r\n      content: {\r\n        recipient_type: \"individual\",\r\n        type: \"interactive\",\r\n        interactive: {\r\n          type: \"flow\",\r\n          header: {\r\n            type: \"text\",\r\n            text: \"Header\",\r\n          },\r\n          body: {\r\n            text: \"Body\",\r\n          },\r\n          footer: {\r\n            text: \"Footer\",\r\n          },\r\n          action: {\r\n            name: \"flow\",\r\n            parameters: {\r\n              flow_message_version: \"3\",\r\n              flow_id: \"1079031299778101\",\r\n              flow_cta: \"Dados legais\",\r\n              flow_action: \"navigate\",\r\n              flow_token: \"unused\",\r\n              flow_action_payload: {\r\n                screen: \"INFO_FLOWS\",\r\n              },\r\n            },\r\n          },\r\n        },\r\n      },\r\n    };\r\n\r\n    return dataMenu;\r\n  } catch (e) {\r\n    return { itBroked: true, brokenMsg: e.message };\r\n  }\r\n}\r\n",
            "inputVariables": ["channelJs"],
            "outputVariable": "askFlowsCreditCardDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "8c9083de-34ba-4681-8c74-12c171b17965",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - currentMenuDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "{{resource.function_currentMenuData}}",
            "inputVariables": ["askFlowsCreditCardDataJs"],
            "outputVariable": "currentMenuDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": {
        "stateId": "679cfdfb-588f-485b-90e4-acabf0da45c3",
        "$invalid": false,
        "typeOfStateId": "state"
      },
      "$tags": [
        {
          "id": "blip-tag-944eba1d-f9d6-4001-b63c-792ac6d6c1c7",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        }
      ],
      "id": "e3696983-388e-438d-be0c-c5fd96e4ee02",
      "root": false,
      "$title": "askFlowsCreditCard",
      "$position": { "top": "3641px", "left": "5679px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false,
      "invalidOutputs": true,
      "isAiGenerated": false
    },
    "679cfdfb-588f-485b-90e4-acabf0da45c3": {
      "$contentActions": [
        {
          "action": {
            "$id": "b0255671-cc9d-478d-be7b-48f8e1683635",
            "$typeOfContent": "chat-state",
            "type": "SendMessage",
            "settings": {
              "id": "9dbe84c2-a9d5-4767-8710-1aaf80211b87",
              "type": "application/vnd.lime.chatstate+json",
              "content": { "state": "composing", "interval": 1000 }
            },
            "$cardContent": {
              "document": {
                "id": "9dbe84c2-a9d5-4767-8710-1aaf80211b87",
                "type": "application/vnd.lime.chatstate+json",
                "content": { "state": "composing", "interval": 1000 }
              },
              "editable": true,
              "deletable": true,
              "position": "left"
            }
          },
          "$invalid": false
        },
        {
          "action": {
            "$id": "8d88a5bf-8042-4000-8e41-c5c2ac3fbcda",
            "$typeOfContent": "raw-content",
            "type": "SendRawMessage",
            "settings": {
              "metadata": {},
              "type": "{{currentMenuDataJs@type}}",
              "rawContent": "{{currentMenuDataJs@content}}"
            }
          },
          "$invalid": false
        },
        {
          "input": {
            "bypass": false,
            "$cardContent": {
              "document": {
                "id": "f37c4d80-7843-4526-9db5-e2b1f80dacdc",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false,
            "expiration": "0:5"
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [
        {
          "stateId": "{{defaultBlocksIdsJs@checkInactivityConditions}}",
          "typeOfStateId": "variable",
          "$id": "c9e2ed89-896a-41fb-bbcc-b3cc7307c12c",
          "conditions": [{ "source": "input", "comparison": "notExists", "values": [] }],
          "$invalid": false
        },
        {
          "stateId": "e56b261d-157d-462f-acb7-884d5015468a",
          "typeOfStateId": "state",
          "$connId": "con_403",
          "$id": "d1817c32-b2fe-4735-a4db-280be3189552",
          "conditions": [{ "source": "input", "comparison": "exists", "values": [] }],
          "$invalid": false
        }
      ],
      "$enteringCustomActions": [],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": { "stateId": "fallback", "$invalid": false },
      "isAiGenerated": false,
      "$tags": [],
      "id": "679cfdfb-588f-485b-90e4-acabf0da45c3",
      "root": false,
      "$title": "generickBlockForAskFlows",
      "$position": { "top": "3737.5px", "left": "6919px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false
    },
    "e56b261d-157d-462f-acb7-884d5015468a": {
      "$contentActions": [
        {
          "action": {
            "$id": "4247cf5f-0bae-4af7-86ac-1adad379b9a6",
            "$typeOfContent": "chat-state",
            "type": "SendMessage",
            "settings": {
              "id": "58527898-82c8-4ce0-9303-179abb428fff",
              "type": "application/vnd.lime.chatstate+json",
              "content": { "state": "composing", "interval": 1000 }
            },
            "$cardContent": {
              "document": {
                "id": "58527898-82c8-4ce0-9303-179abb428fff",
                "type": "application/vnd.lime.chatstate+json",
                "content": { "state": "composing", "interval": 1000 }
              },
              "editable": true,
              "deletable": true,
              "position": "left"
            }
          },
          "$invalid": false
        },
        {
          "action": {
            "$id": "9338106e-6155-4702-822e-e03e65b934d3",
            "$typeOfContent": "text",
            "type": "SendMessage",
            "settings": {
              "id": "446b2306-ffb3-46fa-9e45-53b8bd978428",
              "type": "text/plain",
              "content": "{{input.content}}",
              "metadata": {}
            },
            "$cardContent": {
              "document": {
                "id": "446b2306-ffb3-46fa-9e45-53b8bd978428",
                "type": "text/plain",
                "content": "{{input.content}}"
              },
              "editable": true,
              "deletable": true,
              "position": "left"
            }
          },
          "$invalid": false
        },
        {
          "action": {
            "$id": "7d3225d5-b17a-455a-8fbf-d4c6f2797813",
            "$typeOfContent": "chat-state",
            "type": "SendMessage",
            "settings": {
              "id": "12bcd6da-7a1f-4968-a9ab-9a2357eccb1f",
              "type": "application/vnd.lime.chatstate+json",
              "content": { "state": "composing", "interval": 1000 }
            },
            "$cardContent": {
              "document": {
                "id": "12bcd6da-7a1f-4968-a9ab-9a2357eccb1f",
                "type": "application/vnd.lime.chatstate+json",
                "content": { "state": "composing", "interval": 1000 }
              },
              "editable": true,
              "deletable": true,
              "position": "left"
            }
          },
          "$invalid": false
        },
        {
          "action": {
            "$id": "18e6a65d-37c0-4748-91a8-d76c7598b15e",
            "$typeOfContent": "select",
            "type": "SendMessage",
            "settings": {
              "id": "f66d9734-f9eb-4609-a20f-552e98d58a5a",
              "type": "application/vnd.lime.select+json",
              "content": {
                "text": "Select text",
                "options": [
                  { "text": "First option" },
                  { "text": "Second option" },
                  { "text": "Third option" }
                ]
              }
            },
            "$cardContent": {
              "document": {
                "id": "f66d9734-f9eb-4609-a20f-552e98d58a5a",
                "type": "application/vnd.lime.select+json",
                "content": {
                  "text": "Select text",
                  "options": [
                    { "text": "First option" },
                    { "text": "Second option" },
                    { "text": "Third option" }
                  ]
                }
              },
              "editable": true,
              "deletable": true,
              "position": "left"
            }
          },
          "$invalid": false
        },
        {
          "input": {
            "bypass": false,
            "$cardContent": {
              "document": {
                "id": "cbd30be7-a576-49fe-9d3c-9dfcc2a4feb0",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [
        {
          "stateId": "679cfdfb-588f-485b-90e4-acabf0da45c3",
          "typeOfStateId": "state",
          "$connId": "con_408",
          "$id": "6429348e-1d7c-4a43-a886-1eb2c2aa068d",
          "conditions": [{ "source": "input", "comparison": "exists", "values": [] }],
          "$invalid": false
        }
      ],
      "$enteringCustomActions": [],
      "$leavingCustomActions": [],
      "$inputSuggestions": ["First option", "Second option", "Third option"],
      "$defaultOutput": { "stateId": "fallback", "$invalid": false },
      "isAiGenerated": false,
      "$tags": [],
      "id": "e56b261d-157d-462f-acb7-884d5015468a",
      "root": false,
      "$title": "New block",
      "$position": { "top": "3753.75px", "left": "7214.5px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false
    },
    "e92e5a38-666f-4a32-948b-f817b6b2572a": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "bd5c8d35-55a4-4c36-9019-aa54bd34b217",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [],
      "$enteringCustomActions": [
        {
          "$id": "4ca20277-aee4-455d-a578-83c18a74ff94",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - askPaymentDataCheckoutDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(userContext, allFlowStepsJs) {\r\n  try {\r\n    const menuHeaderMsg = mountMsgForHeader(userContext, allFlowStepsJs);\r\n\r\n    const dataMenu = {\r\n      headerMsg: menuHeaderMsg,\r\n      menuType: \"menu\",\r\n      descriptionButtonName: \"\",\r\n      allMenuOptions: [\r\n        {\r\n          sectionTitle: \"\",\r\n          allSectionOptions: [\r\n            {\r\n              title: \"Confirmar\",\r\n              description: \"\",\r\n              identifier: \"confirm\",\r\n              active: true,\r\n              extras: { ignoreUserContextRegister: true },\r\n            },\r\n            {\r\n              title: \"Não confirmar\",\r\n              description: \"\",\r\n              identifier: \"decline\",\r\n              active: true,\r\n              extras: {\r\n                ignoreUserContextRegister: true,\r\n                stepForTurnTrue: [\"askPaymentCorrection\"],\r\n              },\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n\r\n    return dataMenu;\r\n  } catch (e) {\r\n    return { itBroked: true, brokenMsg: e.message };\r\n  }\r\n}\r\n\r\nfunction mountMsgForHeader(userContext, allFlowStepsJs) {\r\n  const { askClientName, askClientCPF, askClientEmail, askDependentName, askDependentCPF } =\r\n    JSON.parse(userContext);\r\n\r\n  const allFlowStepsInArray = Object.keys(JSON.parse(allFlowStepsJs));\r\n\r\n  const allHeaderMsg = [];\r\n\r\n  allHeaderMsg.push(`Resumo do cadastro`);\r\n  allHeaderMsg.push(\"\");\r\n\r\n  if (allFlowStepsInArray.includes(\"askClientName\") && askClientName) {\r\n    allHeaderMsg.push(`Nome: ${askClientName}`);\r\n  }\r\n  if (allFlowStepsInArray.includes(\"askClientCPF\") && askClientCPF) {\r\n    allHeaderMsg.push(`CPF: ${formatCPF(askClientCPF)}`);\r\n  }\r\n  if (allFlowStepsInArray.includes(\"askClientEmail\") && askClientEmail) {\r\n    allHeaderMsg.push(`E-mail: ${askClientEmail}`);\r\n  }\r\n\r\n  if (askDependentName || askDependentCPF) {\r\n    allHeaderMsg.push(\"\");\r\n    allHeaderMsg.push(`Dados do dependente:`);\r\n\r\n    if (allFlowStepsInArray.includes(\"askDependentName\") && askDependentName) {\r\n      allHeaderMsg.push(`Nome: ${askDependentName}`);\r\n    }\r\n    if (allFlowStepsInArray.includes(\"askDependentCPF\") && askDependentCPF) {\r\n      allHeaderMsg.push(`Cpf: ${formatCPF(askDependentCPF)}`);\r\n    }\r\n  }\r\n\r\n  const mountedHeaderMsg = allHeaderMsg.join(\"{lineBreak}\");\r\n  return mountedHeaderMsg;\r\n}\r\n\r\nfunction formatCPF(inputCPF) {\r\n  const allCpfParts = {\r\n    first: inputCPF.slice(0, 3),\r\n    second: inputCPF.slice(3, 6),\r\n    third: inputCPF.slice(6, 9),\r\n    fourth: inputCPF.slice(9, 11),\r\n  };\r\n  const formattedCpfData = `${allCpfParts.first}.${allCpfParts.second}.${allCpfParts.third}-${allCpfParts.fourth}`;\r\n  return formattedCpfData;\r\n}\r\n",
            "inputVariables": ["userContextJs", "allFlowStepsJs"],
            "outputVariable": "askPaymentDataCheckoutDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "a99b79db-74ad-46ae-9d1e-0c92509500a0",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - currentMenuDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "{{resource.function_currentMenuData}}",
            "inputVariables": ["askPaymentDataCheckoutDataJs"],
            "outputVariable": "currentMenuDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": {
        "stateId": "bb93536d-668f-4683-95bd-ea547d6051bd",
        "$invalid": false,
        "typeOfStateId": "state"
      },
      "$tags": [
        {
          "id": "blip-tag-73d2e93b-6775-43fd-b0a8-50e13d3f2b30",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        }
      ],
      "id": "e92e5a38-666f-4a32-948b-f817b6b2572a",
      "root": false,
      "$title": "askPaymentDataCheckout ??",
      "$position": { "top": "3924px", "left": "5452px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false,
      "invalidOutputs": true,
      "isAiGenerated": false
    },
    "f7362691-d3c0-490f-bee7-24244a6c3489": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "bd5c8d35-55a4-4c36-9019-aa54bd34b217",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [],
      "$enteringCustomActions": [
        {
          "$id": "4ca20277-aee4-455d-a578-83c18a74ff94",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - askPaymentCheckoutDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(userContext, allFlowStepsJs) {\r\n  try {\r\n    const allMenuOptionsInSection = mountMenuOptions(userContext, allFlowStepsJs);\r\n\r\n    const dataMenu = {\r\n      headerMsg: \"Qual dado você gostaria de corrigir\",\r\n      menuType: \"menu\",\r\n      descriptionButtonName: \"\",\r\n      allMenuOptions: [\r\n        {\r\n          sectionTitle: \"\",\r\n          allSectionOptions: allMenuOptionsInSection,\r\n        },\r\n      ],\r\n    };\r\n\r\n    return dataMenu;\r\n  } catch (e) {\r\n    return { itBroked: true, brokenMsg: e.message };\r\n  }\r\n}\r\n\r\nfunction mountMenuOptions(userContext, allFlowStepsJs) {\r\n  const { askClientName, askClientCPF, askClientEmail, askDependentName, askDependentCPF } =\r\n    JSON.parse(userContext);\r\n\r\n  const allFlowStepsInArray = Object.keys(JSON.parse(allFlowStepsJs));\r\n\r\n  const allMenuOption = [];\r\n\r\n  if (allFlowStepsInArray.includes(askClientName) && askClientName) {\r\n    allMenuOption.push({\r\n      title: \"Nome\",\r\n      description: \"\",\r\n      identifier: \"changeData\",\r\n      active: true,\r\n      extras: {\r\n        ignoreUserContextRegister: true,\r\n        stepForTurnTrue: [\"askClientName\"],\r\n        stepForTurnFalse: [\"askPaymentCorrection\"],\r\n      },\r\n    });\r\n  }\r\n  if (allFlowStepsInArray.includes(askClientCPF) && askClientCPF) {\r\n    allMenuOption.push({\r\n      title: \"CPF\",\r\n      description: \"\",\r\n      identifier: \"changeData\",\r\n      active: true,\r\n      extras: {\r\n        ignoreUserContextRegister: true,\r\n        stepForTurnTrue: [\"askClientCPF\"],\r\n        stepForTurnFalse: [\"askPaymentCorrection\"],\r\n      },\r\n    });\r\n  }\r\n  if (allFlowStepsInArray.includes(askClientEmail) && askClientEmail) {\r\n    allMenuOption.push({\r\n      title: \"E-mail\",\r\n      description: \"\",\r\n      identifier: \"changeData\",\r\n      active: true,\r\n      extras: {\r\n        ignoreUserContextRegister: true,\r\n        stepForTurnTrue: [\"askClientEmail\"],\r\n        stepForTurnFalse: [\"askPaymentCorrection\"],\r\n      },\r\n    });\r\n  }\r\n  if (allFlowStepsInArray.includes(askDependentName) && askDependentName) {\r\n    allMenuOption.push({\r\n      title: \"Nome do dependente\",\r\n      description: \"\",\r\n      identifier: \"changeData\",\r\n      active: true,\r\n      extras: {\r\n        ignoreUserContextRegister: true,\r\n        stepForTurnTrue: [\"askDependentName\"],\r\n        stepForTurnFalse: [\"askPaymentCorrection\"],\r\n      },\r\n    });\r\n  }\r\n  if (allFlowStepsInArray.includes(askDependentCPF) && askDependentCPF) {\r\n    allMenuOption.push({\r\n      title: \"CPF do dependente\",\r\n      description: \"\",\r\n      identifier: \"changeData\",\r\n      active: true,\r\n      extras: {\r\n        ignoreUserContextRegister: true,\r\n        stepForTurnTrue: [\"askDependentCPF\"],\r\n        stepForTurnFalse: [\"askPaymentCorrection\"],\r\n      },\r\n    });\r\n  }\r\n\r\n\r\n  return allMenuOption;\r\n}\r\n",
            "inputVariables": ["userContextJs", "allFlowStepsJs"],
            "outputVariable": "askPaymentCheckoutDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "a50431c9-68b3-46d9-9eb0-8d24226f9364",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - currentMenuDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "{{resource.function_currentMenuData}}",
            "inputVariables": ["askPaymentCheckoutDataJs"],
            "outputVariable": "currentMenuDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": {
        "stateId": "bb93536d-668f-4683-95bd-ea547d6051bd",
        "$invalid": false,
        "typeOfStateId": "state"
      },
      "$tags": [
        {
          "id": "blip-tag-4d082220-e666-49c2-8f21-7b262ad23ef2",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        }
      ],
      "id": "f7362691-d3c0-490f-bee7-24244a6c3489",
      "root": false,
      "$title": "askPaymentCorrection ??",
      "$position": { "top": "3928px", "left": "5664px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false,
      "invalidOutputs": true,
      "isAiGenerated": false
    },
    "dbf99580-09e8-4b91-ae99-77ee44d0fce8": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "bd5c8d35-55a4-4c36-9019-aa54bd34b217",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [],
      "$enteringCustomActions": [
        {
          "$id": "4ca20277-aee4-455d-a578-83c18a74ff94",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - askStreetLotDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run() {\r\n  try {\r\n\r\n    const dataMenu = {\r\n      headerMsg:\r\n        \"Informe o bairro lote:\",\r\n      menuType: \"text\",\r\n      descriptionButtonName: \"\",\r\n      menuWithFreeInput: [\r\n        {\r\n          needRegexValidation: true,\r\n          identifier: \"{{nextStepJs}}\",\r\n        },\r\n      ]\r\n    };\r\n\r\n\r\n    return dataMenu\r\n  } catch (e) {\r\n    return { itBroked: true, brokenMsg: e.message };\r\n  }\r\n}\r\n",
            "inputVariables": [],
            "outputVariable": "askStreetLotDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "fc548379-5391-4f05-b92d-e65ddf91a818",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - currentMenuDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "{{resource.function_currentMenuData}}",
            "inputVariables": ["askStreetLotDataJs"],
            "outputVariable": "currentMenuDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": {
        "stateId": "bb93536d-668f-4683-95bd-ea547d6051bd",
        "$invalid": false,
        "typeOfStateId": "state"
      },
      "$tags": [
        {
          "id": "blip-tag-6d061958-f9c9-49d4-b31f-6b498432f1e5",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        }
      ],
      "id": "dbf99580-09e8-4b91-ae99-77ee44d0fce8",
      "root": false,
      "$title": "askStreetLot",
      "$position": { "top": "1107.67px", "left": "5946px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false,
      "invalidOutputs": true,
      "isAiGenerated": false
    },
    "64c91d30-5a8b-4ead-bee9-b851d206688a": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "bd5c8d35-55a4-4c36-9019-aa54bd34b217",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [],
      "$enteringCustomActions": [
        {
          "$id": "4ca20277-aee4-455d-a578-83c18a74ff94",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - askStreetBlockDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run() {\r\n  try {\r\n\r\n    const dataMenu = {\r\n      headerMsg:\r\n        \"Informe o bloco:\",\r\n      menuType: \"text\",\r\n      descriptionButtonName: \"\",\r\n      menuWithFreeInput: [\r\n        {\r\n          needRegexValidation: true,\r\n          identifier: \"{{nextStepJs}}\",\r\n        },\r\n      ]\r\n    };\r\n\r\n\r\n    return dataMenu\r\n  } catch (e) {\r\n    return { itBroked: true, brokenMsg: e.message };\r\n  }\r\n}\r\n",
            "inputVariables": [],
            "outputVariable": "askStreetBlockDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "fc548379-5391-4f05-b92d-e65ddf91a818",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - currentMenuDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "{{resource.function_currentMenuData}}",
            "inputVariables": ["askStreetBlockDataJs"],
            "outputVariable": "currentMenuDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": {
        "stateId": "bb93536d-668f-4683-95bd-ea547d6051bd",
        "$invalid": false,
        "typeOfStateId": "state"
      },
      "$tags": [
        {
          "id": "blip-tag-6d061958-f9c9-49d4-b31f-6b498432f1e5",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        }
      ],
      "id": "64c91d30-5a8b-4ead-bee9-b851d206688a",
      "root": false,
      "$title": "askStreetBlock",
      "$position": { "top": "1120.67px", "left": "5718px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false,
      "invalidOutputs": true,
      "isAiGenerated": false
    },
    "f631f2da-acf3-43b9-9bd6-ec81a3310f4b": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "1e299b87-dbd0-494c-8b59-da3f9a056239",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false,
          "$$hashKey": "object:12457"
        }
      ],
      "$conditionOutputs": [
        {
          "stateId": "595a5f04-d0ba-4183-a514-7b0132b986f0",
          "typeOfStateId": "state",
          "$connId": "con_413",
          "$id": "4a478131-bab4-4b14-9d22-76c2e7f98982",
          "conditions": [
            {
              "source": "context",
              "comparison": "notExists",
              "values": [],
              "variable": "apiGetDataByZipCodeDataJs@itBroked",
              "$$hashKey": "object:12472"
            }
          ],
          "$invalid": false,
          "$$hashKey": "object:12459"
        }
      ],
      "$enteringCustomActions": [
        {
          "$id": "4234814d-7219-44b2-a87d-06e6465df9f9",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - apiGetDataByZipCodeDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(stateName) {\n  const requestContentTypeAndAccept = \"application/json\";\n\n  const formattedStateName = stateName[0].toUpperCase() + stateName.slice(1);\n\n  const allRequestData = {\n    contentType: requestContentTypeAndAccept,\n    accept: requestContentTypeAndAccept,\n    formattedStateName,\n  };\n\n  try {\n\n    allRequestData.urlRequest = \"https://microendereco.m2digital.com.br/consulta-localidade/{{userContextJs@askZipCode}}\"\n\n    return allRequestData;\n  } catch (e) {\n    return { itBroked: true, message: e.message };\n  }\n}\n",
            "inputVariables": ["state.name"],
            "outputVariable": "apiGetDataByZipCodeDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": {
        "stateId": "37f6ea15-cf65-4884-b3f8-d59043fcf767",
        "$invalid": false,
        "typeOfStateId": "state"
      },
      "isAiGenerated": false,
      "$tags": [
        {
          "id": "blip-tag-c33c8bf1-0362-4550-b107-861979700414",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        }
      ],
      "id": "f631f2da-acf3-43b9-9bd6-ec81a3310f4b",
      "root": false,
      "$title": "mountRequest - apiGetDataByZipCode",
      "$position": { "top": "4932.75px", "left": "5411.25px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false
    },
    "595a5f04-d0ba-4183-a514-7b0132b986f0": {
      "$contentActions": [
        {
          "action": {
            "$id": "8f4a37e3-65ca-40c9-b619-ce8a91e7a7ff",
            "$typeOfContent": "text",
            "type": "SendMessage",
            "settings": {
              "id": "df80518f-a563-4bb2-82e2-72b7441da58f",
              "type": "text/plain",
              "content": "{{apiGetDataByZipCodeDebugJs}}",
              "metadata": {}
            },
            "$cardContent": {
              "document": {
                "id": "df80518f-a563-4bb2-82e2-72b7441da58f",
                "type": "text/plain",
                "content": "{{apiGetDataByZipCodeDebugJs}}"
              },
              "editable": true,
              "deletable": true,
              "position": "left"
            }
          },
          "$invalid": false,
          "$$hashKey": "object:12612"
        },
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "1e299b87-dbd0-494c-8b59-da3f9a056239",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false,
          "$$hashKey": "object:12613"
        }
      ],
      "$conditionOutputs": [
        {
          "stateId": "2e20da85-31ce-46be-b276-7ad0e4eefe6f",
          "typeOfStateId": "state",
          "$connId": "con_418",
          "$id": "58e7e56f-e877-46c2-a425-fbac59f2dd60",
          "conditions": [
            {
              "source": "context",
              "comparison": "notExists",
              "values": [],
              "variable": "apiGetDataByZipCodeValidatedJs@itBroked",
              "$$hashKey": "object:12630"
            }
          ],
          "$invalid": false,
          "$$hashKey": "object:12617"
        }
      ],
      "$enteringCustomActions": [
        {
          "$id": "0aa2854c-e349-4b80-8b11-63f37537560a",
          "$typeOfContent": "",
          "type": "ProcessHttp",
          "$title": "Process http - apiGetDataByZipCode",
          "$invalid": false,
          "settings": {
            "headers": {
              "Content-Type": "{{apiGetDataByZipCodeDataJs@contentType}}",
              "Accept": "{{apiGetDataByZipCodeDataJs@accept}}"
            },
            "method": "GET",
            "uri": "{{apiGetDataByZipCodeDataJs@urlRequest}}",
            "responseStatusVariable": "statusApiGetDataByZipCode",
            "responseBodyVariable": "responseApiGetDataByZipCode"
          },
          "conditions": []
        },
        {
          "$id": "2a593879-d528-4c40-98c9-dbd6c2cdd08e",
          "$typeOfContent": "",
          "type": "ProcessHttp",
          "$title": "Process http - apiGetDataByZipCode - retry",
          "$invalid": false,
          "settings": {
            "headers": {
              "Content-Type": "{{apiGetDataByZipCodeDataJs@contentType}}",
              "Accept": "{{apiGetDataByZipCodeDataJs@accept}}"
            },
            "method": "GET",
            "uri": "{{apiGetDataByZipCodeDataJs@urlRequest}}",
            "responseStatusVariable": "statusApiGetDataByZipCode",
            "responseBodyVariable": "responseApiGetDataByZipCode"
          },
          "conditions": [
            {
              "values": ["200", "201"],
              "source": "context",
              "comparison": "notEquals",
              "variable": "statusApiGetDataByZipCode"
            }
          ]
        },
        {
          "$id": "6b0452f7-8d61-4675-bc0c-0ef6f977157c",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - apiGetDataByZipCodeValidatedJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(responseApi) {\n  try {\n    return { message: \"OK\" }\n    const dataWhoNeedExistInFirstObjectLvl = [\"city, state\"];\n\n    const checkedApiData = responseApi ? JSON.parse(responseApi) : {};\n\n    const hasAllDataInApi = dataWhoNeedExistInFirstObjectLvl.find(\n      (everyDataWhoNeedExist) => !checkedApiData[everyDataWhoNeedExist]\n    );\n\n    if (hasAllDataInApi) {\n      throw \"Data has not whats need in api\";\n    }\n\n    return { message: \"OK\" }\n  } catch (e) {\n    return { itBroked: true, message: e.message };\n  }\n}",
            "inputVariables": ["responseApiGetDataByZipCode"],
            "outputVariable": "apiGetDataByZipCodeValidatedJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "dadc8837-c838-4a57-a62c-48c47258180e",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - apiGetDataByZipCodeDebugJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(debugJs, formatterJson, apiData, status, response, apiValidation) {\r\n  try {\r\n    const debugMsg = [];\r\n\r\n    debugJs = JSON.parse(debugJs);\r\n\r\n    const { urlRequest, formattedStateName, body } = JSON.parse(apiData);\r\n    const bodyStringfied = formatBodyData(body);\r\n\r\n    const validationMessage = JSON.parse(apiValidation).message\r\n\r\n    if (debugJs) {\r\n      debugMsg.push(`{openBold}${formattedStateName} - ${validationMessage}{closeBold}`);\r\n      debugMsg.push(\"\");\r\n      debugMsg.push(`{openBold}url:{closeBold} ${urlRequest}`);\r\n      debugMsg.push(`{openBold}status${formattedStateName}:{closeBold} ${status}`);\r\n\r\n      if (bodyStringfied) {\r\n        debugMsg.push(\"\");\r\n        debugMsg.push(`{openBold}body:{closeBold} ${bodyStringfied}`);\r\n      }\r\n      debugMsg.push(\"\");\r\n      debugMsg.push(`{openBold}response${formattedStateName}:{closeBold} ${response}`);\r\n    }\r\n\r\n    const mountedDebugMsg = debugMsg.join(\"{lineBreak}\");\r\n\r\n    return formattedMsg(mountedDebugMsg, formatterJson);\r\n  } catch (e) {\r\n    return e;\r\n    return \"\";\r\n  }\r\n}\r\n\r\nfunction formattedMsg(message, formatterJson) {\r\n  try {\r\n    formatterJson = JSON.parse(formatterJson);\r\n    const { identifiers } = formatterJson;\r\n    let formattedMsg = message;\r\n    for (let everyFormatter in identifiers) {\r\n      formattedMsg = formattedMsg.replace(\r\n        new RegExp(identifiers[everyFormatter], \"g\"),\r\n        formatterJson[everyFormatter]\r\n      );\r\n    }\r\n    return formattedMsg;\r\n  } catch (e) {\r\n    return message;\r\n  }\r\n}\r\n\r\nfunction formatBodyData(body) {\r\n  if (body == null || body == undefined || body == \"\") {\r\n    return false;\r\n  }\r\n  return JSON.stringify(body);\r\n}",
            "inputVariables": [
              "debugJs",
              "formatterJson",
              "apiGetDataByZipCodeDataJs",
              "statusApiGetDataByZipCode",
              "responseApiGetDataByZipCode",
              "apiGetDataByZipCodeValidatedJs"
            ],
            "outputVariable": "apiGetDataByZipCodeDebugJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": [],
          "continueOnError": true
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": {
        "stateId": "37f6ea15-cf65-4884-b3f8-d59043fcf767",
        "$invalid": false,
        "typeOfStateId": "state"
      },
      "isAiGenerated": false,
      "$tags": [
        {
          "id": "blip-tag-d17c3aea-f3f3-4892-af5c-467281e22b7e",
          "label": "ProcessHttp",
          "background": "#7762E3",
          "canChangeBackground": false
        },
        {
          "id": "blip-tag-0dd3a2e8-a599-4bdb-9f33-69ca322065fd",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        },
        {
          "id": "blip-tag-5a30b4b3-f93a-42dd-a063-e3f476126da1",
          "label": "SendMessage",
          "background": "#EE82EE",
          "canChangeBackground": false
        }
      ],
      "id": "595a5f04-d0ba-4183-a514-7b0132b986f0",
      "root": false,
      "$title": "makeRequest - apiGetDataByZipCode",
      "$position": { "top": "4930.25px", "left": "5621.75px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false
    },
    "2e20da85-31ce-46be-b276-7ad0e4eefe6f": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "1e299b87-dbd0-494c-8b59-da3f9a056239",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false,
          "$$hashKey": "object:12305"
        }
      ],
      "$conditionOutputs": [
        {
          "stateId": "13cb82b3-1bca-4bfa-a146-68dd400877f9",
          "typeOfStateId": "state",
          "$connId": "con_423",
          "$id": "b6636a69-6ed2-4379-9744-87afad6ac8cb",
          "conditions": [
            { "source": "input", "comparison": "exists", "values": [], "$$hashKey": "object:12320" }
          ],
          "$invalid": false,
          "$$hashKey": "object:12307"
        }
      ],
      "$enteringCustomActions": [
        {
          "$id": "f57c0798-c45f-4cda-8daf-b45115483dda",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - getDataForUpdateUserContextJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(apiAddressResponse) {\n  try {\n    apiAddressResponse = JSON.parse(apiAddressResponse);\n    if (apiAddressResponse && apiAddressResponse[0]) {\n      const { ufe_sg, log_no, loc_no, bai_no } = apiAddressResponse[0];\n      const dataToReturn = {};\n\n      if (ufe_sg) {\n        dataToReturn.state = ufe_sg;\n      }\n      if (log_no) {\n        dataToReturn.askRoadName = log_no;\n      }\n      if (loc_no) {\n        dataToReturn.city = loc_no;\n      }\n      if (loc_no) {\n        dataToReturn.askNeighborhood = bai_no;\n      }\n\n      const allMountedDataKeys = Object.keys(dataToReturn);\n\n      const onlyValidData = allMountedDataKeys.reduce((acc, everyMountedData) => {\n        const dataByVariable = dataToReturn[everyMountedData];\n\n        const dataIsValid =\n          dataByVariable &&\n          dataByVariable != \"null\" &&\n          dataByVariable != \"\" &&\n          dataByVariable != \"false\" &&\n          dataByVariable != {};\n\n        if (dataIsValid) {\n          acc[everyMountedData] = dataByVariable;\n        }\n        return acc;\n      }, {});\n\n      const citesWhoNeed = [\"brasília\", \"bauru\", \"goiânia\"];\n\n      const checkedCityName = onlyValidData.city ? onlyValidData.city.toLowerCase() : \"false\";\n\n      const checkFieldWhoNeedByZipCode = citesWhoNeed.includes(checkedCityName)\n        ? \"addressWithBlockAndLot\"\n        : \"genericZipCode\";\n\n      onlyValidData.specificCampaignName = checkFieldWhoNeedByZipCode;\n\n      return onlyValidData;\n    }\n  } catch (e) {\n    return { itBroked: true, brokenMsg: e.message };\n  }\n}",
            "inputVariables": ["responseApiGetDataByZipCode"],
            "outputVariable": "getDataForUpdateUserContextJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": { "stateId": "fallback", "$invalid": false },
      "isAiGenerated": false,
      "$tags": [
        {
          "id": "blip-tag-4dd178a3-53d3-4acd-b6e0-7502441aa042",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        }
      ],
      "id": "2e20da85-31ce-46be-b276-7ad0e4eefe6f",
      "root": false,
      "$title": "mountDataForBot - apiGetDataByZipCode",
      "$position": { "top": "4932.75px", "left": "5843px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false
    },
    "cc8ddc3c-9e25-4bbf-b4a0-fd47de2467db": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "ab150de8-0249-4cad-8e42-34571c556574",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [
        {
          "stateId": "414a4d5c-380d-443c-9c3d-ac8977c4b72d",
          "typeOfStateId": "state",
          "$connId": "con_428",
          "$id": "6bdc620f-4684-4de5-b8ab-8550a987416b",
          "conditions": [{ "source": "input", "comparison": "exists", "values": [] }],
          "$invalid": false
        }
      ],
      "$enteringCustomActions": [
        {
          "$id": "056507bc-45ac-4855-9bbd-a1e9d7c769c7",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - allFlowStepsJs - update",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(allFlowSteps, userContext) {\n  try {\n    allFlowSteps = JSON.parse(allFlowSteps);\n    userContext = JSON.parse(userContext);\n\n    const onlyTrueSteps = Object.keys(allFlowSteps).filter((everyStep) => allFlowSteps[everyStep]);\n\n    onlyTrueSteps.forEach((everyTrueStep) => {\n      const hasValidDataInUserContext =\n        userContext[everyTrueStep] &&\n        userContext[everyTrueStep] != \"null\" &&\n        userContext[everyTrueStep] != \"false\" &&\n        userContext[everyTrueStep] != \"\";\n\n      if (hasValidDataInUserContext) {\n        allFlowSteps[everyTrueStep] = false;\n      }\n    });\n\n    return allFlowSteps;\n  } catch (e) {\n    return allFlowSteps;\n  }\n}",
            "inputVariables": ["allFlowStepsJs", "userContextJs"],
            "outputVariable": "allFlowStepsJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": { "stateId": "fallback", "$invalid": false },
      "isAiGenerated": false,
      "$tags": [],
      "id": "cc8ddc3c-9e25-4bbf-b4a0-fd47de2467db",
      "root": false,
      "$title": "updateAllFlowStepsByUserContext",
      "$position": { "top": "2227.33px", "left": "2904.67px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false
    },
    "651e8a14-8abb-4e94-bfa6-44152a76c295": {
      "$contentActions": [
        {
          "action": {
            "$id": "e2c2537d-3b3d-49dd-b5de-60f814e63b74",
            "$typeOfContent": "chat-state",
            "type": "SendMessage",
            "settings": {
              "id": "f41b09ca-ed39-441c-83f5-c2e466dcc97f",
              "type": "application/vnd.lime.chatstate+json",
              "content": { "state": "composing", "interval": 1000 }
            },
            "$cardContent": {
              "document": {
                "id": "f41b09ca-ed39-441c-83f5-c2e466dcc97f",
                "type": "application/vnd.lime.chatstate+json",
                "content": { "state": "composing", "interval": 1000 }
              },
              "editable": true,
              "deletable": true,
              "position": "left"
            }
          },
          "$invalid": false
        },
        {
          "action": {
            "$id": "cfedff20-2abf-4661-a1fa-eb0b92776dc5",
            "$typeOfContent": "text",
            "type": "SendMessage",
            "settings": {
              "id": "925ce1db-a203-4de2-b50c-f604a53bdf17",
              "type": "text/plain",
              "content": "menuAllPlansBuildJs\n{{menuAllPlansBuildJs}}",
              "metadata": {}
            },
            "$cardContent": {
              "document": {
                "id": "925ce1db-a203-4de2-b50c-f604a53bdf17",
                "type": "text/plain",
                "content": "menuAllPlansBuildJs\n{{menuAllPlansBuildJs}}"
              },
              "editable": true,
              "deletable": true,
              "position": "left"
            }
          },
          "$invalid": false
        },
        {
          "action": {
            "$id": "99fe40ba-0cab-45ce-bb6b-6d78d3ffe086",
            "$typeOfContent": "select",
            "type": "SendMessage",
            "settings": {
              "id": "d02d19fd-735f-4225-9de2-d0f029314a37",
              "type": "application/vnd.lime.select+json",
              "content": {
                "text": "Select text",
                "options": [{ "text": "First option", "previewText": "First option", "value": null }],
                "limitMenu": false
              },
              "metadata": {}
            },
            "$cardContent": {
              "document": {
                "id": "d02d19fd-735f-4225-9de2-d0f029314a37",
                "type": "application/vnd.lime.select+json",
                "content": {
                  "text": "Select text",
                  "options": [{ "text": "First option", "previewText": "First option", "value": null }],
                  "limitMenu": false
                }
              },
              "editable": true,
              "deletable": true,
              "position": "left"
            }
          },
          "$invalid": false
        },
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "42f9a669-81fe-4802-8bf0-048bc90a085e",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [
        {
          "stateId": "ff1273aa-085b-4cb5-bc35-a0f4bfabc3a9",
          "typeOfStateId": "state",
          "$connId": "con_433",
          "$id": "95e80185-ed7f-42b6-b825-5031575775bb",
          "conditions": [{ "source": "input", "comparison": "exists", "values": [] }],
          "$invalid": false
        }
      ],
      "$enteringCustomActions": [],
      "$leavingCustomActions": [],
      "$inputSuggestions": ["First option"],
      "$defaultOutput": { "stateId": "fallback", "$invalid": false },
      "isAiGenerated": false,
      "$tags": [],
      "id": "651e8a14-8abb-4e94-bfa6-44152a76c295",
      "root": false,
      "$title": "New block",
      "$position": { "top": "5413.25px", "left": "5809.75px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false
    },
    "035bfa3e-6f3a-4a49-b0bf-87ddb8fce176": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "bd5c8d35-55a4-4c36-9019-aa54bd34b217",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false,
          "$$hashKey": "object:25504"
        }
      ],
      "$conditionOutputs": [],
      "$enteringCustomActions": [
        {
          "$id": "4ca20277-aee4-455d-a578-83c18a74ff94",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - askPlanModalityDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run() {\r\n  try {\r\n\r\n    const dataMenu = {\r\n      headerMsg:\r\n        \"Gostaria de contratar o plano em qual modalidade?\",\r\n         menuType: \"menu\",\r\n      descriptionButtonName: \"\",\r\n      allMenuOptions: [\r\n        {\r\n          sectionTitle: \"\",\r\n          allSectionOptions: [\r\n            {\r\n              title: \"Anual\",\r\n              description: \"\",\r\n              identifier: \"{{nextStepJs}}\",\r\n              active: true,\r\n              extras: { userInput: \"Anual\" },\r\n            },\r\n            {\r\n              title: \"Mensal\",\r\n              description: \"\",\r\n              identifier: \"{{nextStepJs}}\",\r\n              active: true,\r\n              extras: { userInput: \"Mensal\" },\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n\r\n\r\n    return dataMenu\r\n  } catch (e) {\r\n    return { itBroked: true, brokenMsg: e.message };\r\n  }\r\n}",
            "inputVariables": [],
            "outputVariable": "askPlanModalityDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "f43e668e-47fb-4960-a00c-9a229159a3e7",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - currentMenuDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "{{resource.function_currentMenuData}}",
            "inputVariables": ["askPlanModalityDataJs"],
            "outputVariable": "currentMenuDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": {
        "stateId": "bb93536d-668f-4683-95bd-ea547d6051bd",
        "$invalid": false,
        "typeOfStateId": "state"
      },
      "$tags": [
        {
          "id": "blip-tag-95434011-709d-4ae7-80e4-387e9cbba8de",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        }
      ],
      "id": "035bfa3e-6f3a-4a49-b0bf-87ddb8fce176",
      "root": false,
      "$title": "askPlanModality",
      "$position": { "top": "1652px", "left": "5454px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false,
      "invalidOutputs": true,
      "isAiGenerated": false
    },
    "43b2f980-75df-4843-a66e-d3a962a203bd": {
      "$contentActions": [
        {
          "action": {
            "$id": "0f64ec44-2ff4-4fe4-a6a6-3300a3015f7f",
            "$typeOfContent": "chat-state",
            "type": "SendMessage",
            "settings": {
              "id": "d2822798-8f10-44c8-b97d-047caef6e329",
              "type": "application/vnd.lime.chatstate+json",
              "content": { "state": "composing", "interval": 1000 }
            },
            "$cardContent": {
              "document": {
                "id": "d2822798-8f10-44c8-b97d-047caef6e329",
                "type": "application/vnd.lime.chatstate+json",
                "content": { "state": "composing", "interval": 1000 }
              },
              "editable": true,
              "deletable": true,
              "position": "left"
            }
          },
          "$invalid": false
        },
        {
          "action": {
            "$id": "313b2783-82df-4d10-95c1-6a468f6f9f22",
            "$typeOfContent": "text",
            "type": "SendMessage",
            "settings": {
              "id": "c3a3fb09-e1ac-4666-9e8b-526d18e68479",
              "type": "text/plain",
              "content": "Este foi desabilitado. Se busca atendimento para Vivo Pessoa Física, entre em contato neste número: 10315",
              "metadata": {}
            },
            "$cardContent": {
              "document": {
                "id": "c3a3fb09-e1ac-4666-9e8b-526d18e68479",
                "type": "text/plain",
                "content": "Este foi desabilitado. Se busca atendimento para Vivo Pessoa Física, entre em contato neste número: 10315"
              },
              "editable": true,
              "deletable": true,
              "position": "left"
            }
          },
          "$invalid": false
        },
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "1e9b57b3-a501-4332-aacf-ecc1d6123749",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [
        {
          "stateId": "onboarding",
          "typeOfStateId": "state",
          "$connId": "con_438",
          "$id": "f0233d73-8499-4907-82a2-96a6168fb1f0",
          "conditions": [{ "source": "input", "comparison": "exists", "values": [] }],
          "$invalid": false
        }
      ],
      "$enteringCustomActions": [],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": { "stateId": "fallback", "$invalid": false },
      "isAiGenerated": false,
      "$tags": [],
      "id": "43b2f980-75df-4843-a66e-d3a962a203bd",
      "root": false,
      "$title": "msgForWhatsappClient",
      "$position": { "top": "2616.75px", "left": "1213px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false
    },
    "49e4aa9a-48d4-434d-b329-19eb518a9949": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "bd5c8d35-55a4-4c36-9019-aa54bd34b217",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false,
          "$$hashKey": "object:17105"
        }
      ],
      "$conditionOutputs": [],
      "$enteringCustomActions": [
        {
          "$id": "4ca20277-aee4-455d-a578-83c18a74ff94",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - askWantPlanAfterSeeMoreDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(userContext, menuAllPlansBuild) {\r\n  try {\r\n\r\n    const { idForSeeMorePlan } = JSON.parse(userContext)\r\n\r\n    menuAllPlansBuild = JSON.parse(menuAllPlansBuild)\r\n\r\n    const specificMenuData = menuAllPlansBuild[idForSeeMorePlan].completelyMenu\r\n\r\n    return specificMenuData\r\n  } catch (e) {\r\n    return { itBroked: true, brokenMsg: e.message };\r\n  }\r\n}\r\n",
            "inputVariables": ["userContextJs", "menuAllPlansBuildJs"],
            "outputVariable": "askWantPlanAfterSeeMoreDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "47b6c8bc-a101-4883-ad29-fe6f2749f8d1",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - currentMenuDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "{{resource.function_currentMenuData}}",
            "inputVariables": ["askWantPlanAfterSeeMoreDataJs"],
            "outputVariable": "currentMenuDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": {
        "stateId": "bb93536d-668f-4683-95bd-ea547d6051bd",
        "$invalid": false,
        "typeOfStateId": "state"
      },
      "$tags": [
        {
          "id": "blip-tag-be693387-d217-4e7d-a83a-a0147217a9d8",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        }
      ],
      "id": "49e4aa9a-48d4-434d-b329-19eb518a9949",
      "root": false,
      "$title": "askWantPlanAfterSeeMore",
      "$position": { "top": "1987px", "left": "5446px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false,
      "invalidOutputs": true,
      "isAiGenerated": false
    },
    "68cd0f0e-fafb-4c40-a046-356b0f2c2d43": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "6a9c6aa6-f2e3-4d00-99f2-3c4066830ef4",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false,
          "$$hashKey": "object:22150"
        }
      ],
      "$conditionOutputs": [
        {
          "stateId": "f60680a4-de38-49b1-9e7c-28c459611ed5",
          "typeOfStateId": "state",
          "$connId": "con_612",
          "$id": "c213fcb7-21af-4f92-bd02-78c2bc03a2e5",
          "conditions": [
            {
              "source": "context",
              "comparison": "equals",
              "values": ["logicUpdatePlanAfterSeeMore"],
              "$$hashKey": "object:22205",
              "variable": "nextStepJs"
            }
          ],
          "$invalid": false,
          "$$hashKey": "object:22154"
        },
        {
          "stateId": "ace85314-150e-4c4b-9e96-e830feb4aa0d",
          "typeOfStateId": "state",
          "$connId": "con_443",
          "$id": "a05f433b-8305-46b6-8df6-07acebca1fa3",
          "conditions": [
            {
              "source": "context",
              "comparison": "equals",
              "values": ["logicSaveSpecificDependentData"],
              "variable": "nextStepJs",
              "$$hashKey": "object:22171"
            }
          ],
          "$invalid": false,
          "$$hashKey": "object:22152"
        },
        {
          "stateId": "67ca1067-231e-4ded-a91f-23cde8a4dc54",
          "typeOfStateId": "state",
          "$connId": "con_515",
          "$id": "1830a245-5aa1-4fa3-bc0b-ee60a3c7c799",
          "conditions": [
            {
              "source": "context",
              "comparison": "equals",
              "values": ["logicExcludeSpecificDependent"],
              "variable": "nextStepJs",
              "$$hashKey": "object:22189"
            }
          ],
          "$invalid": false,
          "$$hashKey": "object:22153"
        }
      ],
      "$enteringCustomActions": [],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": { "stateId": "fallback", "$invalid": false },
      "isAiGenerated": false,
      "$tags": [],
      "id": "68cd0f0e-fafb-4c40-a046-356b0f2c2d43",
      "root": false,
      "$title": "goToSpecifcLogic",
      "$position": { "top": "4609px", "left": "4842.25px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false
    },
    "ace85314-150e-4c4b-9e96-e830feb4aa0d": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "a8aa5be5-074f-4ff1-ae4c-dc9456a3a3d1",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false,
          "$$hashKey": "object:3022"
        }
      ],
      "$conditionOutputs": [
        {
          "stateId": "8e4505a5-38e6-42c3-86ea-d5ac9d8daad0",
          "typeOfStateId": "state",
          "$connId": "con_448",
          "$id": "539cccac-4a00-462b-b958-2254c3b95293",
          "conditions": [
            { "source": "input", "comparison": "exists", "values": [], "$$hashKey": "object:3037" }
          ],
          "$invalid": false,
          "$$hashKey": "object:3024"
        }
      ],
      "$enteringCustomActions": [
        {
          "$id": "50665c84-cf41-45c2-9cfe-20070a91cca6",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - userContextJs - update",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "\nfunction run(userContext) {\n  try {\n    userContext = JSON.parse(userContext);\n\n    const { dependentsData, askDependentName, askDependentCPF, askDegreeOfDependent } = userContext;\n\n    if (askDependentName && askDependentCPF && askDegreeOfDependent) {\n      const checkedDependentsData = dependentsData || [];\n\n      const allDependentData = { askDependentName, askDependentCPF, askDegreeOfDependent };\n      checkedDependentsData.push(allDependentData);\n\n      userContext.dependentsData = checkedDependentsData;\n    }\n\n    userContext.askDependentName = null;\n    userContext.askDependentCPF = null;\n    userContext.askDegreeOfDependent = null;\n  } catch (e) {}\n  return userContext;\n}",
            "inputVariables": ["userContextJs"],
            "outputVariable": "userContextJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": { "stateId": "fallback", "$invalid": false },
      "isAiGenerated": false,
      "$tags": [],
      "id": "ace85314-150e-4c4b-9e96-e830feb4aa0d",
      "root": false,
      "$title": "logicSaveSpecificDependentData",
      "$position": { "top": "4635px", "left": "5216px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false
    },
    "8e4505a5-38e6-42c3-86ea-d5ac9d8daad0": {
      "$contentActions": [
        {
          "action": {
            "$id": "f20ea57f-9c4a-4bac-9916-bc212f45a712",
            "$typeOfContent": "chat-state",
            "type": "SendMessage",
            "settings": {
              "id": "1525f95e-c1fe-4a59-babd-7d7cfa072f07",
              "type": "application/vnd.lime.chatstate+json",
              "content": { "state": "composing", "interval": 1000 }
            },
            "$cardContent": {
              "document": {
                "id": "1525f95e-c1fe-4a59-babd-7d7cfa072f07",
                "type": "application/vnd.lime.chatstate+json",
                "content": { "state": "composing", "interval": 1000 }
              },
              "editable": true,
              "deletable": true,
              "position": "left"
            }
          },
          "$invalid": false,
          "$$hashKey": "object:3281"
        },
        {
          "action": {
            "$id": "2dc974c7-63b2-48c6-85f1-e2181113649c",
            "$typeOfContent": "text",
            "type": "SendMessage",
            "settings": {
              "id": "3110b272-acc8-4dff-b427-fd04dfc68044",
              "type": "text/plain",
              "content": "userContextJs\n{{userContextJs}}",
              "metadata": {}
            },
            "$cardContent": {
              "document": {
                "id": "3110b272-acc8-4dff-b427-fd04dfc68044",
                "type": "text/plain",
                "content": "userContextJs\n{{userContextJs}}"
              },
              "editable": true,
              "deletable": true,
              "position": "left"
            }
          },
          "$invalid": false,
          "$$hashKey": "object:3282"
        },
        {
          "action": {
            "$id": "f67a2a0f-53c5-4745-bd1d-70e9b5a57f1d",
            "$typeOfContent": "chat-state",
            "type": "SendMessage",
            "settings": {
              "id": "9e2b6851-4ed3-4c2b-ab77-d127fdbe563a",
              "type": "application/vnd.lime.chatstate+json",
              "content": { "state": "composing", "interval": 1000 }
            },
            "$cardContent": {
              "document": {
                "id": "9e2b6851-4ed3-4c2b-ab77-d127fdbe563a",
                "type": "application/vnd.lime.chatstate+json",
                "content": { "state": "composing", "interval": 1000 }
              },
              "editable": true,
              "deletable": true,
              "position": "left"
            }
          },
          "$invalid": false,
          "$$hashKey": "object:3283"
        },
        {
          "action": {
            "$id": "14039605-9baa-4bd1-a669-8210e674d637",
            "$typeOfContent": "select",
            "type": "SendMessage",
            "settings": {
              "id": "7ed2961d-f0da-4b41-b7b3-15bf25d44353",
              "type": "application/vnd.lime.select+json",
              "content": {
                "text": "Select text",
                "options": [{ "text": "First option", "previewText": "First option", "value": null }],
                "limitMenu": false
              },
              "metadata": {}
            },
            "$cardContent": {
              "document": {
                "id": "7ed2961d-f0da-4b41-b7b3-15bf25d44353",
                "type": "application/vnd.lime.select+json",
                "content": {
                  "text": "Select text",
                  "options": [{ "text": "First option", "previewText": "First option", "value": null }],
                  "limitMenu": false
                }
              },
              "editable": true,
              "deletable": true,
              "position": "left"
            }
          },
          "$invalid": false,
          "$$hashKey": "object:3284"
        },
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "8d9641de-6974-4949-8976-0111d4894e22",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false,
          "$$hashKey": "object:3285"
        }
      ],
      "$conditionOutputs": [
        {
          "stateId": "ff1273aa-085b-4cb5-bc35-a0f4bfabc3a9",
          "typeOfStateId": "state",
          "$connId": "con_453",
          "$id": "d5ef6fff-66e5-4669-b2c2-5e6b6d186e04",
          "conditions": [
            { "source": "input", "comparison": "exists", "values": [], "$$hashKey": "object:3309" }
          ],
          "$invalid": false,
          "$$hashKey": "object:3296"
        }
      ],
      "$enteringCustomActions": [],
      "$leavingCustomActions": [],
      "$inputSuggestions": ["First option"],
      "$defaultOutput": { "stateId": "fallback", "$invalid": false },
      "isAiGenerated": false,
      "$tags": [],
      "id": "8e4505a5-38e6-42c3-86ea-d5ac9d8daad0",
      "root": false,
      "$title": "New block",
      "$position": { "top": "4448px", "left": "5634px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false
    },
    "a5fbee8b-85cd-4d20-8c99-2f0de10c26e6": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "bd5c8d35-55a4-4c36-9019-aa54bd34b217",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false,
          "$$hashKey": "object:1245"
        }
      ],
      "$conditionOutputs": [],
      "$enteringCustomActions": [
        {
          "$id": "4ca20277-aee4-455d-a578-83c18a74ff94",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - askAddAnotherDependentDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(userContextJs) {\r\n  try {\r\n    const { dependentsData } = JSON.parse(userContextJs);\r\n\r\n    const hasAnyDependent = dependentsData && dependentsData.length > 0;\r\n\r\n    const headerMsgInArray = [];\r\n    if (hasAnyDependent) {\r\n      const allDependentData = mountDependentsData(dependentsData);\r\n      headerMsgInArray.push(...allDependentData);\r\n    }\r\n\r\n    headerMsgInArray.push(\"\");\r\n    headerMsgInArray.push(\"Como você gostaria de proceder?\");\r\n\r\n    const headerMsg = headerMsgInArray.join(\"{lineBreak}\");\r\n\r\n    const dataMenu = {\r\n      headerMsg,\r\n      menuType: \"menu\",\r\n      descriptionButtonName: \"\",\r\n      allMenuOptions: [\r\n        {\r\n          sectionTitle: \"\",\r\n          allSectionOptions: [\r\n            {\r\n              title: \"Adicionar dependente\",\r\n              description: \"\",\r\n              identifier: \"{{nextStepJs}}\",\r\n              active: true,\r\n              extras: { userInput: \"hasDependent\", updateSpecificCampaignName: true, stepForTurnFalse: [\"askDependentForExclude\"], },\r\n            },\r\n            {\r\n              title: \"Excluir dependente\",\r\n              description: \"\",\r\n              identifier: \"{{nextStepJs}}\",\r\n              active: true,\r\n              extras: {\r\n                stepForTurnTrue: [\"askDependentForExclude\"],\r\n                stepForTurnFalse: [\"askPersonalDataCorrection\"],\r\n              },\r\n            },\r\n            {\r\n              title: \"Continuar contratação\",\r\n              description: \"\",\r\n              identifier: \"{{nextStepJs}}\",\r\n              active: true,\r\n              extras: { stepForTurnFalse: [\"askDependentForExclude\"], },\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n\r\n    return dataMenu;\r\n  } catch (e) {\r\n    return { itBroked: true, brokenMsg: e.message };\r\n  }\r\n}\r\n\r\nfunction mountDependentsData(dependentsData) {\r\n  const pluralFormatter = dependentsData.length > 1 ? \"s\" : \"\";\r\n  const allDependentsData = dependentsData.reduce(\r\n    (acc, everyDependentData, index) => {\r\n      const { askDependentName, askDependentCPF, askDegreeOfDependent } = everyDependentData;\r\n\r\n      acc.push(``);\r\n      acc.push(`Dados do {openBold}dependente ${index + 1}{closeBold}`);\r\n      acc.push(`{openBold}Nome{closeBold}: ${askDependentName}`);\r\n      acc.push(`{openBold}CPF{closeBold}: ${askDependentCPF}`);\r\n      acc.push(`{openBold}Grau de parentesco{closeBold}: ${askDegreeOfDependent}`);\r\n\r\n      return acc;\r\n    },\r\n    [\r\n      `Confira abaixo o${pluralFormatter} dado${pluralFormatter} do${pluralFormatter} dependente${pluralFormatter}`,\r\n    ]\r\n  );\r\n  return allDependentsData;\r\n}\r\n",
            "inputVariables": ["userContextJs"],
            "outputVariable": "askAddAnotherDependentDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "f43e668e-47fb-4960-a00c-9a229159a3e7",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - currentMenuDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "{{resource.function_currentMenuData}}",
            "inputVariables": ["askAddAnotherDependentDataJs"],
            "outputVariable": "currentMenuDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": {
        "stateId": "bb93536d-668f-4683-95bd-ea547d6051bd",
        "$invalid": false,
        "typeOfStateId": "state"
      },
      "$tags": [
        {
          "id": "blip-tag-95434011-709d-4ae7-80e4-387e9cbba8de",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        }
      ],
      "id": "a5fbee8b-85cd-4d20-8c99-2f0de10c26e6",
      "root": false,
      "$title": "askAddAnotherDependent",
      "$position": { "top": "3158px", "left": "6126.5px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false,
      "invalidOutputs": true,
      "isAiGenerated": false
    },
    "f86ba324-37b3-49d2-9a8b-37ec4ed2683a": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "bd5c8d35-55a4-4c36-9019-aa54bd34b217",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false,
          "$$hashKey": "object:2256"
        }
      ],
      "$conditionOutputs": [],
      "$enteringCustomActions": [
        {
          "$id": "4ca20277-aee4-455d-a578-83c18a74ff94",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - askDependentForExcludeDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "\r\nfunction run(userContextJs) {\r\n  try {\r\n    const { dependentsData } = JSON.parse(userContextJs);\r\n\r\n    const allDependentsInMenuOption = mountDependentMenuOptions(dependentsData);\r\n\r\n    const dataMenu = {\r\n      headerMsg: \"Selecione abaixo o CPF do dependente que gostaria de excluir\",\r\n      menuType: \"menu\",\r\n      descriptionButtonName: \"\",\r\n      allMenuOptions: [\r\n        {\r\n          sectionTitle: \"\",\r\n          allSectionOptions: allDependentsInMenuOption,\r\n        },\r\n      ],\r\n    };\r\n\r\n    return dataMenu;\r\n  } catch (e) {\r\n    return { itBroked: true, brokenMsg: e.message };\r\n  }\r\n}\r\n\r\nfunction mountDependentMenuOptions(dependentsData) {\r\n  const allDependentsMenuData = dependentsData.map((everyDependentData) => {\r\n    const { askDependentCPF } = everyDependentData;\r\n    const menuByDependent = {\r\n      title: `CPF - ${askDependentCPF}`,\r\n      description: \"\",\r\n      identifier: \"{{nextStepJs}}\",\r\n      active: true,\r\n      extras: {\r\n        userInput: askDependentCPF,\r\n        stepForTurnTrue: [\"askAddAnotherDependent\", \"logicExcludeSpecificDependent\"],\r\n      },\r\n    };\r\n    return menuByDependent;\r\n  });\r\n  return allDependentsMenuData;\r\n}",
            "inputVariables": ["userContextJs"],
            "outputVariable": "askDependentForExcludeDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "f43e668e-47fb-4960-a00c-9a229159a3e7",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - currentMenuDataJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "{{resource.function_currentMenuData}}",
            "inputVariables": ["askDependentForExcludeDataJs"],
            "outputVariable": "currentMenuDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": {
        "stateId": "bb93536d-668f-4683-95bd-ea547d6051bd",
        "$invalid": false,
        "typeOfStateId": "state"
      },
      "$tags": [
        {
          "id": "blip-tag-95434011-709d-4ae7-80e4-387e9cbba8de",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        }
      ],
      "id": "f86ba324-37b3-49d2-9a8b-37ec4ed2683a",
      "root": false,
      "$title": "askDependentForExclude",
      "$position": { "top": "3336px", "left": "5461.5px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false,
      "invalidOutputs": true,
      "isAiGenerated": false
    },
    "67ca1067-231e-4ded-a91f-23cde8a4dc54": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "a8aa5be5-074f-4ff1-ae4c-dc9456a3a3d1",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false,
          "$$hashKey": "object:4544"
        }
      ],
      "$conditionOutputs": [
        {
          "stateId": "8e4505a5-38e6-42c3-86ea-d5ac9d8daad0",
          "typeOfStateId": "state",
          "$connId": "con_470",
          "$id": "539cccac-4a00-462b-b958-2254c3b95293",
          "conditions": [
            { "source": "input", "comparison": "exists", "values": [], "$$hashKey": "object:4559" }
          ],
          "$invalid": false,
          "$$hashKey": "object:4546"
        }
      ],
      "$enteringCustomActions": [
        {
          "$id": "50665c84-cf41-45c2-9cfe-20070a91cca6",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - userContextJs - update",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "\nfunction run(userContext) {\n  try {\n    userContext = JSON.parse(userContext);\n\n    const { dependentsData, askDependentForExclude } = userContext;\n\n    if (askDependentForExclude) {\n      const checkedDependentsData = dependentsData || [];\n\n      const onlyDependentsWithoutThisCpf = checkedDependentsData.filter(\n        (everyDependent) => everyDependent.askDependentCPF != askDependentForExclude\n      );\n\n      userContext.dependentsData = onlyDependentsWithoutThisCpf;\n    }\n\n    userContext.askDependentForExclude = null;\n  } catch (e) {}\n  return userContext;\n}",
            "inputVariables": ["userContextJs"],
            "outputVariable": "userContextJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": { "stateId": "fallback", "$invalid": false },
      "isAiGenerated": false,
      "$tags": [],
      "id": "67ca1067-231e-4ded-a91f-23cde8a4dc54",
      "root": false,
      "$title": "logicExcludeSpecificDependent",
      "$position": { "top": "4769.75px", "left": "5210.5px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false
    },
    "e5880d13-1782-4267-b7bd-a382f10939e0": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "e8983c5e-791f-48ed-84e8-6df13836d72d",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false,
          "$$hashKey": "object:10395"
        }
      ],
      "$conditionOutputs": [
        {
          "stateId": "{{defaultBlocksIdsJs@invalid}}",
          "typeOfStateId": "variable",
          "$id": "8cd818b8-23a4-4460-8812-8e953b1cad09",
          "conditions": [
            {
              "source": "context",
              "comparison": "exists",
              "values": [],
              "variable": "checkHasEqualityInDependentDataJs@itBroked",
              "$$hashKey": "object:10414"
            }
          ],
          "$invalid": false,
          "$$hashKey": "object:10397"
        },
        {
          "stateId": "a3f57bfe-82e6-477b-9b94-9857693db872",
          "typeOfStateId": "state",
          "$connId": "con_525",
          "$id": "771cd660-b3db-48f6-a48e-6fc0d5d25632",
          "conditions": [
            { "source": "input", "comparison": "exists", "values": [], "$$hashKey": "object:10428" }
          ],
          "$invalid": false,
          "$$hashKey": "object:10398"
        }
      ],
      "$enteringCustomActions": [
        {
          "$id": "f3659420-4520-4ed6-9753-57a0e82ed67f",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - checkHasEqualityInDependentDataJs- CPF",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(userContext, currentStepProcessedJs) {\n  try {\n    const { dependentsData } = JSON.parse(userContext);\n\n    const { inputRegexMatchData } = JSON.parse(currentStepProcessedJs).extras;\n\n    if (dependentsData) {\n      const hasDependentWithThisCpf = dependentsData.find(\n        (everyDependentData) => everyDependentData.askDependentCPF == inputRegexMatchData\n      );\n\n      if (hasDependentWithThisCpf) {\n        throw { message: \"Has this CPF in other dependent\" };\n      }\n    }\n  } catch (e) {\n    return { itBroked: true, brokenMsg: e.message };\n  }\n  return \"isValidData\";\n}",
            "inputVariables": ["userContextJs", "currentStepProcessedJs"],
            "outputVariable": "checkHasEqualityInDependentDataJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": { "stateId": "fallback", "$invalid": false },
      "isAiGenerated": false,
      "$tags": [
        {
          "id": "blip-tag-43520705-6c67-4290-88fc-fcd871689fcf",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        }
      ],
      "id": "e5880d13-1782-4267-b7bd-a382f10939e0",
      "root": false,
      "$title": "checkEqualityInCpfWithOthersDependets",
      "$position": { "top": "2674.75px", "left": "8183.75px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false
    },
    "f60680a4-de38-49b1-9e7c-28c459611ed5": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "a8aa5be5-074f-4ff1-ae4c-dc9456a3a3d1",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User Input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false,
          "$$hashKey": "object:21703"
        }
      ],
      "$conditionOutputs": [
        {
          "stateId": "8e4505a5-38e6-42c3-86ea-d5ac9d8daad0",
          "typeOfStateId": "state",
          "$connId": "con_597",
          "$id": "539cccac-4a00-462b-b958-2254c3b95293",
          "conditions": [
            { "source": "input", "comparison": "exists", "values": [], "$$hashKey": "object:21718" }
          ],
          "$invalid": false,
          "$$hashKey": "object:21705"
        }
      ],
      "$enteringCustomActions": [
        {
          "$id": "50665c84-cf41-45c2-9cfe-20070a91cca6",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "Execute script - userContextJs - update",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(userContext, mountPlansData) {\n  try {\n    userContext = JSON.parse(userContext);\n\n    mountPlansData = JSON.parse(mountPlansData);\n\n    const { idForSeeMorePlan } = userContext;\n\n    const specificPlanData = mountPlansData[idForSeeMorePlan];\n\n    if (specificPlanData) {\n      const {\n        id,\n        name,\n        fidelity,\n        type,\n        personType,\n        optionals,\n        prices,\n        optionalInText,\n        principalOptionalData,\n        extras,\n        customAfterPriceText,\n        lackText,\n        specificLack,\n        footerMsg,\n      } = specificPlanData;\n\n      const dataForAskPlans = {\n        id,\n        name,\n        fidelity,\n        type,\n        personType,\n        // optionals,\n        prices,\n        // optionalInText,\n        // principalOptionalData,\n        // extras,\n        // customAfterPriceText,\n        // lackText,\n        // specificLack,\n        // footerMsg,\n      };\n\n      userContext.askPlans = dataForAskPlans;\n    }\n\n    userContext.idForSeeMorePlan = null;\n  } catch (e) {}\n  return userContext;\n}",
            "inputVariables": ["userContextJs", "mountPlansDataJs"],
            "outputVariable": "userContextJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": { "stateId": "fallback", "$invalid": false },
      "isAiGenerated": false,
      "$tags": [],
      "id": "f60680a4-de38-49b1-9e7c-28c459611ed5",
      "root": false,
      "$title": "logicUpdatePlanAfterSeeMore",
      "$position": { "top": "4454px", "left": "5228.75px" },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false
    }
  },
  "globalActions": {
    "$contentActions": [],
    "$conditionOutputs": [],
    "$enteringCustomActions": [],
    "$leavingCustomActions": [],
    "$inputSuggestions": [],
    "$defaultOutput": { "stateId": "fallback", "$invalid": false },
    "$tags": [],
    "id": "global-actions",
    "$invalidContentActions": false,
    "$invalidOutputs": false,
    "$invalidCustomActions": false,
    "$invalid": false
  },
  "variables":[
       
  ],
  "theme":{
    "general":{
       "font":{
          "type":"Google",
          "family":"Inter"
       }
    },
    "chat":{
       "hostAvatar":{
          "isEnabled":false
       },
       "guestBubbles":{
          "backgroundColor":"#F7F8FF",
          "color":"#303235"
       },
       "buttons":{
          "backgroundColor":"#0d9488"
       }
    }
 },
 "settings":{
  "general":{
     "isBrandingEnabled":true
  },
  "publicShare":{
     "isEnabled":true
  }
}
}
